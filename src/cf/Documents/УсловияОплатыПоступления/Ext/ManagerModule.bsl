#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ВремяДокументаПоУмолчанию() Экспорт
	
	Возврат Новый Структура("Часы, Минуты", 08, 0);
	
КонецФункции

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Справка-расчет "Начисление процентных расходов"
	УчетПроцентовПоОбязательствам.ДобавитьКомандуПечатиНачислениеПроцентныхРасходов(КомандыПечати);
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор  = "Реестр";
	КомандаПечати.Представление  = НСтр("ru = 'Реестр документов'");
	КомандаПечати.ЗаголовокФормы = НСтр("ru = 'Реестр документов ""Условия оплаты поступления""'");
	КомандаПечати.Обработчик     = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм     = "ФормаСписка";
	КомандаПечати.Порядок        = 100;
	
КонецПроцедуры

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура("Информация", "Контрагент");
	
	Возврат Результат;
	
КонецФункции

// Получает описание предопределенных наборов свойств.
//
// Параметры:
//  Наборы - ДеревоЗначений - с колонками:
//     * Имя           - Строка - Имя набора свойств. Формируется из полного имени объекта
//                       метаданных заменой символа "." на "_".
//                       Например, "Документ_ЗаказПокупателя".
//     * Идентификатор - УникальныйИдентификатор - Идентификатор ссылки предопределенного элемента.
//     * Используется  - Неопределено, Булево - Признак того, что набор свойств используется.
//                       Например, можно использовать для скрытия набора по функциональным опциям.
//                       Значение по умолчанию - Неопределено, соответствует значению Истина.
//     * ЭтоГруппа     - Булево - Истина, если набор свойств является группой.
//
Процедура ПриПолученииПредопределенныхНаборовСвойств(Наборы) Экспорт
	
	Набор = Наборы.Строки.Добавить();
	Набор.Имя = "Документ_УсловияОплатыПоступления";
	Набор.Идентификатор = Новый УникальныйИдентификатор("f3bde71a-1abe-4c3e-a39b-1e16bf1c3774");
	Набор.Используется  = УчетнаяПолитика.ПоддерживаетсяДисконтированиеОбязательств();
	
КонецПроцедуры

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ДанныеПоступления(ДокументПоступления, Ссылка, Знач ДатаСведений) Экспорт
	
	ТекДата = ТекущаяДатаСеанса();
	Если Не ЗначениеЗаполнено(ДатаСведений) Тогда
		ДатаСведений = ТекДата;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	УсловияОплатыПоступления.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.УсловияОплатыПоступления КАК УсловияОплатыПоступления
	|ГДЕ
	|	УсловияОплатыПоступления.ДокументОснование = &ДокументПоступления
	|	И УсловияОплатыПоступления.Ссылка <> &Ссылка
	|	И НЕ УсловияОплатыПоступления.ПометкаУдаления
	|	И УсловияОплатыПоступления.Проведен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ПоступлениеТоваровУслуг.Дата, ДЕНЬ) КАК Дата,
	|	ПоступлениеТоваровУслуг.Организация КАК Организация,
	|	ПоступлениеТоваровУслуг.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	ПоступлениеТоваровУслуг.ВидОперации КАК ВидОперации,
	|	ПоступлениеТоваровУслуг.Контрагент КАК Контрагент,
	|	ПоступлениеТоваровУслуг.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ЕСТЬNULL(ПоступлениеТоваровУслуг.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах, ЛОЖЬ) КАК РасчетыВУсловныхЕдиницах,
	|	ЕСТЬNULL(ПоступлениеТоваровУслуг.ДоговорКонтрагента.Валютный, ЛОЖЬ) КАК РасчетыВВалюте,
	|	ПоступлениеТоваровУслуг.ВалютаДокумента КАК ВалютаДокумента,
	|	ПоступлениеТоваровУслуг.СчетУчетаРасчетовСКонтрагентом КАК СчетУчетаРасчетовСКонтрагентом,
	|	ПоступлениеТоваровУслуг.СчетУчетаРасчетовПоАвансам КАК СчетУчетаРасчетовПоАвансам,
	|	ПоступлениеТоваровУслуг.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	ПоступлениеТоваровУслуг.НДСВключенВСтоимость КАК НДСВключенВСтоимость
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг КАК ПоступлениеТоваровУслуг
	|ГДЕ
	|	ПоступлениеТоваровУслуг.Ссылка = &ДокументПоступления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслугОборудование.НомерСтроки КАК НомерСтроки,
	|	ПоступлениеТоваровУслугОборудование.Номенклатура КАК Номенклатура,
	|	ПоступлениеТоваровУслугОборудование.Количество КАК Количество,
	|	ПоступлениеТоваровУслугОборудование.Цена КАК Цена,
	|	ПоступлениеТоваровУслугОборудование.Сумма КАК Сумма,
	|	ВЫБОР
	|		КОГДА ПоступлениеТоваровУслугОборудование.Ссылка.СуммаВключаетНДС
	|			ТОГДА ПоступлениеТоваровУслугОборудование.Сумма
	|		ИНАЧЕ ПоступлениеТоваровУслугОборудование.Сумма + ПоступлениеТоваровУслугОборудование.СуммаНДС
	|	КОНЕЦ КАК СуммаСНДС,
	|	ПоступлениеТоваровУслугОборудование.СтавкаНДС КАК СтавкаНДС,
	|	ПоступлениеТоваровУслугОборудование.СуммаНДС КАК СуммаНДС,
	|	ПоступлениеТоваровУслугОборудование.СчетУчета КАК СчетУчета,
	|	ПоступлениеТоваровУслугОборудование.СпособУчетаНДС КАК СпособУчетаНДС
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Оборудование КАК ПоступлениеТоваровУслугОборудование
	|ГДЕ
	|	ПоступлениеТоваровУслугОборудование.Ссылка = &ДокументПоступления
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоступлениеТоваровУслугТовары.НомерСтроки КАК НомерСтроки,
	|	ПоступлениеТоваровУслугТовары.Номенклатура КАК Номенклатура,
	|	ПоступлениеТоваровУслугТовары.Количество КАК Количество,
	|	ПоступлениеТоваровУслугТовары.Цена КАК Цена,
	|	ПоступлениеТоваровУслугТовары.Сумма КАК Сумма,
	|	ВЫБОР
	|		КОГДА ПоступлениеТоваровУслугТовары.Ссылка.СуммаВключаетНДС
	|			ТОГДА ПоступлениеТоваровУслугТовары.Сумма
	|		ИНАЧЕ ПоступлениеТоваровУслугТовары.Сумма + ПоступлениеТоваровУслугТовары.СуммаНДС
	|	КОНЕЦ КАК СуммаСНДС,
	|	ПоступлениеТоваровУслугТовары.СтавкаНДС КАК СтавкаНДС,
	|	ПоступлениеТоваровУслугТовары.СуммаНДС КАК СуммаНДС,
	|	ПоступлениеТоваровУслугТовары.СчетУчета КАК СчетУчета,
	|	ПоступлениеТоваровУслугТовары.СпособУчетаНДС КАК СпособУчетаНДС
	|ИЗ
	|	Документ.ПоступлениеТоваровУслуг.Товары КАК ПоступлениеТоваровУслугТовары
	|ГДЕ
	|	ПоступлениеТоваровУслугТовары.Ссылка = &ДокументПоступления
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Запрос.УстановитьПараметр("ДокументПоступления", ДокументПоступления);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	Результат = Запрос.ВыполнитьПакет();
	Если Результат[1].Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ЭтоКорректировка = Не Результат[0].Пустой();
	
	ТаблицаРеквизиты = Результат[1].Выгрузить();
	Данные = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ТаблицаРеквизиты[0]);
	
	ТекстИсключения = "";
	Если ЭтоКорректировка Тогда
		ТекстИсключения =
			НСтр("ru = 'Изменение условий оплаты поступления не поддерживается.'");
	ИначеЕсли Данные.ВидОперации <> Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Товары
		И Данные.ВидОперации <> Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Оборудование Тогда
		ТекстИсключения =
			НСтр("ru = 'Условия оплаты можно установить для поступления товаров или оборудования.'");
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекстИсключения) Тогда
		ВызватьИсключение ТекстИсключения;
	КонецЕсли;
	
	Данные.Вставить("СпособОценкиРассрочкиБУ", Перечисления.СпособыОценкиБУ.ПоЦенеБезРассрочки);
	
	Если Данные.ВидОперации = Перечисления.ВидыОперацийПоступлениеТоваровУслуг.Оборудование Тогда
		ТаблицаТМЦ = Результат[2].Выгрузить(); // Оборудование
	Иначе
		ТаблицаТМЦ = Результат[3].Выгрузить(); // Товары
	КонецЕсли;
	
	// Перед загрузкой приводим данные к варианту "НДС в сумме",
	// чтобы пользователю было проще указывать Цену без рассрочки.
	// Т.к. в прайсе, скорее всего, будет указана "с НДС".
	
	ТаблицаДокумента = ТаблицаТМЦ.СкопироватьКолонки();
	
	Для Каждого СтрокаТаблицы Из ТаблицаТМЦ Цикл
		СтрокаДокумента = ТаблицаДокумента.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаДокумента, СтрокаТаблицы);
		Если Не Данные.СуммаВключаетНДС Тогда
			СтрокаДокумента.Сумма = СтрокаДокумента.СуммаСНДС;
			Если СтрокаДокумента.Количество <> 0 Тогда
				СтрокаДокумента.Цена = Окр(СтрокаДокумента.Сумма / СтрокаДокумента.Количество, 2, 1);
			Иначе
				СтрокаДокумента.Цена = СтрокаДокумента.Сумма;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Данные.СуммаВключаетНДС = Истина;
	
	// Из проводок исходного поступления возьмем информацию о зачтенных авансах.
	// А также поищем последующие оплаты, которые прошли до ввода этого документа.
	// Для этого проверим движения по счету расчетов, который задан в исходном поступлении.
	
	ДатаПоступления = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументПоступления, "Дата");
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументПоступления", ДокументПоступления);
	Запрос.УстановитьПараметр("СчетАвансов",         Данные.СчетУчетаРасчетовПоАвансам);
	Запрос.УстановитьПараметр("СчетРасчетов",        Данные.СчетУчетаРасчетовСКонтрагентом);
	Запрос.УстановитьПараметр("ДатаПоступления",     ДатаПоступления);
	Запрос.УстановитьПараметр("ДатаСведений",        КонецДня(ДатаСведений));
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ХозрасчетныйСубконто.Значение ЕСТЬ NULL
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ХозрасчетныйСубконто.Значение
	|	КОНЕЦ КАК ДокументРасчетов,
	|	ВЫБОР
	|		КОГДА Хозрасчетный.СчетКт.Валютный
	|			ТОГДА Хозрасчетный.ВалютнаяСуммаКт
	|		ИНАЧЕ Хозрасчетный.Сумма
	|	КОНЕЦ КАК Сумма
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Субконто КАК ХозрасчетныйСубконто
	|		ПО Хозрасчетный.Регистратор = ХозрасчетныйСубконто.Регистратор
	|			И Хозрасчетный.НомерСтроки = ХозрасчетныйСубконто.НомерСтроки
	|ГДЕ
	|	Хозрасчетный.Период = &ДатаПоступления
	|	И Хозрасчетный.Регистратор = &ДокументПоступления
	|	И Хозрасчетный.СчетКт = &СчетАвансов
	|	И ХозрасчетныйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами)
	|	И ХозрасчетныйСубконто.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияБухгалтерии.Кредит)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Хозрасчетный.Регистратор,
	|	ВЫБОР
	|		КОГДА Хозрасчетный.СчетДт.Валютный
	|			ТОГДА Хозрасчетный.ВалютнаяСуммаДт
	|		ИНАЧЕ Хозрасчетный.Сумма
	|	КОНЕЦ
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Субконто КАК ХозрасчетныйСубконто
	|		ПО Хозрасчетный.Регистратор = ХозрасчетныйСубконто.Регистратор
	|			И Хозрасчетный.НомерСтроки = ХозрасчетныйСубконто.НомерСтроки
	|ГДЕ
	|	Хозрасчетный.Период МЕЖДУ &ДатаПоступления И &ДатаСведений
	|	И Хозрасчетный.Регистратор <> &ДокументПоступления
	|	И Хозрасчетный.СчетДт = &СчетРасчетов
	|	И ХозрасчетныйСубконто.Значение = &ДокументПоступления
	|	И ХозрасчетныйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами)
	|	И ХозрасчетныйСубконто.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияБухгалтерии.Дебет)";
	
	ТаблицаГрафикПлатежей = НовыйТаблицаГрафикПлатежей();
	
	НомерСтроки = 0;
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		НомерСтроки = НомерСтроки + 1;
		НоваяСтрока = ТаблицаГрафикПлатежей.Добавить();
		НоваяСтрока.НомерСтроки = НомерСтроки;
		НоваяСтрока.СуммаПлатежа = Выборка.Сумма;
		Если ЗначениеЗаполнено(Выборка.ДокументРасчетов) Тогда
			НоваяСтрока.ДатаПлатежа = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Выборка.ДокументРасчетов, "Дата");
		КонецЕсли;
	КонецЦикла;
	
	ТаблицаГрафикПлатежей.Сортировать("ДатаПлатежа");
	
	Данные.Вставить("ТМЦ", ТаблицаДокумента);
	Данные.Вставить("ГрафикПлатежей", ТаблицаГрафикПлатежей);
	
	Возврат Данные;
	
КонецФункции

#Область ПодготовкаПараметровПроведенияДокумента

Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт
	
	ВалютаРеглУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	
	ПараметрыПроведения = Новый Структура;
	ПараметрыПроведения.Вставить("ВалютаРеглУчета", ВалютаРеглУчета);
	ПараметрыПроведения.Вставить("ДокументСсылка",  ДокументСсылка);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	
	ПодготовитьПараметрыРеквизитыДокумента(Запрос, ПараметрыПроведения, Отказ);
	Реквизиты = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(ПараметрыПроведения.ТаблицаРеквизиты[0]);
	
	Если Отказ Или Не УчетнаяПолитика.Существует(Реквизиты.Организация, Реквизиты.Период, Истина, ДокументСсылка) Тогда
		Отказ = Истина;
		Возврат ПараметрыПроведения;
	КонецЕсли;
	
	ПодготовитьТаблицыДокументаДляЦелейПриобретенияРеализации(Запрос, Реквизиты);
	
	Для Каждого Колонка Из ПараметрыПроведения.ТаблицаРеквизиты.Колонки Цикл
		Запрос.УстановитьПараметр(Колонка.Имя, Реквизиты[Колонка.Имя]);
	КонецЦикла;
	
	НомераТаблиц = Новый Структура;
	
	Запрос.Текст = ТекстЗапросаРеквизиты(НомераТаблиц)
		+ ТекстЗапросаВременныеТаблицыДокумента(НомераТаблиц)
		+ ТекстЗапросаТаблицыДокумента(НомераТаблиц)
		+ ТекстЗапросаПереоценкаВалютныхОстатков(НомераТаблиц)
		;
	
	Результат = Запрос.ВыполнитьПакет();
	
	Для Каждого НомерТаблицы Из НомераТаблиц Цикл
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
	КонецЦикла;
	
	СтруктураТаблицДокумента = Новый Структура;
	СтруктураТаблицДокумента.Вставить("ТаблицаТМЦ", ПараметрыПроведения.ТаблицаТМЦ);
	ПараметрыПроведения.Вставить("СтруктураТаблицДокумента", СтруктураТаблицДокумента);
	
	Возврат ПараметрыПроведения;
	
КонецФункции

Функция НовыйГрафикПроцентовПоАренде(ТаблицаГрафикПлатежей, ТаблицаТМЦ, ТаблицаРеквизиты) Экспорт
	
	Результат = Новый Структура;
	УчетПроцентовПоОбязательствам.ЗаполнитьГрафикПроцентов(
		Результат, ТаблицаГрафикПлатежей, ТаблицаТМЦ, ТаблицаРеквизиты, "Номенклатура");
	График = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Результат, "График");
	
	Возврат График;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция НовыйТаблицаГрафикПлатежей()
	
	ТаблицаГрафикПлатежей = Новый ТаблицаЗначений;
	ТаблицаГрафикПлатежей.Колонки.Добавить("НомерСтроки",
		ОбщегоНазначения.ОписаниеТипаЧисло(5 ,0, ДопустимыйЗнак.Неотрицательный));
	ТаблицаГрафикПлатежей.Колонки.Добавить("ДатаПлатежа",     ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	ТаблицаГрафикПлатежей.Колонки.Добавить("СуммаПлатежа",    БухгалтерскийУчетКлиентСервер.ТипСумма());
	ТаблицаГрафикПлатежей.Колонки.Добавить("СуммаНДСПлатежа", БухгалтерскийУчетКлиентСервер.ТипСумма());
	
	Возврат ТаблицаГрафикПлатежей;
	
КонецФункции

#Область ТекстыЗапросовПодготовкаПараметровПроведенияДокумента

Процедура ПодготовитьТаблицыДокументаДляЦелейПриобретенияРеализации(Запрос, Реквизиты)
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаТМЦ.Ссылка КАК Ссылка,
	|	ТаблицаТМЦ.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТМЦ.Номенклатура КАК Номенклатура,
	|	ТаблицаТМЦ.Сумма КАК Сумма,
	|	ТаблицаТМЦ.ОценкаБУ КАК ОценкаБУ,
	|	ТаблицаТМЦ.СчетУчета КАК СчетУчета,
	|	ТаблицаТМЦ.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаТМЦ.СуммаНДС КАК НДС,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетУчетаНДС,
	|	ТаблицаТМЦ.СпособУчетаНДС КАК СпособУчетаНДС
	|ИЗ
	|	Документ.УсловияОплатыПоступления.ТМЦ КАК ТаблицаТМЦ
	|ГДЕ
	|	ТаблицаТМЦ.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаТМЦ.НомерСтроки";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ТаблицаТМЦ = РезультатЗапроса.Выгрузить();
	УчетВзаиморасчетов.ПодготовкаТаблицыЗначенийДляЦелейПриобретенияИРеализации(ТаблицаТМЦ, Реквизиты);
	
	ТаблицаТМЦ.ЗаполнитьЗначения(0, "СуммаНУ");
	
	Для Каждого СтрокаТаблицы Из ТаблицаТМЦ Цикл
		Если Реквизиты.РаздельныйУчетНДС Тогда
			НДСВключенВСтоимость = СтрокаТаблицы.СпособУчетаНДС = Перечисления.СпособыУчетаНДС.УчитываетсяВCтоимости;
		Иначе
			НДСВключенВСтоимость = Реквизиты.НДСВключенВСтоимость;
		КонецЕсли;
		
		Если Не Реквизиты.НДСВключенВСтоимость Тогда
			СтрокаТаблицы.Сумма = СтрокаТаблицы.СуммаБезНДС;
			СтрокаТаблицы.СуммаВал = СтрокаТаблицы.СуммаБезНДСВал;
			СтрокаТаблицы.СуммаБУ = СтрокаТаблицы.СуммаБУБезНДС;
		КонецЕсли;
	КонецЦикла;
	
	// Обрабатываем колонки дополнительных сумм
	
	ТаблицаТМЦ.Колонки.Добавить("СуммаВалБУ", ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
	МассивСуммаВал = ?(Реквизиты.НДСВключенВСтоимость,
		ТаблицаТМЦ.ВыгрузитьКолонку("СуммаВал"),
		ТаблицаТМЦ.ВыгрузитьКолонку("СуммаБезНДСВал"));
	ТаблицаТМЦ.ЗагрузитьКолонку(МассивСуммаВал, "СуммаВалБУ");
	
	УчетПроцентовПоОбязательствам.ПодготовитьТаблицуДокументаДляЦелейПриобретенияРеализации(ТаблицаТМЦ, Реквизиты);
	
	Запрос.УстановитьПараметр("ТаблицаТМЦ", ТаблицаТМЦ);
	
КонецПроцедуры

Процедура ПодготовитьПараметрыРеквизитыДокумента(Запрос, ПараметрыПроведения, Отказ)
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.ДокументОснование КАК ДокументПартии,
	|	Реквизиты.Номер КАК Номер,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	ЕСТЬNULL(Реквизиты.ДокументОснование.ПодразделениеОрганизации, ЗНАЧЕНИЕ(Справочник.ПодразделенияОрганизаций.ПустаяСсылка)) КАК ПодразделениеОрганизации,
	|	ЕСТЬNULL(Реквизиты.ДокументОснование.Склад, ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)) КАК Склад,
	|	Реквизиты.Контрагент КАК Контрагент,
	|	Реквизиты.ДоговорКонтрагента.ВидДоговора КАК ВидДоговора,
	|	ЕСТЬNULL(Реквизиты.ДоговорКонтрагента.РасчетыВУсловныхЕдиницах, ЛОЖЬ) КАК РасчетыВУсловныхЕдиницах,
	|	ЕСТЬNULL(Реквизиты.ДоговорКонтрагента.Валютный, ЛОЖЬ) КАК РасчетыВВалюте,
	|	Реквизиты.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Реквизиты.Ссылка КАК Ссылка,
	|	Реквизиты.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	Реквизиты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	Реквизиты.КурсВзаиморасчетов КАК КурсВзаиморасчетов,
	|	Реквизиты.КратностьВзаиморасчетов КАК КратностьВзаиморасчетов,
	|	Реквизиты.НДСВключенВСтоимость КАК НДСВключенВСтоимость,
	|	ВЫРАЗИТЬ(""Проценты по рассрочке"" КАК СТРОКА(150)) КАК Содержание,
	|	Реквизиты.СтавкаДисконтирования КАК СтавкаДисконтирования,
	|	Реквизиты.СпособОценкиРассрочкиБУ КАК СпособОценкиРассрочкиБУ,
	|	Реквизиты.СтоимостьОбязательства КАК СтоимостьОбязательства,
	|	Реквизиты.АвансовыеПлатежи КАК АвансовыеПлатежи
	|ПОМЕСТИТЬ Реквизиты
	|ИЗ
	|	Документ.УсловияОплатыПоступления КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Период КАК Период,
	|	Реквизиты.Номер КАК Номер,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	Реквизиты.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	Реквизиты.ДокументПартии КАК ДокументПартии,
	|	Реквизиты.Склад КАК Склад,
	|	Реквизиты.Контрагент КАК Контрагент,
	|	Реквизиты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	Реквизиты.ВидДоговора КАК ВидДоговора,
	|	Реквизиты.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	Реквизиты.РасчетыВВалюте КАК РасчетыВВалюте,
	|	Реквизиты.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Реквизиты.Ссылка КАК Ссылка,
	|	Реквизиты.СуммаВключаетНДС КАК СуммаВключаетНДС,
	|	Реквизиты.КурсВзаиморасчетов КАК КурсВзаиморасчетов,
	|	Реквизиты.КратностьВзаиморасчетов КАК КратностьВзаиморасчетов,
	|	Реквизиты.НДСВключенВСтоимость КАК НДСВключенВСтоимость,
	|	Реквизиты.Содержание КАК Содержание,
	|	Реквизиты.СтавкаДисконтирования КАК СтавкаДисконтирования,
	|	Реквизиты.СпособОценкиРассрочкиБУ КАК СпособОценкиРассрочкиБУ,
	|	Реквизиты.СтоимостьОбязательства КАК СтоимостьОбязательства,
	|	1 КАК КоэффициентРуб,
	|	1 КАК КурсДокумента,
	|	1 КАК КратностьДокумента,
	|	ЛОЖЬ КАК РаздельныйУчетНДС,
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаРеглУчета,
	|	Реквизиты.АвансовыеПлатежи КАК АвансовыеПлатежи
	|ИЗ
	|	Реквизиты КАК Реквизиты";
	
	ТаблицаРеквизиты = Запрос.Выполнить().Выгрузить();
	Реквизиты = ТаблицаРеквизиты[0];
	
	Реквизиты.РаздельныйУчетНДС = УчетнаяПолитика.РаздельныйУчетНДСНаСчете19(Реквизиты.Организация, Реквизиты.Период);
	Реквизиты.ВалютаРеглУчета = ПараметрыПроведения.ВалютаРеглУчета;
	
	Если Реквизиты.ВалютаВзаиморасчетов = ПараметрыПроведения.ВалютаРеглУчета Тогда
		Реквизиты.КурсВзаиморасчетов = 1;
		Реквизиты.КурсВзаиморасчетов = 1;
		КоэффициентРуб = 1;
	Иначе
		СтруктураКурсаДокумента = РаботаСКурсамиВалют.ПолучитьКурсВалюты(Реквизиты.ВалютаДокумента, Реквизиты.Период);
		
		Если СтруктураКурсаДокумента.Кратность = 0 Тогда
			Отказ           = Истина;
			ШаблонСообщения = НСтр("ru = 'Документ %1 не может быть проведен.
				|Не задана кратность валюты %2 на дату %3'");
			ТекстСообщения  = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ШаблонСообщения, Реквизиты.Ссылка, Реквизиты.ВалютаДокумента, Формат(Реквизиты.Период, "ДФ=dd.MM.yy"));
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ПараметрыПроведения.ДокументСсылка);
			ПараметрыПроведения.Вставить("ТаблицаРеквизиты", ТаблицаРеквизиты);
			
			Возврат;
		КонецЕсли;
		
		Реквизиты.КурсДокумента = Реквизиты.КурсВзаиморасчетов;
		Реквизиты.КратностьДокумента = Реквизиты.КратностьВзаиморасчетов;
		КоэффициентРуб = Реквизиты.КурсВзаиморасчетов / Реквизиты.КратностьВзаиморасчетов;
	КонецЕсли;
	
	Если Реквизиты.ВалютаВзаиморасчетов = Реквизиты.ВалютаДокумента Тогда
		Реквизиты.КурсВзаиморасчетов = 1;
		Реквизиты.КурсВзаиморасчетов = 1;
		КоэффициентВзаиморасчетов = 1;
	Иначе
		КоэффициентВзаиморасчетов = (Реквизиты.КурсВзаиморасчетов / Реквизиты.КратностьВзаиморасчетов) / КоэффициентРуб;
	КонецЕсли;
	
	ПараметрыПроведения.Вставить("ТаблицаРеквизиты", ТаблицаРеквизиты);
	
КонецПроцедуры

Функция ТекстЗапросаВременныеТаблицыДокумента(НомераТаблиц)
	
	НомераТаблиц.Вставить("ВременнаяТаблицаТМЦ", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаТМЦ.Ссылка КАК Ссылка,
	|	ТаблицаТМЦ.НомерСтроки КАК НомерСтроки,
	|	ТаблицаТМЦ.Номенклатура КАК Номенклатура,
	|	&ПодразделениеОрганизации КАК РеквизитыПодразделениеОрганизации,
	|	&ПодразделениеОрганизации КАК РеквизитыПодразделениеКт,
	|	&Контрагент КАК РеквизитыКонтрагент,
	|	&ДоговорКонтрагента КАК РеквизитыДоговор,
	|	&СтавкаДисконтирования КАК РеквизитыСтавкаДисконтирования,
	|	ТаблицаТМЦ.Сумма КАК СуммаРуб,
	|	ТаблицаТМЦ.СуммаБезНДС КАК СуммаБезНДСРуб,
	|	ТаблицаТМЦ.НДСВал КАК СуммаНДСВзаиморасчетов,
	|	ТаблицаТМЦ.НДС КАК СуммаНДСРуб,
	|	ТаблицаТМЦ.СуммаВал КАК СуммаВзаиморасчетов,
	|	ТаблицаТМЦ.СуммаВалБУ КАК СуммаВалБУ,
	|	ТаблицаТМЦ.СуммаБУ КАК СуммаБУ,
	|	ТаблицаТМЦ.СуммаНУ КАК СуммаНУ,
	|	ТаблицаТМЦ.ОценкаБУ КАК ОценкаБУ,
	|	ТаблицаТМЦ.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаТМЦ.СчетУчета КАК СчетУчета,
	|	ТаблицаТМЦ.СчетУчетаНДС КАК СчетУчетаНДС,
	|	ТаблицаТМЦ.СпособУчетаНДС КАК СпособУчетаНДС
	|ПОМЕСТИТЬ ТаблицаТМЦ
	|ИЗ
	|	&ТаблицаТМЦ КАК ТаблицаТМЦ";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаТаблицыДокумента(НомераТаблиц)
	
	НомераТаблиц.Вставить("ТаблицаТМЦ", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ТаблицаГрафикПлатежей", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	""ТМЦ"" КАК ИмяСписка,
	|	ТМЦ.Ссылка КАК Ссылка,
	|	ВЫБОР
	|		КОГДА &РасчетыВУсловныхЕдиницах
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПроцентыПоРассрочкеУЕ)
	|		КОГДА &РасчетыВВалюте
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПроцентыПоРассрочкеВал)
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПроцентыПоРассрочке)
	|	КОНЕЦ КАК СчетРассрочки,
	|	ТМЦ.НомерСтроки КАК НомерСтроки,
	|	ТМЦ.Номенклатура КАК Номенклатура,
	|	ТМЦ.СуммаВзаиморасчетов КАК СуммаВзаиморасчетов,
	|	ТМЦ.СуммаРуб - ТМЦ.СуммаБУ КАК ПроцентПоРассрочкеРуб,
	|	ТМЦ.СуммаВзаиморасчетов - ТМЦ.СуммаВалБУ КАК ПроцентПоРассрочкеВал,
	|	ТМЦ.СчетУчета КАК СчетУчета,
	|	ТМЦ.СуммаРуб КАК СуммаРуб,
	|	ТМЦ.СуммаБезНДСРуб КАК СуммаБезНДСРуб,
	|	ТМЦ.СуммаНДСВзаиморасчетов КАК СуммаНДСВзаиморасчетов,
	|	ТМЦ.СуммаНДСРуб КАК СуммаНДСРуб,
	|	ТМЦ.СуммаВалБУ КАК СуммаВалБУ,
	|	ТМЦ.СуммаБезНДСРуб КАК СуммаБУ,
	|	ТМЦ.СуммаНУ КАК СуммаНУ,
	|	ТМЦ.СтавкаНДС КАК СтавкаНДС,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетУчетаНДС,
	|	ТМЦ.СпособУчетаНДС КАК СпособУчетаНДС
	|ИЗ
	|	ТаблицаТМЦ КАК ТМЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГрафикПлатежей.НомерСтроки КАК НомерСтроки,
	|	ГрафикПлатежей.ДатаПлатежа КАК ДатаПлатежа,
	|	ГрафикПлатежей.СуммаПлатежа КАК СуммаПлатежа,
	|	ГрафикПлатежей.СуммаНДСПлатежа КАК СуммаНДСПлатежа,
	|	ВЫБОР
	|		КОГДА ГрафикПлатежей.Ссылка.НДСВключенВСтоимость
	|			ТОГДА ГрафикПлатежей.СуммаПлатежа
	|		ИНАЧЕ ГрафикПлатежей.СуммаПлатежа - ГрафикПлатежей.СуммаНДСПлатежа
	|	КОНЕЦ КАК СуммаБезНДСПлатежа
	|ИЗ
	|	Документ.УсловияОплатыПоступления.ГрафикПлатежей КАК ГрафикПлатежей
	|ГДЕ
	|	ГрафикПлатежей.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаПлатежа,
	|	НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаРеквизиты(НомераТаблиц)
	
	НомераТаблиц.Вставить("Реквизиты", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Период КАК Период,
	|	Реквизиты.Номер КАК Номер,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	Реквизиты.КурсВзаиморасчетов КАК Курс,
	|	Реквизиты.КратностьВзаиморасчетов КАК Кратность,
	|	Реквизиты.НДСВключенВСтоимость КАК НДСВключенВСтоимость,
	|	Реквизиты.ПодразделениеОрганизации КАК Подразделение,
	|	Реквизиты.ПодразделениеОрганизации КАК ПодразделениеДт,
	|	Реквизиты.ПодразделениеОрганизации КАК ПодразделениеКт,
	|	Реквизиты.Контрагент КАК Контрагент,
	|	Реквизиты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	&ДокументПартии КАК ДокументПартии,
	|	&Склад КАК Склад,
	|	Реквизиты.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	Реквизиты.РасчетыВУсловныхЕдиницах КАК РасчетыВУсловныхЕдиницах,
	|	Реквизиты.РасчетыВВалюте КАК РасчетыВВалюте,
	|	Реквизиты.СпособОценкиРассрочкиБУ КАК СпособОценкиРассрочкиБУ,
	|	Реквизиты.СтавкаДисконтирования КАК СтавкаДисконтирования,
	|	Реквизиты.СтоимостьОбязательства КАК СтоимостьОбязательства,
	|	Реквизиты.АвансовыеПлатежи КАК АвансовыеПлатежи,
	|	Реквизиты.Содержание КАК Содержание,
	|	ЛОЖЬ КАК ПереходНаФСБУ25,
	|	ЛОЖЬ КАК ИзменениеУсловий,
	|	""ТМЦ"" КАК ИмяСписка
	|ИЗ
	|	Реквизиты КАК Реквизиты";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаПереоценкаВалютныхОстатков(НомераТаблиц)
	
	НомераТаблиц.Вставить("ПереоценкаВалютныхОстатковРеквизиты", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Период КАК Период,
	|	Реквизиты.Организация,
	|	Реквизиты.ВалютаДокумента
	|ИЗ
	|	Реквизиты КАК Реквизиты";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли