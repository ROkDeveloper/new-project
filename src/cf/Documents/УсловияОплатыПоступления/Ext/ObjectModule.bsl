#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ДокументОснование = Неопределено;
	
	Если ЗначениеЗаполнено(ДанныеЗаполнения) Тогда
		
		ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
		Если ТипДанныхЗаполнения <> Тип("Структура")
			И Метаданные().ВводитсяНаОсновании.Содержит(ДанныеЗаполнения.Метаданные()) Тогда
			ДокументОснование = ДанныеЗаполнения;
		ИначеЕсли ТипДанныхЗаполнения = Тип("Структура")
			И ДанныеЗаполнения.Свойство("Основание")
			И Метаданные().ВводитсяНаОсновании.Содержит(ДанныеЗаполнения.Основание.Метаданные()) Тогда
			ДокументОснование = ДанныеЗаполнения.Основание;
		КонецЕсли;
		
	КонецЕсли;
	
	ЗаполнитьПоПоступлениюТоваровУслуг(ДокументОснование);
	
	ЗаполнениеДокументов.Заполнить(ЭтотОбъект, ДанныеЗаполнения);
	
	Если ЗначениеЗаполнено(ДокументОснование) Тогда
		Возврат;
	КонецЕсли;
	
	ПрименяетсяФСБУ25 = УчетнаяПолитика.ПрименяетсяФСБУ25(Организация, Дата);
	
	ПлательщикНалогаНаПрибыль = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Организация, Дата);
	
	СпособОценкиРассрочкиБУ = Перечисления.СпособыОценкиБУ.ПоЦенеБезРассрочки;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Дата = НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя());
	Ответственный = Пользователи.ТекущийПользователь();
	
	СтруктураКурсаВзаиморасчетов = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаДокумента, Дата);
	
	КурсВзаиморасчетов      = СтруктураКурсаВзаиморасчетов.Курс;
	КратностьВзаиморасчетов = СтруктураКурсаВзаиморасчетов.Кратность;
	
	ЗаполнениеДокументов.ПриКопировании(ЭтотОбъект, ОбъектКопирования);
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив();
	
	Если НЕ ПолучитьФункциональнуюОпцию("ВестиУчетПоДоговорам") Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ДоговорКонтрагента");
	КонецЕсли;
	
	Если СпособОценкиРассрочкиБУ = Перечисления.СпособыОценкиБУ.РассчитываетсяПоСтавке Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ТМЦ.ЦенаБезРассрочки");
	КонецЕсли;
	
	Если СпособОценкиРассрочкиБУ = Перечисления.СпособыОценкиБУ.ПоЦенеБезРассрочки Тогда
		МассивНепроверяемыхРеквизитов.Добавить("СтавкаДисконтирования");
	КонецЕсли;
	
	ПроверятьОценкуБУ = МассивНепроверяемыхРеквизитов.Найти("ТМЦ.ЦенаБезРассрочки") = Неопределено;
	Если ПроверятьОценкуБУ Тогда
		Для Каждого СтрокаТаблицы Из ТМЦ Цикл
			Префикс = "ТМЦ[%1].";
			Префикс = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				Префикс, Формат(СтрокаТаблицы.НомерСтроки - 1, "ЧН=0; ЧГ="));
			ИмяСписка = НСтр("ru = 'ТМЦ'");
			
			Если СтрокаТаблицы.Цена < СтрокаТаблицы.ЦенаБезРассрочки Тогда
				Поле = Префикс + "ЦенаБезРассрочки";
				ИмяПоля = НСтр("ru = 'Цена без рассрочки'");
				ТекстОшибки = НСтр("ru = 'Цена без рассрочки должна быть не больше цены по договору.'");
				ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения(
					"Колонка", "Корректность", ИмяПоля, СтрокаТаблицы.НомерСтроки, ИмяСписка, ТекстОшибки);
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ИтогСуммаПлатежа = ГрафикПлатежей.Итог("СуммаПлатежа");
	ИтогСуммаДокумента = УчетНДСПереопределяемый.ПолучитьСуммуДокументаСНДС(ЭтотОбъект);
	Если ИтогСуммаПлатежа <> 0 И ИтогСуммаДокумента <> 0 И ИтогСуммаПлатежа <> ИтогСуммаДокумента Тогда
		ТекстСообщения = СтрШаблон(НСтр("ru = 'Сумма по графику платежей (%1) отличается от суммы документа (%2).'"),
			Формат(ИтогСуммаПлатежа, "ЧДЦ=2"), Формат(ИтогСуммаДокумента, "ЧДЦ=2"));
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, , "Объект", Отказ);
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)

	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеСвойства.Вставить("РежимЗаписи", РежимЗаписи);
	
	// При групповом перепроведении реквизиты документов не меняются,
	// поэтому обновление связанных данных выполнять не требуется.
	Если ПроведениеСервер.ГрупповоеПерепроведение(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	РаботаСДоговорамиКонтрагентовБП.ЗаполнитьДоговорПередЗаписью(ЭтотОбъект);
	
	// Посчитать суммы документа и записать ее в соответствующий реквизит шапки для показа в журналах
	СуммаДокумента = УчетНДСПереопределяемый.ПолучитьСуммуДокументаСНДС(ЭтотОбъект, "ТМЦ");
	
	УчетПроцентовПоОбязательствам.ЗаполнитьДанныеДисконтированияОбязательстваПоРассрочке(ЭтотОбъект, Отказ, РежимЗаписи);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)
	
	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ДОКУМЕНТА
	
	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	Если РучнаяКорректировка Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыПроведения = Документы.УсловияОплатыПоступления.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ИНФОРМАЦИОННОЙ БАЗЫ (АНАЛИЗ ОСТАТКОВ И Т.П.)
	
	ТаблицаРеквизиты = ПараметрыПроведения.Реквизиты;
	ТаблицаТМЦ = ПараметрыПроведения.ТаблицаТМЦ;
	
	ТаблицаНовыйГрафик = Документы.УсловияОплатыПоступления.НовыйГрафикПроцентовПоАренде(
		ПараметрыПроведения.ТаблицаГрафикПлатежей, ТаблицаТМЦ, ТаблицаРеквизиты);
	
	Реквизиты = ТаблицаРеквизиты[0];
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// ФОРМИРОВАНИЕ ДВИЖЕНИЙ
	
	УчетПроцентовПоОбязательствам.СформироватьДвиженияПроцентыПоРассрочке(
		ТаблицаТМЦ, ПараметрыПроведения.Реквизиты, Движения, Отказ);
	
	// Новый график процентных расходов
	УчетПроцентовПоОбязательствам.СформироватьДвиженияГрафикиПроцентныхРасходов(
		ТаблицаНовыйГрафик, ТаблицаРеквизиты, Движения, Отказ);
	
	// Переоценка валютных остатков - после формирования проводок всеми другими механизмами
	
	ТаблицаПереоценка = УчетДоходовРасходов.ПодготовитьТаблицуПереоценкаВалютныхОстатковПоПроводкамДокумента(
		ПараметрыПроведения.ПереоценкаВалютныхОстатковРеквизиты, Движения, Отказ);
	
	УчетДоходовРасходов.СформироватьДвиженияРасчетПереоценкиВалютныхСредств(ТаблицаПереоценка,
		ПараметрыПроведения.ПереоценкаВалютныхОстатковРеквизиты, Движения, Отказ);
	
	УчетДоходовРасходов.СформироватьДвиженияПереоценкаВалютныхОстатков(ТаблицаПереоценка,
		ПараметрыПроведения.ПереоценкаВалютныхОстатковРеквизиты, Движения, Отказ);
	
	Движения.Хозрасчетный.ЗаполнитьСуммыВременныхРазниц();
	
	ПроведениеСервер.УстановитьЗаписьОчищаемыхНаборовЗаписей(ЭтотОбъект);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)

	ПроведениеСервер.ПодготовитьНаборыЗаписейКОтменеПроведения(ЭтотОбъект);
	Движения.Записать();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьПоПоступлениюТоваровУслуг(Основание)
	
	Если Не ЗначениеЗаполнено(Основание)
		Или ТипЗнч(Основание) <> Тип("ДокументСсылка.ПоступлениеТоваровУслуг") Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеОснования = Документы.УсловияОплатыПоступления.ДанныеПоступления(Основание, Ссылка, Дата);
	Дата = ДанныеОснования.Дата;
	
	ЗаполнениеДокументов.ЗаполнитьПоОснованию(ЭтотОбъект, Основание);
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеОснования, , "ТМЦ, ГрафикПлатежей");
	
	ТМЦ.Загрузить(ДанныеОснования.ТМЦ);
	ГрафикПлатежей.Загрузить(ДанныеОснования.ГрафикПлатежей);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли