
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.ВерсионированиеОбъектов
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Ключ.Пустая() Тогда
		ПодготовитьФормуНаСервере(Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	ОбщегоНазначенияБПКлиент.ОбработкаОповещенияФормыДокумента(ЭтотОбъект, Объект.Ссылка, ИмяСобытия, Параметр, Источник);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	// СтандартныеПодсистемы.ДатыЗапретаИзменения
	ДатыЗапретаИзменения.ОбъектПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.ДатыЗапретаИзменения
	
	ПодготовитьФормуНаСервере();
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ПроведениеСервер.УстановитьПризнакПроверкиРеквизитов(Отказ, ТекущийОбъект, ПараметрыЗаписи);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	УправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
	ЗаполнитьДобавленныеКолонкиТаблиц();
	
	УстановитьСостояниеДокумента();
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	ПроцентыПоОбязательствамФормыКлиент.ОбработкаВыбора(
		ЭтотОбъект, ВыбранноеЗначение, ИсточникВыбора, "СпособОценкиРассрочкиБУ");
	
	КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДатаПриИзменении(Элемент)
	
	ДатаПриИзмененииНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		ОрганизацияПриИзмененииНаСервере();
	Иначе
		ОчиститьДанныеДокумента();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СпособОценкиРассрочкиБУПриИзменении(Элемент)
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьГрафикПлатежейНажатие(Элемент, СтандартнаяОбработка)
	Перем ПараметрыФормы;
	
	ПроцентыПоОбязательствамФормыКлиент.ПолучитьПараметрыФормыГрафикПлатежейДляРассрочки(ЭтотОбъект, ПараметрыФормы);
	ПроцентыПоОбязательствамФормыКлиент.НадписьГрафикПлатежейНажатие(ЭтотОбъект, СтандартнаяОбработка, ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура ДокументОснованиеПриИзменении(Элемент)
	
	ЗаполнитьПоПоступлениюНаСервере();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТМЦ

&НаКлиенте
Процедура ТМЦПриИзменении(Элемент)
	
	Строка = Элементы.ТМЦ.ТекущиеДанные;
	
	ОценкаБУ = Строка.ЦенаБезРассрочки * Строка.Количество;
	
	Если Объект.СуммаВключаетНДС Тогда
		ОценкаБУНДС = УчетНДСКлиентСервер.РассчитатьСуммуНДС(
			ОценкаБУ, Объект.СуммаВключаетНДС, УчетНДСВызовСервераПовтИсп.ПолучитьСтавкуНДС(Строка.СтавкаНДС));
		Строка.ОценкаБУ = ОценкаБУ - ОценкаБУНДС;
	Иначе
		Строка.ОценкаБУ = ОценкаБУ;
	КонецЕсли;
	
	ОбновитьИтоги(ЭтотОбъект);
	ПроцентыПоОбязательствамФормыКлиентСервер.СформироватьНадписьГрафикПлатежей(ЭтотОбъект, "СпособОценкиРассрочкиБУ");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПодготовитьФормуНаСервере(ЭтоНовыйДокумент = Ложь)
	
	УстановитьСостояниеДокумента();
	
	ТекущаяДатаДокумента = Объект.Дата;
	
	ЕстьВалютныйУчет = БухгалтерскийУчетПереопределяемый.ИспользоватьВалютныйУчет();
	ВалютаРегламентированногоУчета = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета();
	
	ПолучитьРеквизитыДоговора();
	
	ЗаполнитьСписокВыбораСпособОценкиРассрочкиБУИзменение(ЭтотОбъект);
	
	ЗаполнитьДобавленныеКолонкиТаблиц();
	УправлениеФормой(ЭтотОбъект);
	
	Если ЭтоНовыйДокумент Тогда
		ПоСтавке = ПроцентыПоОбязательствамФормыКлиентСервер.ОценкаРассчитываетсяПоСтавке(
			ЭтотОбъект, "СпособОценкиРассрочкиБУ");
	КонецЕсли;
	
	ТекущаяОрганизация = Объект.Организация;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьСписокВыбораСпособОценкиРассрочкиБУИзменение(Форма)
	
	Элементы = Форма.Элементы;
	
	Элементы.СпособОценкиРассрочкиБУ.СписокВыбора.Очистить();
	Элементы.СпособОценкиРассрочкиБУ.СписокВыбора.Добавить(
		ПредопределенноеЗначение("Перечисление.СпособыОценкиБУ.ПоЦенеБезРассрочки"));
	Элементы.СпособОценкиРассрочкиБУ.СписокВыбора.Добавить(
		ПредопределенноеЗначение("Перечисление.СпособыОценкиБУ.РассчитываетсяПоСтавке"));
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСостояниеДокумента()
	
	СостояниеДокумента = ОбщегоНазначенияБП.СостояниеДокумента(Объект);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДобавленныеКолонкиТаблиц()
	
	ПараметрыОбъекта = Новый Структура;
	ПараметрыОбъекта.Вставить("СуммаВключаетНДС", Объект.СуммаВключаетНДС);
	
	Для Каждого СтрокаТаблицы Из Объект.ТМЦ Цикл
		ЗаполнитьДобавленныеКолонкиСтрокиТаблицы(СтрокаТаблицы, ПараметрыОбъекта);
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьДобавленныеКолонкиСтрокиТаблицы(СтрокаТаблицы, ПараметрыОбъекта)
	
	СтрокаТаблицы.Всего = СтрокаТаблицы.Сумма + ?(ПараметрыОбъекта.СуммаВключаетНДС, 0, СтрокаТаблицы.СуммаНДС);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	Объект   = Форма.Объект;
	
	Элементы.ПодразделениеОрганизации.Доступность = ЗначениеЗаполнено(Объект.Организация);
	Элементы.ДоговорКонтрагента.Доступность = ЗначениеЗаполнено(Объект.Организация)
		И ЗначениеЗаполнено(Объект.Контрагент);
	
	ПоСтавке = ПроцентыПоОбязательствамФормыКлиентСервер.ОценкаРассчитываетсяПоСтавке(Форма, "СпособОценкиРассрочкиБУ");
	
	Элементы.ГруппаСтавкаДисконтирования.Видимость = ПоСтавке;
	
	Элементы.ТМЦ.Видимость = Не ПоСтавке;
	Элементы.ГруппаИтогиПраво.Видимость = Не ПоСтавке;
	Элементы.ГруппаИтогиЛево.Видимость = ПоСтавке;
	
	ЭтоНовыйВводНаОсновании = Форма.Параметры.Ключ.Пустая()
		И ЗначениеЗаполнено(Объект.ДокументОснование);
	
	Элементы.ДекорацияПодсказка.Видимость = ЭтоНовыйВводНаОсновании И Не ПоСтавке;
	
	ОбновитьИтоги(Форма);
	
	ПроцентыПоОбязательствамФормыКлиентСервер.СформироватьНадписьГрафикПлатежей(Форма, "СпособОценкиРассрочкиБУ");
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьИтоги(Форма)
	
	Объект = Форма.Объект;
	Форма.Всего = Объект.ТМЦ.Итог("Всего");
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	ПроцентыПоОбязательствамФормы.УстановитьУсловноеОформление(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ДатаПриИзмененииНаКлиенте()
	
	Если НачалоДня(Объект.Дата) = НачалоДня(ТекущаяДатаДокумента) Тогда
		// Изменение времени не влияет на поведение документа.
		ТекущаяДатаДокумента = Объект.Дата;
		Возврат;
	КонецЕсли;
	
	// Общие проверки условий по датам.
	ТребуетсяВызовСервера = ОбщегоНазначенияБПКлиент.ТребуетсяВызовСервераПриИзмененииДатыДокумента(
		Объект.Дата, ТекущаяДатаДокумента, Объект.ВалютаДокумента, ВалютаРегламентированногоУчета);
	
	// Если определили, что изменение даты может повлиять на какие-либо параметры, 
	// то передаем обработку на сервер.
	Если ТребуетсяВызовСервера Тогда
		ДатаПриИзмененииНаСервере();
	КонецЕсли;
	
	// Запомним новую дату документа.
	ТекущаяДатаДокумента = Объект.Дата;
	
КонецПроцедуры

&НаСервере
Процедура ДатаПриИзмененииНаСервере()
	
	ДатаОбработатьИзменение();
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ДатаОбработатьИзменение()
	
	УстановитьКурсКратность();
	
КонецПроцедуры

&НаСервере
Процедура ОрганизацияПриИзмененииНаСервере()
	
	ОрганизацияОбработатьИзменение();
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьДанныеДокумента()
	
	Объект.Контрагент = Неопределено;
	Объект.ДокументОснование = Неопределено;
	Объект.СтавкаДисконтирования = 0;
	Объект.ТМЦ.Очистить();
	Объект.ГрафикПлатежей.Очистить();
	
КонецПроцедуры

&НаСервере
Процедура ОрганизацияОбработатьИзменение()
	
	Если Объект.Организация = ТекущаяОрганизация Тогда
		Возврат;
	КонецЕсли;
	
	// Выполняем общие действия для всех документов при изменении Организация.
	ЗаполнениеДокументов.ПриИзмененииЗначенияОрганизации(Объект, Пользователи.ТекущийПользователь());
	
	ОчиститьДанныеДокумента();
	
	ТекущаяОрганизация = Объект.Организация
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьРеквизитыДоговора()
	
	Если ЗначениеЗаполнено(Объект.ДоговорКонтрагента) Тогда
		РеквизитыДоговора = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			Объект.ДоговорКонтрагента, "ВалютаВзаиморасчетов, РасчетыВУсловныхЕдиницах");
		РасчетыВУЕ = РеквизитыДоговора.РасчетыВУсловныхЕдиницах;
		ВалютаВзаиморасчетов = РеквизитыДоговора.ВалютаВзаиморасчетов;
	Иначе
		РасчетыВУЕ = Ложь;
		ВалютаВзаиморасчетов = ВалютаРегламентированногоУчета;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьКурсКратность()
	
	Если ВалютаВзаиморасчетов = ВалютаРегламентированногоУчета Тогда
		Объект.КурсВзаиморасчетов = 1;
		Объект.КратностьВзаиморасчетов = 1;
	Иначе
		СтруктураКурса = РаботаСКурсамиВалют.ПолучитьКурсВалюты(ВалютаВзаиморасчетов, Объект.Дата);
		Объект.КурсВзаиморасчетов = СтруктураКурса.Курс;
		Объект.КратностьВзаиморасчетов = СтруктураКурса.Кратность;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоПоступлениюНаСервере()
	
	Если Не ЗначениеЗаполнено(Объект.ДокументОснование) Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеОснования = Документы.УсловияОплатыПоступления.ДанныеПоступления(
		Объект.ДокументОснование, Объект.Ссылка, Объект.Дата);
	
	Если ЗначениеЗаполнено(Объект.СпособОценкиРассрочкиБУ) Тогда
		ЗаполнитьЗначенияСвойств(Объект, ДанныеОснования, , "СпособОценкиРассрочкиБУ, ТМЦ, ГрафикПлатежей");
	Иначе
		ЗаполнитьЗначенияСвойств(Объект, ДанныеОснования, , "ТМЦ, ГрафикПлатежей");
	КонецЕсли;
	
	Объект.ТМЦ.Загрузить(ДанныеОснования.ТМЦ);
	Объект.ГрафикПлатежей.Загрузить(ДанныеОснования.ГрафикПлатежей);
	
	ЗаполнитьДобавленныеКолонкиТаблиц();
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ БСП

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти
