#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ВремяДокументаПоУмолчанию() Экспорт
	
	Возврат Новый Структура("Часы, Минуты", 17, 0);
	
КонецФункции

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	ИЛИ ЗначениеРазрешено(ОрганизацияОтправитель)
	|;
	|РазрешитьИзменениеЕслиРазрешеноЧтение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

////////////////////////////////////////////////////////////////////////////////
// Проведение. Подготовка параметров проведения документа

Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт
	
	ПараметрыПроведения = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", 			ДокументСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация
	|ИЗ
	|	Документ.АвизоРасчетыВходящее КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка";

	Результат    = Запрос.Выполнить();
	
	Реквизиты       = ОбщегоНазначенияБПВызовСервера.ПолучитьСтруктуруИзРезультатаЗапроса(Результат);
	
	Если НЕ УчетнаяПолитика.Существует(Реквизиты.Организация, Реквизиты.Период, Истина, ДокументСсылка) Тогда
		Отказ = Истина;
		Возврат ПараметрыПроведения;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("СодержаниеПроводки",		 НСтр("ru = 'Прием задолженности по авизо'"));
	Запрос.УстановитьПараметр("ПрименениеПБУ18", 		 УчетнаяПолитика.ПоддержкаПБУ18(Реквизиты.Организация, Реквизиты.Период));
	Запрос.УстановитьПараметр("ОтражатьВНалоговомУчете", УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Реквизиты.Организация, Реквизиты.Период));
	Запрос.УстановитьПараметр("Период",                  Реквизиты.Период);
	
	НомераТаблиц = Новый Структура;
	
	Запрос.Текст = ТекстЗапросаРеквизитыДокумента(НомераТаблиц)
		+ ТекстЗапросаСуммыДолга(НомераТаблиц)
		+ ТекстЗапросаПереоценкаВалютныхОстатков(НомераТаблиц)
		+ ТекстЗапросаРегистрацияОтложенныхРасчетовСКонтрагентами(НомераТаблиц, ПараметрыПроведения, Реквизиты);
	
	Результат = Запрос.ВыполнитьПакет();
	
	Для каждого НомерТаблицы Из НомераТаблиц Цикл
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
	КонецЦикла;
	
	Возврат ПараметрыПроведения;
	
КонецФункции

Функция ТекстЗапросаРеквизитыДокумента(НомераТаблиц = Неопределено)
	
	НомераТаблиц.Вставить("ВТ_Реквизиты", НомераТаблиц.Количество());	
	НомераТаблиц.Вставить("Реквизиты", НомераТаблиц.Количество());	
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.ОрганизацияОтправитель КАК ОрганизацияОтправитель,
	|	Реквизиты.СчетРасчетов КАК СчетРасчетов,
	|	Реквизиты.ПодразделениеОрганизации КАК ПодразделениеОрганизации,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	&ПрименениеПБУ18 КАК ПрименениеПБУ18,
	|	&ОтражатьВНалоговомУчете КАК ОтражатьВНалоговомУчете,
	|	&СодержаниеПроводки КАК СодержаниеПроводки
	|ПОМЕСТИТЬ Реквизиты
	|ИЗ
	|	Документ.АвизоРасчетыВходящее КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Регистратор,
	|	Реквизиты.Период,
	|	Реквизиты.Организация,
	|	Реквизиты.ОрганизацияОтправитель,
	|	Реквизиты.СчетРасчетов,
	|	Реквизиты.ПодразделениеОрганизации,
	|	Реквизиты.ВалютаДокумента,
	|	Реквизиты.ПрименениеПБУ18,
	|	Реквизиты.ОтражатьВНалоговомУчете,
	|	Реквизиты.СодержаниеПроводки
	|ИЗ
	|	Реквизиты КАК Реквизиты";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаСуммыДолга(НомераТаблиц)
	
	НомераТаблиц.Вставить("ВТ_СуммыДолга", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("СуммыДолга", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СуммыДолга.Ссылка КАК Регистратор,
	|	СуммыДолга.НомерСтроки,
	|	СуммыДолга.ВидЗадолженности,
	|	СуммыДолга.Контрагент,
	|	СуммыДолга.ДоговорКонтрагента,
	|	СуммыДолга.ДокументРасчетов,
	|	СуммыДолга.КурсВзаиморасчетов,
	|	СуммыДолга.КратностьВзаиморасчетов,
	|	СуммыДолга.СчетУчетаРасчетовСКонтрагентом,
	|	СуммыДолга.СчетУчетаРасчетовПоАвансам,
	|	СуммыДолга.Сумма,
	|	СуммыДолга.СуммаВзаиморасчетов,
	|	СуммыДолга.СуммаНУ,
	|	СуммыДолга.СуммаПР,
	|	СуммыДолга.СуммаВР,
	|	СуммыДолга.ДоговорКонтрагента.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	СуммыДолга.ДоговорКонтрагента.ВидДоговора КАК ВидДоговора,
	|	СуммыДолга.ДоговорКонтрагента.НаименованиеДляСчетаФактурыНаАванс КАК НаименованиеДляСчетаФактурыНаАванс
	|ПОМЕСТИТЬ СуммыДолга
	|ИЗ
	|	Документ.АвизоРасчетыВходящее.СуммыДолга КАК СуммыДолга
	|ГДЕ
	|	СуммыДолга.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СуммыДолга.Регистратор,
	|	СуммыДолга.НомерСтроки,
	|	СуммыДолга.ВидЗадолженности,
	|	СуммыДолга.Контрагент,
	|	СуммыДолга.ДоговорКонтрагента,
	|	СуммыДолга.ДокументРасчетов,
	|	СуммыДолга.КурсВзаиморасчетов,
	|	СуммыДолга.КратностьВзаиморасчетов,
	|	СуммыДолга.СчетУчетаРасчетовСКонтрагентом,
	|	СуммыДолга.СчетУчетаРасчетовПоАвансам,
	|	СуммыДолга.Сумма,
	|	СуммыДолга.СуммаВзаиморасчетов,
	|	СуммыДолга.СуммаНУ,
	|	СуммыДолга.СуммаПР,
	|	СуммыДолга.СуммаВР
	|ИЗ
	|	СуммыДолга КАК СуммыДолга";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаПереоценкаВалютныхОстатков(НомераТаблиц)
	
	НомераТаблиц.Вставить("ПереоценкаВалютныхОстатковРеквизиты", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Регистратор КАК Регистратор,
	|	Реквизиты.Период КАК Период,
	|	Реквизиты.Организация,
	|	Реквизиты.ВалютаДокумента
	|ИЗ
	|	Реквизиты КАК Реквизиты";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаСчетФактураВыданныйНаАвансРасшифровкаПлатежа(НомераТаблиц) Экспорт
	
	НомераТаблиц.Вставить("ВТ_РасшифровкаПлатежа", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Период КАК Дата,
	|	Реквизиты.Регистратор КАК ДокументОснование,
	|	Реквизиты.Организация КАК Организация,
	|	ТаблицаДокумента.Контрагент КАК Контрагент,
	|	ТаблицаДокумента.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	"""" КАК ИдентификаторГосКонтракта,
	|	ТаблицаДокумента.НаименованиеДляСчетаФактурыНаАванс КАК Номенклатура,
	|	ТаблицаДокумента.СчетУчетаРасчетовПоАвансам КАК СчетАвансов,
	|	ЗНАЧЕНИЕ(Документ.СчетНаОплатуПокупателю.ПустаяСсылка) КАК СчетНаОплату,
	|	&РасчетнаяСтавкаНДСПоУмолчанию КАК СтавкаНДС,
	|	СУММА(ТаблицаДокумента.Сумма) КАК Сумма
	|ПОМЕСТИТЬ РасшифровкаПлатежа
	|ИЗ
	|	СуммыДолга КАК ТаблицаДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ Реквизиты КАК Реквизиты
	|		ПО (ИСТИНА)
	|
	|СГРУППИРОВАТЬ ПО
	|	Реквизиты.Период,
	|	Реквизиты.Регистратор,
	|	Реквизиты.Организация,
	|	ТаблицаДокумента.Контрагент,
	|	ТаблицаДокумента.ДоговорКонтрагента,
	|	ТаблицаДокумента.СчетУчетаРасчетовПоАвансам,
	|	ТаблицаДокумента.НаименованиеДляСчетаФактурыНаАванс";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

// ОТЛОЖЕННОЕ ПРОВЕДЕНИЕ

Функция ТекстЗапросаРегистрацияОтложенныхРасчетовСКонтрагентами(НомераТаблиц, ПараметрыПроведения, Реквизиты)

	Если НЕ ПроведениеСервер.ИспользуетсяОтложенноеПроведение(Реквизиты.Организация, Реквизиты.Период) Тогда
		ПараметрыПроведения.Вставить("РасчетыСКонтрагентамиОтложенноеПроведение", Неопределено);
		Возврат "";
	КонецЕсли;

	НомераТаблиц.Вставить("РасчетыСКонтрагентамиОтложенноеПроведение", НомераТаблиц.Количество());

	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СуммыДолга.Контрагент КАК Контрагент,
	|	СуммыДолга.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	СуммыДолга.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	СуммыДолга.ВидДоговора КАК ВидДоговора,
	|	&Период КАК Дата
	|ИЗ
	|	СуммыДолга КАК СуммыДолга";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

////////////////////////////////////////////////////////////////////////////////
// Проведение. Формирование движений

Функция ПодготовитьПараметрыСуммыДолга(ТаблицаПоСуммамДолга, ТаблицаРеквизиты)
	
	Параметры = Новый Структура;
	
	// Подготовка таблицы Параметры.ТаблицаПоСуммамДолга
	
	СписокОбязательныхКолонок = ""
	+ "ВидЗадолженности,"       		// <ПеречислениеСсылка.ВидыЗадолженности>
	+ "СчетУчетаРасчетовСКонтрагентом," // <План счетов бухгалтерского учета>
	+ "Контрагент,"       				// <СправочникСсылка.Контрагенты>
	+ "ДоговорКонтрагента,"       		// <СправочникСсылка.ДоговорыКонтрагентов>
	+ "Сумма,"           	 			// <Число (15,2)>
	+ "СуммаВзаиморасчетов,"         	// <Число (15,2)>
	+ "СуммаНУ,"             			// <Число (15,2)>
	+ "СуммаПР,"             			// <Число (15,2)>
	+ "СуммаВР";             			// <Число (15,2)>
	
	Параметры.Вставить("ТаблицаПоСуммамДолга",
	ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаПоСуммамДолга, СписокОбязательныхКолонок));
	
	// Подготовка таблицы Параметры.Реквизиты
	
	СписокОбязательныхКолонок = ""
	+ "Период,"                         // <Дата> - период движений - дата документа
	+ "Организация,"                    // <СправочникСсылка.Организации>
	+ "ОрганизацияОтправитель,"       	// <СправочникСсылка.Организации>
	+ "СчетРасчетов,"                   // <План счетов бухгалтерского учета>
	+ "ПодразделениеОрганизации,"       // <Ссылка на справочник подразделений>
	+ "ВалютаДокумента,"       			// <СправочникСсылка.Валюта>
	+ "ПрименениеПБУ18,"       			// <Булево>
	+ "ОтражатьВНалоговомУчете,"        // <Булево>
	+ "СодержаниеПроводки,"             // <Строка>
	+ "Регистратор,"             		// <ДокументСсылка.АвизоРасчетыВходящее>
	;
	
	Параметры.Вставить("Реквизиты",
	ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));
	
	Возврат Параметры;
	
КонецФункции

// Процедура формирования движений по регистру бухгалтерии Хозрасчетный
Процедура СформироватьДвиженияСуммыДолга(ТаблицаПоСуммамДолга, ТаблицаРеквизиты, Движения, Отказ) Экспорт
	
	Проводки  = Движения.Хозрасчетный;
	
	Параметры = ПодготовитьПараметрыСуммыДолга(ТаблицаПоСуммамДолга, ТаблицаРеквизиты);
	Реквизиты = Параметры.Реквизиты[0];
	
	Для каждого СтрокаДолга Из Параметры.ТаблицаПоСуммамДолга Цикл
		
		СвойстваСчетаУчетаРасчетов = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(СтрокаДолга.СчетУчетаРасчетовСКонтрагентом);
		
		Проводка = Проводки.Добавить();
		Проводка.Организация 	= Реквизиты.Организация;
		Проводка.Период 		= Реквизиты.Период;
		Проводка.Содержание 	= Реквизиты.СодержаниеПроводки;
		
		Проводка.Сумма = СтрокаДолга.Сумма;
		
		Если СтрокаДолга.ВидЗадолженности = Перечисления.ВидыЗадолженности.Кредиторская Тогда
			
			Проводка.СчетДт = Реквизиты.СчетРасчетов;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ОбособленныеПодразделения", Реквизиты.ОрганизацияОтправитель);
			
			Проводка.СчетКт = СтрокаДолга.СчетУчетаРасчетовСКонтрагентом;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "Контрагенты", 	СтрокаДолга.Контрагент);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "Договоры", 		СтрокаДолга.ДоговорКонтрагента);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ДокументыРасчетовСКонтрагентами", Реквизиты.Регистратор);
			
			БухгалтерскийУчет.УстановитьПодразделениеПроводки(Проводка, Реквизиты.ПодразделениеОрганизации, "Кт");
			
			Если СвойстваСчетаУчетаРасчетов.Валютный Тогда
				Проводка.ВалютаКт        = Реквизиты.ВалютаДокумента;
				Проводка.ВалютнаяСуммаКт = СтрокаДолга.СуммаВзаиморасчетов;
			КонецЕсли;
			
		Иначе
			
			Проводка.СчетДт = СтрокаДолга.СчетУчетаРасчетовСКонтрагентом;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "Контрагенты", 	СтрокаДолга.Контрагент);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "Договоры", 		СтрокаДолга.ДоговорКонтрагента);
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ДокументыРасчетовСКонтрагентами", Реквизиты.Регистратор);
			
			БухгалтерскийУчет.УстановитьПодразделениеПроводки(Проводка, Реквизиты.ПодразделениеОрганизации, "Дт");
			
			Если СвойстваСчетаУчетаРасчетов.Валютный Тогда
				Проводка.ВалютаДт        = Реквизиты.ВалютаДокумента;
				Проводка.ВалютнаяСуммаДт = СтрокаДолга.СуммаВзаиморасчетов;
			КонецЕсли;
			
			Проводка.СчетКт = Реквизиты.СчетРасчетов;
			БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ОбособленныеПодразделения", Реквизиты.ОрганизацияОтправитель);
			
		КонецЕсли;
		
		Если Реквизиты.ОтражатьВНалоговомУчете Тогда 
			Если СвойстваСчетаУчетаРасчетов.Валютный Тогда 
				НалоговыйУчет.ЗаполнитьНалоговыеСуммыПроводки(СтрокаДолга.СуммаНУ,СтрокаДолга.СуммаНУ,
					СтрокаДолга.СуммаПР, СтрокаДолга.СуммаПР, СтрокаДолга.СуммаВР, СтрокаДолга.СуммаВР,
					Проводка, Реквизиты.ПрименениеПБУ18);
			Иначе
				НалоговыйУчет.ЗаполнитьНалоговыеСуммыПроводки(СтрокаДолга.Сумма,СтрокаДолга.Сумма,,,,,
					Проводка, Реквизиты.ПрименениеПБУ18);
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	Проводки.Записывать = Истина;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Заполнение на основании

Процедура ЗаполнитьПоАвизоРасчетыИсходящее(Объект, Основание) Экспорт 
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Ссылка", Основание);
	Запрос.Текст 	= 
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК ДокументОснование,
	|	Реквизиты.Дата КАК ДатаВходящегоДокумента,
	|	Реквизиты.Номер КАК НомерВходящегоДокумента,
	|	Реквизиты.ОрганизацияПолучатель КАК Организация,
	|	Реквизиты.Организация КАК ОрганизацияОтправитель,
	|	Реквизиты.АвизоПоРасчетамВВалюте КАК АвизоПоРасчетамВВалюте,
	|	Реквизиты.ВалютаДокумента КАК ВалютаДокумента,
	|	Реквизиты.КурсДокумента КАК КурсДокумента,
	|	Реквизиты.КратностьДокумента КАК КратностьДокумента,
	|	Реквизиты.СчетРасчетов КАК СчетРасчетов
	|ИЗ
	|	Документ.АвизоРасчетыИсходящее КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СуммыДолга.ВидЗадолженности,
	|	СуммыДолга.Контрагент,
	|	СуммыДолга.ДоговорКонтрагента,
	|	СуммыДолга.КурсВзаиморасчетов,
	|	СуммыДолга.КратностьВзаиморасчетов,
	|	СуммыДолга.СчетУчетаРасчетовСконтрагентом,
	|	СуммыДолга.СуммаВзаиморасчетов,
	|	СуммыДолга.Сумма,
	|	СуммыДолга.СуммаНУ,
	|	СуммыДолга.СуммаПР,
	|	СуммыДолга.СуммаВР,
	|	СуммыДолга.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	Документ.АвизоРасчетыИсходящее.СуммыДолга КАК СуммыДолга
	|ГДЕ
	|	СуммыДолга.Ссылка = &Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Результаты 		= Запрос.ВыполнитьПакет();
	Реквизиты 		= Результаты[0];
	СуммыДолга 		= Результаты[1];
	
	// Шапка
	ДанныеОснования = Реквизиты.Выбрать();
	ДанныеОснования.Следующий();
	ЗаполнитьЗначенияСвойств(Объект, ДанныеОснования);
	
	Объект.НомерВходящегоДокумента = 
		ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ДанныеОснования.НомерВходящегоДокумента, Истина, Ложь);
	
	Если ЗначениеЗаполнено(Объект.ПодразделениеОрганизации) Тогда 
		Если НЕ БухгалтерскийУчетПереопределяемый.ПодразделениеПринадлежитОрганизации(Объект.ПодразделениеОрганизации, Объект.Организация) Тогда
			Объект.ПодразделениеОрганизации = Неопределено;
		КонецЕсли;
	КонецЕсли;
	
	// Табличная часть
	Объект.СуммыДолга.Загрузить(СуммыДолга.Выгрузить());
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// Заполнение счетов учета

Процедура ЗаполнитьСчетаУчетаВСтрокеТабличнойЧасти(Объект, СтрокаТЧ) Экспорт
	
	СчетаУчета = БухгалтерскийУчетПереопределяемый.ПолучитьСчетаРасчетовСКонтрагентом(Объект.Организация, СтрокаТЧ.Контрагент, СтрокаТЧ.ДоговорКонтрагента);
	
	ВидДоговораКонтрагента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаТЧ.ДоговорКонтрагента, "ВидДоговора");
	
	Если (ВидДоговораКонтрагента = Перечисления.ВидыДоговоровКонтрагентов.СПоставщиком)
		ИЛИ (ВидДоговораКонтрагента = Перечисления.ВидыДоговоровКонтрагентов.СКомитентом)
		ИЛИ (ВидДоговораКонтрагента = Перечисления.ВидыДоговоровКонтрагентов.СКомиссионеромНаЗакупку)
		ИЛИ (ВидДоговораКонтрагента = Перечисления.ВидыДоговоровКонтрагентов.Прочее)
		Тогда
		
		Если СтрокаТЧ.ВидЗадолженности = Перечисления.ВидыЗадолженности.Дебиторская Тогда
			СтрокаТЧ.СчетУчетаРасчетовСКонтрагентом = СчетаУчета.СчетАвансов;
		Иначе
			СтрокаТЧ.СчетУчетаРасчетовСКонтрагентом = СчетаУчета.СчетРасчетов;
		КонецЕсли;
		
	ИначеЕсли (ВидДоговораКонтрагента = Перечисления.ВидыДоговоровКонтрагентов.СПокупателем)
		ИЛИ (ВидДоговораКонтрагента = Перечисления.ВидыДоговоровКонтрагентов.СКомиссионером)
		ИЛИ (ВидДоговораКонтрагента = Перечисления.ВидыДоговоровКонтрагентов.СКомитентомНаЗакупку)
		Тогда
		
		Если СтрокаТЧ.ВидЗадолженности = Перечисления.ВидыЗадолженности.Дебиторская Тогда
			СтрокаТЧ.СчетУчетаРасчетовСКонтрагентом = СчетаУчета.СчетРасчетовПокупателя;
		Иначе
			СтрокаТЧ.СчетУчетаРасчетовСКонтрагентом = СчетаУчета.СчетАвансовПокупателя;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ ПЕЧАТИ

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор  = "Реестр";
	КомандаПечати.Представление  = НСтр("ru = 'Реестр документов'");
	КомандаПечати.ЗаголовокФормы = НСтр("ru = 'Реестр документов ""Авизо по расчетам входящее""'");
	КомандаПечати.Обработчик     = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм     = "ФормаСписка";
	КомандаПечати.Порядок        = 100;
	
КонецПроцедуры

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура("Информация", "ОрганизацияОтправитель");
	
	Возврат Результат;
	
КонецФункции

#КонецЕсли