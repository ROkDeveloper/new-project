#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	ЗаполнениеДокументов.Заполнить(ЭтотОбъект, ДанныеЗаполнения);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ДОКУМЕНТА

	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	
	ПараметрыПроведения = Документы.АвизоОСИсходящее.ПодготовитьПараметрыПроведения(Ссылка, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ИНФОРМАЦИОННОЙ БАЗЫ

	// Алгоритмы формирования проводок этого документа рассчитывают суммы проводок налогового учета
	Движения.Хозрасчетный.ДополнительныеСвойства.Вставить("СуммыНалоговогоУчетаЗаполнены", Истина);
	
	УчетОС.ПроверитьСоответствиеОСОрганизации(
		ПараметрыПроведения.ОсновныеСредства,
		ПараметрыПроведения.ПроверкиПоОС, Отказ);
		
	УчетОС.ПроверитьСостояниеОСПринятоКУчету(
		ПараметрыПроведения.ОсновныеСредства,
		ПараметрыПроведения.ПроверкиПоОС, Отказ);

	ПараметрыНачисленияАмортизации = УчетОС.ПодготовитьТаблицыАмортизацииОСИСуммАмортизационнойПремии(
		ПараметрыПроведения.ОсновныеСредства,
		ПараметрыПроведения.НачислениеАмортизацииОС,
		Отказ,
		Истина);
	
	ПараметрыНачисленияИзноса = УчетОС.ПодготовитьТаблицуИзносаБухРегл(
		ПараметрыПроведения.ОсновныеСредства,
		ПараметрыПроведения.НачислениеИзносаОС, Отказ);
		
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// ФОРМИРОВАНИЕ ДВИЖЕНИЙ

	УчетОС.СформироватьДвиженияРегистрацияСобытияОС(
		ПараметрыПроведения.СобытияОСТаблица,
		ПараметрыПроведения.СобытияОС,
		Движения, Отказ);
		
	УчетОС.СформироватьДвиженияИзменениеПризнакаНачисленияАмортизацииОСБУ(
		ПараметрыПроведения.ОсновныеСредства,
		ПараметрыПроведения.НачислениеАмортизацииОСБУ,
		Движения, Отказ);

   УчетОС.СформироватьДвиженияИзменениеПризнакаНачисленияАмортизацииОСНУ(
		ПараметрыПроведения.ОсновныеСредства,
		ПараметрыПроведения.НачислениеАмортизацииОСНУ,
		Движения, Отказ);

	УчетОС.СформироватьДвиженияНачислениеАмортизацииИАмортизационнойПремии(
		ПараметрыНачисленияАмортизации,
		Движения, Отказ);
	
	УчетОС.СформироватьДвиженияНачислениеИзноса(
		ПараметрыНачисленияИзноса,
		ПараметрыПроведения.НачислениеИзносаОС,
		Движения, Отказ);
		
	Документы.АвизоОСИсходящее.СформироватьДвиженияСтоимостьОС(
		ПараметрыПроведения.ТаблицаСтоимостьОС,
		ПараметрыПроведения.Реквизиты, Движения, Отказ);
		
	Документы.АвизоОСИсходящее.СформироватьДвиженияНакопленнаяАмортизация(
		ПараметрыПроведения.ТаблицаНакопленнаяАмортизация,
		ПараметрыПроведения.Реквизиты, Движения, Отказ);
		
	Документы.АвизоОСИсходящее.СформироватьДвиженияНакопленныйИзнос(
		ПараметрыПроведения.ТаблицаНакопленныйИзнос,
		ПараметрыПроведения.Реквизиты, Движения, Отказ);
		
	Документы.АвизоОСИсходящее.СформироватьДвиженияОбесценение(
		ПараметрыПроведения.ТаблицаОбесценение,
		ПараметрыПроведения.Реквизиты, Движения, Отказ);
		
	ПроведениеСервер.УстановитьЗаписьОчищаемыхНаборовЗаписей(ЭтотОбъект);
		
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	//организация и получатель должны отличаться
	Если Организация = ОрганизацияПолучатель Тогда
		ТекстСообщения = НСтр("ru = 'Получатель должен отличаться от отправителя.'");
		ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Поле", "Корректность", 
																НСтр("ru = 'Получатель'"),,, ТекстСообщения);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ОрганизацияПолучатель", "Объект", Отказ);
	КонецЕсли;	

	МассивНепроверяемыхРеквизитов = Новый Массив();

	// Проверим, нет ли повторяющихся основных средств в таблице по ОС.
	УправлениеВнеоборотнымиАктивами.ПроверитьОтсутствиеДублейВТабличнойЧасти(ЭтотОбъект, "ОС", Новый Структура("ОсновноеСредство"), Отказ);
	
	// Проверка табличной части "ОС"
	МассивНепроверяемыхРеквизитов.Добавить("ОС.ОсновноеСредство");
	МассивНепроверяемыхРеквизитов.Добавить("ОС.ИнвентарныйНомер");
	МассивНепроверяемыхРеквизитов.Добавить("ОС.СчетУчета");
	МассивНепроверяемыхРеквизитов.Добавить("ОС.ДатаПринятияКУчету");
	МассивНепроверяемыхРеквизитов.Добавить("ОС.ПорядокПогашенияСтоимости");
	
	Для каждого СтрокаТаблицы Из ОС Цикл
		
		Префикс 	= "ОС[" + Формат(СтрокаТаблицы.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].";
		Поле 		= Префикс + "ОсновноеСредство";
		ИмяСписка 	= НСтр("ru = 'Основные средства'");
		
		Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.ОсновноеСредство) Тогда
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка",, НСтр("ru = 'Основное средство'"),
				СтрокаТаблицы.НомерСтроки, ИмяСписка);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.ИнвентарныйНомер) Тогда
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка",, НСтр("ru = 'Инвентарный номер'"),
				СтрокаТаблицы.НомерСтроки, ИмяСписка);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.СчетУчета) Тогда
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка",, НСтр("ru = 'Счет учета'"),
				СтрокаТаблицы.НомерСтроки, ИмяСписка);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.ДатаПринятияКУчету) Тогда
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка",, НСтр("ru = 'Дата принятия к учету'"),
				СтрокаТаблицы.НомерСтроки, ИмяСписка);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
		КонецЕсли;

		Если НЕ ЗначениеЗаполнено(СтрокаТаблицы.ПорядокПогашенияСтоимости) Тогда
			ТекстСообщения = ОбщегоНазначенияКлиентСервер.ТекстОшибкиЗаполнения("Колонка",, НСтр("ru = 'Порядок погашения стоимости'"),
				СтрокаТаблицы.НомерСтроки, ИмяСписка);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, Поле, "Объект", Отказ);
		КонецЕсли;
 		
	КонецЦикла;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)

	ПроведениеСервер.ПодготовитьНаборыЗаписейКОтменеПроведения(ЭтотОбъект);
	Движения.Записать();
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Дата = НачалоДня(ОбщегоНазначения.ТекущаяДатаПользователя());
	Ответственный = Пользователи.ТекущийПользователь();
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли