#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ВремяДокументаПоУмолчанию() Экспорт
	
	Возврат Новый Структура("Часы, Минуты", 14, 0);
	
КонецФункции

#Область ПолучитьДанныеОС

// Получает данные ОС.
//
Функция ПолучитьДанныеОС(Объект, ТаблицаСписокОС) Экспорт
	
	ПараметрыАмортизации = Новый ТаблицаЗначений;
	ПараметрыАмортизации.Колонки.Добавить("Организация");
	ПараметрыАмортизации.Колонки.Добавить("ДатаРасчета");
	ПараметрыАмортизации.Колонки.Добавить("Период");
	ПараметрыАмортизации.Колонки.Добавить("Регистратор");
	ПараметрыАмортизации.Колонки.Добавить("ВыдаватьСообщения");
	ПараметрыАмортизации.Колонки.Добавить("Содержание");

	СтрокаПараметра = ПараметрыАмортизации.Добавить();
	СтрокаПараметра.Организация 		= Объект.Организация;
	СтрокаПараметра.ДатаРасчета 		= Объект.Дата;
	СтрокаПараметра.Период 				= Объект.Дата;
	СтрокаПараметра.Регистратор 		= Объект.Ссылка;
	СтрокаПараметра.ВыдаватьСообщения 	= Ложь;
	
	СписокОС = ТаблицаСписокОС.ВыгрузитьКолонку("ОсновноеСредство");

	РасчетАмортизацииОС = УчетОС.ПодготовитьРасчетАмортизацииОС(ТаблицаСписокОС, ПараметрыАмортизации, Неопределено, Ложь, Истина);
	ТабАмортизации = РасчетАмортизацииОС.ТаблицаАмортизации;
	ТабАмортизации.Индексы.Добавить("ОбъектУчета");
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ТабАмортизации", ТабАмортизации);
	Запрос.Текст = 
	"ВЫБРАТЬ 
	|	ВнешнийИсточник.ОбъектУчета КАК ОсновноеСредство,
	|	ВнешнийИсточник.СуммаАмортизацииБУ КАК СуммаАмортизации,
	|	ВнешнийИсточник.СуммаАмортизацииНУ КАК СуммаАмортизацииНУ,
	|	ВнешнийИсточник.СуммаАмортизацииПР КАК СуммаАмортизацииПР,
	|	ВнешнийИсточник.СуммаАмортизацииВР КАК СуммаАмортизацииВР,
	|	ВнешнийИсточник.КорректировкаОбесценения КАК КорректировкаОбесценения,
	|	ВнешнийИсточник.СуммаКапитальныхВложенийВключаемыхВРасходы КАК СуммаКапитальныхВложенийВключаемыхВРасходы
	|ПОМЕСТИТЬ 
	|   ТабАмортизации
	|ИЗ 
	|	&ТабАмортизации КАК ВнешнийИсточник";
	Запрос.Выполнить();
	
	ПараметрыИзноса = Новый ТаблицаЗначений;
	ПараметрыИзноса.Колонки.Добавить("Организация");
	ПараметрыИзноса.Колонки.Добавить("ДатаРасчета");
	ПараметрыИзноса.Колонки.Добавить("ВыдаватьСообщения");
	ПараметрыИзноса.Колонки.Добавить("Регистратор");

	СтрокаПараметра = ПараметрыИзноса.Добавить();
	СтрокаПараметра.Организация 	= Объект.Организация;
	СтрокаПараметра.ДатаРасчета 	= Объект.Дата;
	СтрокаПараметра.Регистратор 	= Объект.Ссылка;

	ТабИзноса = УчетОС.ПодготовитьТаблицуИзносаБухРегл(ТаблицаСписокОС, ПараметрыИзноса, Ложь);
	
	Запрос.УстановитьПараметр("ТабИзноса", ТабИзноса);
	Запрос.Текст = 
	"ВЫБРАТЬ 
	|	ВнешнийИсточник.ОсновноеСредство КАК ОсновноеСредство,
	|	ВнешнийИсточник.Сумма КАК СуммаИзноса
	|ПОМЕСТИТЬ 
	|   ТабИзноса
	|ИЗ 
	|	&ТабИзноса КАК ВнешнийИсточник";
	Запрос.Выполнить();
	
	Запрос.УстановитьПараметр("СписокОС",    СписокОС);
	Запрос.УстановитьПараметр("Период",      Новый Граница(Объект.Дата, ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СчетаБухгалтерскогоУчетаОсновныхСредствСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
	|	СчетаБухгалтерскогоУчетаОсновныхСредствСрезПоследних.СчетУчета КАК СчетУчета,
	|	СчетаБухгалтерскогоУчетаОсновныхСредствСрезПоследних.СчетНачисленияАмортизации КАК СчетНачисленияАмортизации,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОбесценениеОС_01) КАК СчетОбесценения
	|ПОМЕСТИТЬ ВТСчетаБухгалтерскогоУчетаОССрезПоследних
	|ИЗ
	|	РегистрСведений.СчетаБухгалтерскогоУчетаОС.СрезПоследних(
	|			&Период,
	|			Организация = &Организация
	|				И ОсновноеСредство В (&СписокОС)) КАК СчетаБухгалтерскогоУчетаОсновныхСредствСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ХозрасчетныйОстатки.Субконто1 КАК ОсновноеСредство,
	|	ХозрасчетныйОстатки.Счет КАК Счет,
	|	ХозрасчетныйОстатки.СуммаОстатокДт КАК Стоимость,
	|	ХозрасчетныйОстатки.СуммаНУОстатокДт КАК СтоимостьНУ,
	|	ХозрасчетныйОстатки.СуммаПРОстатокДт КАК СтоимостьПР,
	|	ХозрасчетныйОстатки.СуммаВРОстатокДт КАК СтоимостьВР,
	|	ХозрасчетныйОстатки.СуммаОстатокКт КАК Амортизация,
	|	ХозрасчетныйОстатки.СуммаНУОстатокКт КАК АмортизацияНУ,
	|	ХозрасчетныйОстатки.СуммаПРОстатокКт КАК АмортизацияПР,
	|	ХозрасчетныйОстатки.СуммаВРОстатокКт КАК АмортизацияВР
	|ПОМЕСТИТЬ ВТХозрасчетныйОстатки
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&Период,
	|			Счет В
	|				(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					ВТСчетаБухгалтерскогоУчетаОССрезПоследних.СчетУчета
	|				ИЗ
	|					ВТСчетаБухгалтерскогоУчетаОССрезПоследних
	|			
	|				ОБЪЕДИНИТЬ
	|			
	|				ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					ВТСчетаБухгалтерскогоУчетаОССрезПоследних.СчетНачисленияАмортизации
	|				ИЗ
	|					ВТСчетаБухгалтерскогоУчетаОССрезПоследних
	|			
	|				ОБЪЕДИНИТЬ
	|			
	|				ВЫБРАТЬ РАЗЛИЧНЫЕ
	|					ВТСчетаБухгалтерскогоУчетаОССрезПоследних.СчетОбесценения
	|				ИЗ
	|					ВТСчетаБухгалтерскогоУчетаОССрезПоследних),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|			Организация = &Организация
	|				И Субконто1 В (&СписокОС)) КАК ХозрасчетныйОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ХозрасчетныйОстатки.Субконто1 КАК ОсновноеСредство,
	|	ХозрасчетныйОстатки.СуммаНУОстатокДт КАК КорректировкаСтоимостиНУ
	|ПОМЕСТИТЬ ВТКорректировкаСтоимости
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&Период,
	|			Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.КорректировкаСтоимостиАрендованногоИмущества),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|			Организация = &Организация
	|				И Субконто1 В (&СписокОС)) КАК ХозрасчетныйОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
	|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.Период КАК Период,
	|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.СпособПоступления КАК СпособПоступления,
	|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.Контрагент КАК Контрагент,
	|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
	|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.СпособНачисленияАмортизации КАК СпособНачисленияАмортизации,
	|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ПараметрВыработки КАК ПараметрВыработки,
	|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ПорядокПогашенияСтоимости КАК ПорядокПогашенияСтоимости
	|ПОМЕСТИТЬ ВТПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСБухгалтерскийУчет.СрезПоследних(
	|			&Период,
	|			Организация = &Организация
	|				И ОсновноеСредство В (&СписокОС)) КАК ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ГрафикиАмортизацииОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
	|	ГрафикиАмортизацииОСБухгалтерскийУчетСрезПоследних.ГрафикАмортизации КАК ГрафикАмортизации
	|ПОМЕСТИТЬ ВТГрафикиАмортизацииОСБухгалтерскийУчетСрезПоследних
	|ИЗ
	|	РегистрСведений.ГрафикиАмортизацииОСБухгалтерскийУчет.СрезПоследних(
	|			&Период,
	|			Организация = &Организация
	|				И ОсновноеСредство В (&СписокОС)) КАК ГрафикиАмортизацииОСБухгалтерскийУчетСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
	|	ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.СрокПолезногоИспользования КАК СрокПолезногоИспользования,
	|	ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.ОбъемПродукцииРабот КАК ОбъемПродукцииРабот,
	|	ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.СрокИспользованияДляВычисленияАмортизации КАК СрокИспользованияДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.СтоимостьДляВычисленияАмортизации КАК СтоимостьДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.ОбъемПродукцииРаботДляВычисленияАмортизации КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.КоэффициентАмортизации КАК КоэффициентАмортизации,
	|	ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.КоэффициентУскорения КАК КоэффициентУскорения,
	|	ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость
	|ПОМЕСТИТЬ ВТПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних
	|ИЗ
	|	РегистрСведений.ПараметрыАмортизацииОСБухгалтерскийУчет.СрезПоследних(
	|			&Период,
	|			Организация = &Организация
	|				И ОсновноеСредство В (&СписокОС)) КАК ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПараметрыАмортизацииОСНалоговыйУчетСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
	|	ПараметрыАмортизацииОСНалоговыйУчетСрезПоследних.СрокПолезногоИспользования КАК СрокПолезногоИспользования,
	|	ПараметрыАмортизацииОСНалоговыйУчетСрезПоследних.КоэффициентАмортизации КАК КоэффициентАмортизации,
	|	ПараметрыАмортизацииОСНалоговыйУчетСрезПоследних.ПРДляВычисленияАмортизации КАК ПРДляВычисленияАмортизации
	|ПОМЕСТИТЬ ВТПараметрыАмортизацииОСНалоговыйУчетСрезПоследних
	|ИЗ
	|	РегистрСведений.ПараметрыАмортизацииОСНалоговыйУчет.СрезПоследних(
	|			&Период,
	|			Организация = &Организация
	|				И ОсновноеСредство В (&СписокОС)) КАК ПараметрыАмортизацииОСНалоговыйУчетСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПервоначальныеСведенияОСНалоговыйУчетСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
	|	ПервоначальныеСведенияОСНалоговыйУчетСрезПоследних.МетодНачисленияАмортизации КАК МетодНачисленияАмортизации,
	|	ПервоначальныеСведенияОСНалоговыйУчетСрезПоследних.ПервоначальнаяСтоимостьНУ КАК ПервоначальнаяСтоимостьНУ,
	|	ПервоначальныеСведенияОСНалоговыйУчетСрезПоследних.СтоимостьДо2002 КАК СтоимостьДо2002,
	|	ПервоначальныеСведенияОСНалоговыйУчетСрезПоследних.АмортизацияДо2002 КАК АмортизацияДо2002,
	|	ПервоначальныеСведенияОСНалоговыйУчетСрезПоследних.ПорядокВключенияСтоимостиВСоставРасходов КАК ПорядокВключенияСтоимостиВСоставРасходов,
	|	ПервоначальныеСведенияОСНалоговыйУчетСрезПоследних.АмортизацияДо2009 КАК АмортизацияДо2009,
	|	ПервоначальныеСведенияОСНалоговыйУчетСрезПоследних.ФактическийСрокИспользованияДо2009 КАК ФактическийСрокИспользованияДо2009
	|ПОМЕСТИТЬ ВТПервоначальныеСведенияОСНалоговыйУчетСрезПоследних
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСНалоговыйУчет.СрезПоследних(
	|			&Период,
	|			Организация = &Организация
	|				И ОсновноеСредство В (&СписокОС)) КАК ПервоначальныеСведенияОСНалоговыйУчетСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчетСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
	|	НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчетСрезПоследних.СпециальныйКоэффициент КАК СпециальныйКоэффициент
	|ПОМЕСТИТЬ ВТНачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчетСрезПоследних
	|ИЗ
	|	РегистрСведений.НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчет.СрезПоследних(
	|			&Период,
	|			Организация = &Организация
	|				И ОсновноеСредство В (&СписокОС)) КАК НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчетСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПервоначальныеСведенияОСНалоговыйУчетУСНСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
	|	ПервоначальныеСведенияОСНалоговыйУчетУСНСрезПоследних.ПервоначальнаяСтоимостьУСН КАК ПервоначальнаяСтоимостьУСН,
	|	ПервоначальныеСведенияОСНалоговыйУчетУСНСрезПоследних.СуммаНачисленнойАмортизации КАК СуммаНачисленнойАмортизации,
	|	ПервоначальныеСведенияОСНалоговыйУчетУСНСрезПоследних.СрокПолезногоИспользования КАК СрокПолезногоИспользования,
	|	ПервоначальныеСведенияОСНалоговыйУчетУСНСрезПоследних.ДатаПриобретения КАК ДатаПриобретения,
	|	ПервоначальныеСведенияОСНалоговыйУчетУСНСрезПоследних.ПорядокВключенияСтоимостиВСоставРасходовУСН КАК ПорядокВключенияСтоимостиВСоставРасходовУСН
	|ПОМЕСТИТЬ ВТПервоначальныеСведенияОСНалоговыйУчетУСНСрезПоследних
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОСНалоговыйУчетУСН.СрезПоследних(
	|			&Период,
	|			Организация = &Организация
	|				И ОсновноеСредство В (&СписокОС)) КАК ПервоначальныеСведенияОСНалоговыйУчетУСНСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
	|	СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчетСрезПоследних.СпособыОтраженияРасходовПоАмортизации КАК СпособыОтраженияРасходовПоАмортизации
	|ПОМЕСТИТЬ ВТСпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчетСрезПоследних
	|ИЗ
	|	РегистрСведений.СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчет.СрезПоследних(
	|			&Период,
	|			Организация = &Организация
	|				И ОсновноеСредство В (&СписокОС)) КАК СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчетСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НачислениеАмортизацииОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
	|	НачислениеАмортизацииОСБухгалтерскийУчетСрезПоследних.НачислятьАмортизацию КАК НачислятьАмортизацию
	|ПОМЕСТИТЬ ВТНачислениеАмортизацииОСБухгалтерскийУчетСрезПоследних
	|ИЗ
	|	РегистрСведений.НачислениеАмортизацииОСБухгалтерскийУчет.СрезПоследних(
	|			&Период,
	|			Организация = &Организация
	|				И ОсновноеСредство В (&СписокОС)) КАК НачислениеАмортизацииОСБухгалтерскийУчетСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НачислениеАмортизацииОСНалоговыйУчетСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
	|	НачислениеАмортизацииОСНалоговыйУчетСрезПоследних.НачислятьАмортизацию КАК НачислятьАмортизацию
	|ПОМЕСТИТЬ ВТНачислениеАмортизацииОСНалоговыйУчетСрезПоследних
	|ИЗ
	|	РегистрСведений.НачислениеАмортизацииОСНалоговыйУчет.СрезПоследних(
	|			&Период,
	|			Организация = &Организация
	|				И ОсновноеСредство В (&СписокОС)) КАК НачислениеАмортизацииОСНалоговыйУчетСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СпособыОтраженияРасходовПоАренднымПлатежамОСНалоговыйУчетСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
	|	СпособыОтраженияРасходовПоАренднымПлатежамОСНалоговыйУчетСрезПоследних.СпособОтраженияРасходовПоАренднымПлатежам КАК СпособОтраженияРасходовПоАренднымПлатежам
	|ПОМЕСТИТЬ ВТСпособыОтраженияРасходовПоАренднымПлатежамОСНалоговыйУчетСрезПоследних
	|ИЗ
	|	РегистрСведений.СпособыОтраженияРасходовПоАренднымПлатежамОСНалоговыйУчет.СрезПоследних(
	|			&Период,
	|			Организация = &Организация
	|				И ОсновноеСредство В (&СписокОС)) КАК СпособыОтраженияРасходовПоАренднымПлатежамОСНалоговыйУчетСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МестонахождениеОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
	|	МестонахождениеОСБухгалтерскийУчетСрезПоследних.Местонахождение КАК Местонахождение
	|ПОМЕСТИТЬ ВТМестонахождениеОСБухгалтерскийУчетСрезПоследних
	|ИЗ
	|	РегистрСведений.МестонахождениеОСБухгалтерскийУчет.СрезПоследних(
	|			&Период,
	|			Организация = &Организация
	|				И ОсновноеСредство В (&СписокОС)) КАК МестонахождениеОСБухгалтерскийУчетСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СостоянияОСОрганизацийСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
	|	СостоянияОСОрганизацийСрезПоследних.ДатаСостояния КАК ДатаПринятияКУчету
	|ПОМЕСТИТЬ ВТСостоянияОСОрганизаций
	|ИЗ
	|	РегистрСведений.СостоянияОСОрганизаций.СрезПоследних(
	|			&Период,
	|			Организация = &Организация
	|				И ОсновноеСредство В (&СписокОС)
	|				И Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)) КАК СостоянияОСОрганизацийСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
	|	ЕСТЬNULL(СостоянияОСОрганизаций.ДатаПринятияКУчету, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаПринятияКУчету,
	|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.СпособПоступления КАК СпособПоступления,
	|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.Контрагент КАК Контрагент,
	|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
	|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.СпособНачисленияАмортизации КАК СпособНачисленияАмортизации,
	|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ПараметрВыработки КАК ПараметрВыработки,
	|	ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ПорядокПогашенияСтоимости КАК ПорядокПогашенияСтоимости,
	|	ГрафикиАмортизацииОСБухгалтерскийУчетСрезПоследних.ГрафикАмортизации КАК ГрафикАмортизации,
	|	ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.СрокПолезногоИспользования КАК СрокПолезногоИспользования,
	|	ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.ОбъемПродукцииРабот КАК ОбъемПродукцииРабот,
	|	ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.СрокИспользованияДляВычисленияАмортизации КАК СрокИспользованияДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.СтоимостьДляВычисленияАмортизации КАК СтоимостьДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.ОбъемПродукцииРаботДляВычисленияАмортизации КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.КоэффициентАмортизации КАК КоэффициентАмортизации,
	|	ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.КоэффициентУскорения КАК КоэффициентУскорения,
	|	ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость,
	|	ПараметрыАмортизацииОСНалоговыйУчетСрезПоследних.СрокПолезногоИспользования КАК СрокПолезногоИспользованияНУ,
	|	ПараметрыАмортизацииОСНалоговыйУчетСрезПоследних.КоэффициентАмортизации КАК КоэффициентАмортизацииНУ,
	|	ПараметрыАмортизацииОСНалоговыйУчетСрезПоследних.ПРДляВычисленияАмортизации КАК ПРДляВычисленияАмортизации,
	|	ПервоначальныеСведенияОСНалоговыйУчетСрезПоследних.МетодНачисленияАмортизации КАК МетодНачисленияАмортизацииНУ,
	|	ПервоначальныеСведенияОСНалоговыйУчетСрезПоследних.ПервоначальнаяСтоимостьНУ КАК ПервоначальнаяСтоимостьНУ,
	|	ПервоначальныеСведенияОСНалоговыйУчетСрезПоследних.СтоимостьДо2002 КАК СтоимостьДо2002НУ,
	|	ПервоначальныеСведенияОСНалоговыйУчетСрезПоследних.АмортизацияДо2002 КАК АмортизацияДо2002НУ,
	|	ПервоначальныеСведенияОСНалоговыйУчетСрезПоследних.ПорядокВключенияСтоимостиВСоставРасходов КАК ПорядокВключенияСтоимостиВСоставРасходовНУ,
	|	ПервоначальныеСведенияОСНалоговыйУчетСрезПоследних.АмортизацияДо2009 КАК АмортизацияДо2009НУ,
	|	ПервоначальныеСведенияОСНалоговыйУчетСрезПоследних.ФактическийСрокИспользованияДо2009 КАК ФактическийСрокИспользованияДо2009НУ,
	|	ПервоначальныеСведенияОСНалоговыйУчетУСНСрезПоследних.ПервоначальнаяСтоимостьУСН КАК ПервоначальнаяСтоимостьУСН,
	|	ПервоначальныеСведенияОСНалоговыйУчетУСНСрезПоследних.СуммаНачисленнойАмортизации КАК СуммаНачисленнойАмортизацииУСН,
	|	ПервоначальныеСведенияОСНалоговыйУчетУСНСрезПоследних.СрокПолезногоИспользования КАК СрокПолезногоИспользованияУСН,
	|	ПервоначальныеСведенияОСНалоговыйУчетУСНСрезПоследних.ДатаПриобретения КАК ДатаПриобретенияУСН,
	|	ПервоначальныеСведенияОСНалоговыйУчетУСНСрезПоследних.ПорядокВключенияСтоимостиВСоставРасходовУСН КАК ПорядокВключенияСтоимостиВСоставРасходовУСН,
	|	НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчетСрезПоследних.СпециальныйКоэффициент КАК СпециальныйКоэффициентНУ,
	|	СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчетСрезПоследних.СпособыОтраженияРасходовПоАмортизации КАК СпособыОтраженияРасходовПоАмортизации,
	|	СчетаБухгалтерскогоУчетаОССрезПоследних.СчетУчета КАК СчетУчета,
	|	СчетаБухгалтерскогоУчетаОССрезПоследних.СчетНачисленияАмортизации КАК СчетНачисленияАмортизации,
	|	НачислениеАмортизацииОСБухгалтерскийУчетСрезПоследних.НачислятьАмортизацию КАК НачислятьАмортизацию,
	|	НачислениеАмортизацииОСНалоговыйУчетСрезПоследних.НачислятьАмортизацию КАК НачислятьАмортизациюНУ,
	|	СпособыОтраженияРасходовПоАренднымПлатежамОСНалоговыйУчетСрезПоследних.СпособОтраженияРасходовПоАренднымПлатежам КАК СпособОтраженияРасходовПоАренднымПлатежам,
	|	МестонахождениеОСБухгалтерскийУчетСрезПоследних.Местонахождение КАК ПодразделениеОрганизации,
	|	ЕСТЬNULL(СтоимостьОС.Стоимость, 0) КАК Стоимость,
	|	ЕСТЬNULL(СтоимостьОС.СтоимостьНУ, 0) - ЕСТЬNULL(ТабАмортизации.СуммаКапитальныхВложенийВключаемыхВРасходы, 0) КАК СтоимостьНУ,
	|	ЕСТЬNULL(СтоимостьОС.СтоимостьПР, 0) КАК СтоимостьПР,
	|	ЕСТЬNULL(СтоимостьОС.СтоимостьВР, 0) - ЕСТЬNULL(ТабАмортизации.СуммаКапитальныхВложенийВключаемыхВРасходы, 0) КАК СтоимостьВР,
	|	ВЫБОР
	|		КОГДА ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ПорядокПогашенияСтоимости = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзноса)
	|				ИЛИ ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ПорядокПогашенияСтоимости = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ)
	|			ТОГДА ЕСТЬNULL(АмортизацияОС.Стоимость, 0) + ЕСТЬNULL(ТабИзноса.СуммаИзноса, 0)
	|		ИНАЧЕ ЕСТЬNULL(АмортизацияОС.Амортизация, 0) + ЕСТЬNULL(ТабАмортизации.СуммаАмортизации, 0)
	|	КОНЕЦ КАК Амортизация,
	|	ЕСТЬNULL(АмортизацияОС.АмортизацияНУ, 0) + ЕСТЬNULL(ТабАмортизации.СуммаАмортизацииНУ, 0) КАК АмортизацияНУ,
	|	ЕСТЬNULL(АмортизацияОС.АмортизацияПР, 0) + ЕСТЬNULL(ТабАмортизации.СуммаАмортизацииПР, 0) КАК АмортизацияПР,
	|	ЕСТЬNULL(АмортизацияОС.АмортизацияВР, 0) + ЕСТЬNULL(ТабАмортизации.СуммаАмортизацииВР, 0) КАК АмортизацияВР,
	|	ЕСТЬNULL(ОбесценениеОС.Амортизация, 0) - ЕСТЬNULL(ТабАмортизации.КорректировкаОбесценения, 0) КАК Обесценение,
	|	ЕСТЬNULL(ТабАмортизации.СуммаАмортизации, 0) КАК АмортизацияЗаТекущийМесяц,
	|	ЕСТЬNULL(ТабАмортизации.СуммаАмортизацииНУ, 0) КАК АмортизацияЗаТекущийМесяцНУ,
	|	ЕСТЬNULL(ТабАмортизации.СуммаАмортизацииПР, 0) КАК АмортизацияЗаТекущийМесяцПР,
	|	ЕСТЬNULL(ТабАмортизации.СуммаАмортизацииВР, 0) КАК АмортизацияЗаТекущийМесяцВР,
	|	ЕСТЬNULL(ТабИзноса.СуммаИзноса, 0) КАК ИзносЗаТекущийМесяц,
	|	ЕСТЬNULL(КорректировкаСтоимости.КорректировкаСтоимостиНУ, 0) КАК КорректировкаСтоимостиНУ
	|ИЗ
	|	ВТПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних КАК ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТГрафикиАмортизацииОСБухгалтерскийУчетСрезПоследних КАК ГрафикиАмортизацииОСБухгалтерскийУчетСрезПоследних
	|		ПО ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство = ГрафикиАмортизацииОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних КАК ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних
	|		ПО ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство = ПараметрыАмортизацииОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПараметрыАмортизацииОСНалоговыйУчетСрезПоследних КАК ПараметрыАмортизацииОСНалоговыйУчетСрезПоследних
	|		ПО ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство = ПараметрыАмортизацииОСНалоговыйУчетСрезПоследних.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПервоначальныеСведенияОСНалоговыйУчетСрезПоследних КАК ПервоначальныеСведенияОСНалоговыйУчетСрезПоследних
	|		ПО ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство = ПервоначальныеСведенияОСНалоговыйУчетСрезПоследних.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчетСрезПоследних КАК НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчетСрезПоследних
	|		ПО ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство = НачислениеАмортизацииОССпециальныйКоэффициентНалоговыйУчетСрезПоследних.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПервоначальныеСведенияОСНалоговыйУчетУСНСрезПоследних КАК ПервоначальныеСведенияОСНалоговыйУчетУСНСрезПоследних
	|		ПО ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство = ПервоначальныеСведенияОСНалоговыйУчетУСНСрезПоследних.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчетСрезПоследних КАК СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчетСрезПоследних
	|		ПО ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство = СпособыОтраженияРасходовПоАмортизацииОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачислениеАмортизацииОСБухгалтерскийУчетСрезПоследних КАК НачислениеАмортизацииОСБухгалтерскийУчетСрезПоследних
	|		ПО ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство = НачислениеАмортизацииОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачислениеАмортизацииОСНалоговыйУчетСрезПоследних КАК НачислениеАмортизацииОСНалоговыйУчетСрезПоследних
	|		ПО ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство = НачислениеАмортизацииОСНалоговыйУчетСрезПоследних.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСпособыОтраженияРасходовПоАренднымПлатежамОСНалоговыйУчетСрезПоследних КАК СпособыОтраженияРасходовПоАренднымПлатежамОСНалоговыйУчетСрезПоследних
	|		ПО ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство = СпособыОтраженияРасходовПоАренднымПлатежамОСНалоговыйУчетСрезПоследних.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСчетаБухгалтерскогоУчетаОССрезПоследних КАК СчетаБухгалтерскогоУчетаОССрезПоследних
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТХозрасчетныйОстатки КАК СтоимостьОС
	|			ПО СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство = СтоимостьОС.ОсновноеСредство
	|				И СчетаБухгалтерскогоУчетаОССрезПоследних.СчетУчета = СтоимостьОС.Счет
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТХозрасчетныйОстатки КАК АмортизацияОС
	|			ПО СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство = АмортизацияОС.ОсновноеСредство
	|				И СчетаБухгалтерскогоУчетаОССрезПоследних.СчетНачисленияАмортизации = АмортизацияОС.Счет
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТХозрасчетныйОстатки КАК ОбесценениеОС
	|			ПО СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство = ОбесценениеОС.ОсновноеСредство
	|				И СчетаБухгалтерскогоУчетаОССрезПоследних.СчетОбесценения = ОбесценениеОС.Счет
	|		ПО ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство = СчетаБухгалтерскогоУчетаОССрезПоследних.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТабАмортизации КАК ТабАмортизации
	|		ПО ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство = ТабАмортизации.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТабИзноса КАК ТабИзноса
	|		ПО ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство = ТабИзноса.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТМестонахождениеОСБухгалтерскийУчетСрезПоследних КАК МестонахождениеОСБухгалтерскийУчетСрезПоследних
	|		ПО ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство = МестонахождениеОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКорректировкаСтоимости КАК КорректировкаСтоимости
	|		ПО ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство = КорректировкаСтоимости.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСостоянияОСОрганизаций КАК СостоянияОСОрганизаций
	|		ПО ПервоначальныеСведенияОСБухгалтерскийУчетСрезПоследних.ОсновноеСредство = СостоянияОСОрганизаций.ОсновноеСредство";
	
	Возврат Запрос.Выполнить();
	
КонецФункции

#КонецОбласти

#Область ПодготовкаПараметровПроведенияДокумента

Функция ПодготовитьПараметрыПроведения(ДокументСсылка, Отказ) Экспорт
	
	ПараметрыПроведения = Новый Структура;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Организация КАК Организация
	|ИЗ
	|	Документ.АвизоОСИсходящее КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка";
	
	Результат    	= Запрос.Выполнить();
	
	Реквизиты       = ОбщегоНазначенияБПВызовСервера.ПолучитьСтруктуруИзРезультатаЗапроса(Результат);
	Период          = Реквизиты.Период;
	Организация     = Реквизиты.Организация;
	
	Если НЕ УчетнаяПолитика.Существует(Реквизиты.Организация, Реквизиты.Период, Истина, ДокументСсылка) Тогда
		Отказ = Истина;
		Возврат ПараметрыПроведения;
	КонецЕсли;
	
	Запрос.УстановитьПараметр("СодержаниеПроводки",  	 НСтр("ru = 'Передача ОС по авизо'"));
	Запрос.УстановитьПараметр("ПрименениеПБУ18", 		 УчетнаяПолитика.ПоддержкаПБУ18(Реквизиты.Организация, Реквизиты.Период));
	Запрос.УстановитьПараметр("ОтражатьВНалоговомУчете", УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Организация, Период));
	Запрос.УстановитьПараметр("СодержаниеАмортизация", 	 НСтр("ru = 'Начисление амортизации'"));
	Запрос.УстановитьПараметр("СодержаниеИзнос",       	 НСтр("ru = 'Начисление износа'"));
 
	НомераТаблиц = Новый Структура;
	
	Запрос.Текст = ТекстЗапросаРеквизитыДокумента(НомераТаблиц)
		+ ТекстЗапросаТаблицыДокумента(НомераТаблиц)
		+ ТекстЗапросаОС(НомераТаблиц)
		+ ТекстЗапросаПроверкиПоОС(НомераТаблиц)
		+ ТекстЗапросаСобытияОС(НомераТаблиц)
		+ ТекстЗапросаНачислениеАмортизацииОСБУ(НомераТаблиц)
		+ ТекстЗапросаНачислениеАмортизацииОСНУ(НомераТаблиц)
		+ ТекстЗапросаРеквизитыАмортизацияОС(НомераТаблиц)
		+ ТекстЗапросаРеквизитыИзносОС(НомераТаблиц)
		+ ТекстЗапросаПеремещениеДебетовыхОстатков(НомераТаблиц)
		+ ТекстЗапросаПеремещениеКредитовыхОстатков(НомераТаблиц)
		+ ТекстЗапросаНакопленныйИзнос(НомераТаблиц)
		+ ТекстЗапросаОбесценение(НомераТаблиц);
	
	Результат = Запрос.ВыполнитьПакет();
	
	Для каждого НомерТаблицы Из НомераТаблиц Цикл
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
	КонецЦикла;
	
	Возврат ПараметрыПроведения;
	
КонецФункции

Функция ТекстЗапросаРеквизитыДокумента(НомераТаблиц = Неопределено)
	
	НомераТаблиц.Вставить("ВременнаяТаблицаРеквизиты", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Реквизиты", НомераТаблиц.Количество());	
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Ссылка КАК Регистратор,
	|	Реквизиты.Дата КАК Период,
	|	Реквизиты.Номер КАК Номер,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.СобытиеОС КАК СобытиеОС,
	|	Реквизиты.ОрганизацияПолучатель КАК ОрганизацияПолучатель,
	|	Реквизиты.СчетРасчетов КАК СчетРасчетов
	|ПОМЕСТИТЬ ТаблицаРеквизиты
	|ИЗ
	|	Документ.АвизоОСИсходящее КАК Реквизиты
	|ГДЕ
	|	Реквизиты.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Реквизиты.Регистратор КАК Регистратор,
	|	Реквизиты.Период КАК Период,
	|	Реквизиты.Номер КАК Номер,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.СобытиеОС КАК СобытиеОС,
	|	Реквизиты.ОрганизацияПолучатель КАК ОрганизацияПолучатель,
	|	Реквизиты.СчетРасчетов КАК СчетРасчетов,
	|	&ПрименениеПБУ18 КАК ПрименениеПБУ18,
	|	&ОтражатьВНалоговомУчете КАК ОтражатьВНалоговомУчете,
	|	&СодержаниеПроводки КАК СодержаниеПроводки
	|ИЗ
	|	ТаблицаРеквизиты КАК Реквизиты";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаТаблицыДокумента(НомераТаблиц)

	НомераТаблиц.Вставить("ВременнаяТаблицаОС", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ОС.Ссылка КАК Регистратор,
	|	ОС.НомерСтроки,
	|	ОС.Амортизация,
	|	ОС.АмортизацияВР,
	|	ОС.АмортизацияДо2002НУ,
	|	ОС.АмортизацияДо2009НУ,
	|	ОС.АмортизацияНУ,
	|	ОС.АмортизацияПР,
	|	ОС.ГрафикАмортизации,
	|	ОС.ДатаПринятияКУчету,
	|	ОС.ДатаПриобретенияУСН,
	|	ОС.ИнвентарныйНомер,
	|	ОС.КоэффициентАмортизации,
	|	ОС.КоэффициентУскорения,
	|	ОС.НачислятьАмортизацию,
	|	ОС.НачислятьАмортизациюНУ,
	|	ОС.ОбъемПродукцииРабот,
	|	ОС.ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ОС.ОсновноеСредство,
	|	ОС.ПараметрВыработки,
	|	ОС.ПервоначальнаяСтоимость,
	|	ОС.ПервоначальнаяСтоимостьНУ,
	|	ОС.ПервоначальнаяСтоимостьУСН,
	|	ОС.ПодразделениеОрганизации,
	|	ОС.ПорядокВключенияСтоимостиВСоставРасходовНУ,
	|	ОС.ПорядокВключенияСтоимостиВСоставРасходовУСН,
	|	ОС.ПорядокПогашенияСтоимости,
	|	ОС.ПРДляВычисленияАмортизации,
	|	ОС.СпециальныйКоэффициентНУ,
	|	ОС.СпособНачисленияАмортизации,
	|	ОС.СпособПоступления,
	|	ОС.СпособыОтраженияРасходовПоАмортизации,
	|	ОС.СрокИспользованияДляВычисленияАмортизации,
	|	ОС.СрокПолезногоИспользования,
	|	ОС.СрокПолезногоИспользованияНУ,
	|	ОС.СрокПолезногоИспользованияУСН,
	|	ОС.Стоимость,
	|	ОС.СтоимостьВР,
	|	ОС.СтоимостьДляВычисленияАмортизации,
	|	ОС.СтоимостьДо2002НУ,
	|	ОС.СтоимостьНУ,
	|	ОС.СтоимостьПР,
	|	ОС.СуммаНачисленнойАмортизацииУСН,
	|	ОС.СчетНачисленияАмортизации,
	|	ОС.СчетУчета,
	|	ОС.ФактическийСрокИспользованияДо2009НУ,
	|	ОС.Контрагент,
	|	ОС.Обесценение,
	|	ОС.ДоговорКонтрагента,
	|	ОС.СпособОтраженияРасходовПоАренднымПлатежам,
	|	ОС.КорректировкаСтоимостиНУ,
	|	ОС.ЛиквидационнаяСтоимость
	|ПОМЕСТИТЬ ТаблицаОС
	|ИЗ
	|	Документ.АвизоОСИсходящее.ОС КАК ОС
	|ГДЕ
	|	ОС.Ссылка = &Ссылка";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаОС(НомераТаблиц)
	
	НомераТаблиц.Вставить("ОсновныеСредства", 	НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ОС.Регистратор,
	|	ОС.НомерСтроки,
	|	ОС.Амортизация,
	|	ОС.АмортизацияВР,
	|	ОС.АмортизацияДо2002НУ,
	|	ОС.АмортизацияДо2009НУ,
	|	ОС.АмортизацияНУ,
	|	ОС.АмортизацияПР,
	|	ОС.ГрафикАмортизации,
	|	ОС.ДатаПринятияКУчету,
	|	ОС.ДатаПриобретенияУСН,
	|	ОС.ИнвентарныйНомер,
	|	ОС.КоэффициентАмортизации,
	|	ОС.КоэффициентУскорения,
	|	ОС.НачислятьАмортизацию,
	|	ОС.НачислятьАмортизациюНУ,
	|	ОС.ОбъемПродукцииРабот,
	|	ОС.ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ОС.ОсновноеСредство,
	|	ОС.ПараметрВыработки,
	|	ОС.ПервоначальнаяСтоимость,
	|	ОС.ПервоначальнаяСтоимостьНУ,
	|	ОС.ПервоначальнаяСтоимостьУСН,
	|	ОС.ПодразделениеОрганизации,
	|	ОС.ПорядокВключенияСтоимостиВСоставРасходовНУ,
	|	ОС.ПорядокВключенияСтоимостиВСоставРасходовУСН,
	|	ОС.ПорядокПогашенияСтоимости,
	|	ОС.ПРДляВычисленияАмортизации,
	|	ОС.СпециальныйКоэффициентНУ,
	|	ОС.СпособНачисленияАмортизации,
	|	ОС.СпособПоступления,
	|	ОС.СпособыОтраженияРасходовПоАмортизации,
	|	ОС.СрокИспользованияДляВычисленияАмортизации,
	|	ОС.СрокПолезногоИспользования,
	|	ОС.СрокПолезногоИспользованияНУ,
	|	ОС.СрокПолезногоИспользованияУСН,
	|	ОС.Стоимость,
	|	ОС.СтоимостьВР,
	|	ОС.СтоимостьДляВычисленияАмортизации,
	|	ОС.СтоимостьДо2002НУ,
	|	ОС.СтоимостьНУ,
	|	ОС.СтоимостьПР,
	|	ОС.СуммаНачисленнойАмортизацииУСН,
	|	ОС.СчетНачисленияАмортизации,
	|	ОС.СчетУчета,
	|	ОС.ФактическийСрокИспользованияДо2009НУ,
	|	ОС.Контрагент,
	|	ОС.Обесценение,
	|	ОС.ДоговорКонтрагента,
	|	ОС.СпособОтраженияРасходовПоАренднымПлатежам,
	|	ОС.ЛиквидационнаяСтоимость
	|ИЗ
	|	ТаблицаОС КАК ОС";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаПроверкиПоОС(НомераТаблиц)

	НомераТаблиц.Вставить("ПроверкиПоОС", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Регистратор КАК Регистратор,
	|	Реквизиты.Период КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	""ОС"" КАК ИмяСписка,
	|	НЕОПРЕДЕЛЕНО КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО КАК МОЛ
	|ИЗ
	|	ТаблицаРеквизиты КАК Реквизиты";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаСобытияОС(НомераТаблиц)

	НомераТаблиц.Вставить("СобытияОС", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("СобытияОСТаблица", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Регистратор КАК Регистратор,
	|	Реквизиты.Период КАК Период,
	|	Реквизиты.Номер КАК Номер,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.СобытиеОС КАК СобытиеОС
	|ИЗ
	|	ТаблицаРеквизиты КАК Реквизиты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОС.Регистратор КАК Регистратор,
	|	ТаблицаОС.НомерСтроки КАК НомерСтроки,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	0 КАК СуммаЗатратБУ,
	|	0 КАК СуммаЗатратНУ,
	|	0 КАК СуммаЗатратУСН
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаНачислениеАмортизацииОСБУ(НомераТаблиц)

	НомераТаблиц.Вставить("НачислениеАмортизацииОСБУ", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Регистратор КАК Регистратор,
	|	Реквизиты.Период КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	ЛОЖЬ КАК НачислятьАмортизацию
	|ИЗ
	|	ТаблицаРеквизиты КАК Реквизиты";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаНачислениеАмортизацииОСНУ(НомераТаблиц)

	НомераТаблиц.Вставить("НачислениеАмортизацииОСНУ", НомераТаблиц.Количество());

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Регистратор КАК Регистратор,
	|	Реквизиты.Период КАК Период,
	|	Реквизиты.Организация КАК Организация,
	|	ЛОЖЬ КАК НачислятьАмортизацию
	|ИЗ
	|	ТаблицаРеквизиты КАК Реквизиты";

	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ТекстЗапросаРеквизитыАмортизацияОС(НомераТаблиц)
	
	НомераТаблиц.Вставить("НачислениеАмортизацииОС", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Регистратор КАК Регистратор,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.Период КАК Период,
	|	Реквизиты.Период КАК ДатаРасчета,
	|	ИСТИНА КАК ВыдаватьСообщения,
	|	"""" КАК ИмяСписка,
	|	&СодержаниеАмортизация КАК Содержание
	|ИЗ
	|	ТаблицаРеквизиты КАК Реквизиты";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции 

Функция ТекстЗапросаРеквизитыИзносОС(НомераТаблиц)
	
	НомераТаблиц.Вставить("НачислениеИзносаОС", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Реквизиты.Регистратор КАК Регистратор,
	|	Реквизиты.Организация КАК Организация,
	|	Реквизиты.Период КАК Период,
	|	Реквизиты.Период КАК ДатаРасчета,
	|	ИСТИНА КАК ВыдаватьСообщения,
	|	"""" КАК ИмяСписка,
	|	&СодержаниеИзнос КАК Содержание
	|ИЗ
	|	ТаблицаРеквизиты КАК Реквизиты";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции 
 
Функция ТекстЗапросаПеремещениеДебетовыхОстатков(НомераТаблиц)
	
	НомераТаблиц.Вставить("ТаблицаСтоимостьОС", 	НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ОС.ОсновноеСредство,
	|	ОС.СпособПоступления,
	|	ОС.ПодразделениеОрганизации,
	|	ОС.Стоимость,
	|	ОС.СтоимостьВР,
	|	ОС.СтоимостьНУ,
	|	ОС.КорректировкаСтоимостиНУ,
	|	ОС.СтоимостьПР,
	|	ОС.СчетУчета
	|ИЗ
	|	ТаблицаОС КАК ОС
	|ГДЕ
	|	ОС.СчетУчета <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|	И (ОС.Стоимость > 0
	|			ИЛИ ОС.СтоимостьНУ > 0
	|			ИЛИ ОС.СтоимостьПР <> 0
	|			ИЛИ ОС.СтоимостьВР <> 0
	|			ИЛИ ОС.КорректировкаСтоимостиНУ <> 0)";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаПеремещениеКредитовыхОстатков(НомераТаблиц)
	
	НомераТаблиц.Вставить("ТаблицаНакопленнаяАмортизация", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ОС.Амортизация,
	|	ОС.АмортизацияВР,
	|	ОС.АмортизацияНУ,
	|	ОС.АмортизацияПР,
	|	ОС.ОсновноеСредство,
	|	ОС.ПодразделениеОрганизации,
	|	ОС.СчетНачисленияАмортизации
	|ИЗ
	|	ТаблицаОС КАК ОС
	|ГДЕ
	|	ОС.ПорядокПогашенияСтоимости = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеАмортизации)
	|	И ОС.СчетНачисленияАмортизации <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|	И (ОС.Амортизация > 0
	|			ИЛИ ОС.АмортизацияНУ > 0
	|			ИЛИ ОС.АмортизацияПР <> 0
	|			ИЛИ ОС.АмортизацияВР <> 0)";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции 

Функция ТекстЗапросаНакопленныйИзнос(НомераТаблиц)
	
	НомераТаблиц.Вставить("ТаблицаНакопленныйИзнос", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ОС.Амортизация,
	|	ОС.ОсновноеСредство,
	|	ОС.ПодразделениеОрганизации,
	|	ОС.СчетНачисленияАмортизации
	|ИЗ
	|	ТаблицаОС КАК ОС
	|ГДЕ
	|	(ОС.ПорядокПогашенияСтоимости = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзноса)
	|			ИЛИ ОС.ПорядокПогашенияСтоимости = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ))
	|	И ОС.СчетНачисленияАмортизации <> ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)
	|	И ОС.Амортизация <> 0";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции 

Функция ТекстЗапросаОбесценение(НомераТаблиц)
	
	НомераТаблиц.Вставить("ТаблицаОбесценение", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ОС.Обесценение,
	|	ОС.ОсновноеСредство,
	|	ОС.ПодразделениеОрганизации,
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОбесценениеОС_01) КАК СчетОбесценения
	|ИЗ
	|	ТаблицаОС КАК ОС
	|ГДЕ
	|	ОС.Обесценение <> 0";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции 

#КонецОбласти

#Область ФормированиеДвижений

Функция ПодготовитьПараметрыСтоимостьОС(ТаблицаОС, ТаблицаРеквизиты)
	
	Параметры = Новый Структура;
	
	// Подготовка таблицы Параметры.ТаблицаОС
	
	СписокОбязательныхКолонок = ""
	+ "ОсновноеСредство,"       		// <СправочникСсылка.ОсновныеСредства>
	+ "СпособПоступления,"				// <ПеречислениеСсылка.СпособыПоступленияАктивов>
	+ "СчетУчета," 						// <План счетов бухгалтерского учета>
	+ "ПодразделениеОрганизации,"       // <Ссылка на справочник подразделений>
	+ "Стоимость,"           	 		// <Число (15,2)>
	+ "СтоимостьНУ,"         			// <Число (15,2)>
	+ "КорректировкаСтоимостиНУ,"		// <Число (15,2)>
	+ "СтоимостьПР,"             		// <Число (15,2)>
	+ "СтоимостьВР,";             		// <Число (15,2)>
	
	Параметры.Вставить("ТаблицаОС",
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаОС, СписокОбязательныхКолонок));
	
	// Подготовка таблицы Параметры.Реквизиты
	
	СписокОбязательныхКолонок = ""
	+ "Период,"                         // <Дата> - период движений - дата документа
	+ "Организация,"                    // <СправочникСсылка.Организации>
	+ "ОрганизацияПолучатель,"       	// <СправочникСсылка.Организации>
	+ "СчетРасчетов,"                   // <План счетов бухгалтерского учета>
	+ "ПрименениеПБУ18,"       			// <Булево>
	+ "ОтражатьВНалоговомУчете,"        // <Булево>
	+ "СодержаниеПроводки,"             // <Строка>
	;
	
	Параметры.Вставить("Реквизиты",
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));
	
	Возврат Параметры;
	
КонецФункции

// Процедура формирования движений по регистру бухгалтерии Хозрасчетный
Процедура СформироватьДвиженияСтоимостьОС(ТаблицаОС, ТаблицаРеквизиты, Движения, Отказ) Экспорт 
	
	Проводки = Движения.Хозрасчетный;
	
	Параметры = ПодготовитьПараметрыСтоимостьОС(ТаблицаОС, ТаблицаРеквизиты);
	Реквизиты = Параметры.Реквизиты[0];
 	
	Для Каждого СтрокаОС Из Параметры.ТаблицаОС Цикл
		
		Проводка = Проводки.Добавить();
		
		Проводка.Период       = Реквизиты.Период;
		Проводка.Организация  = Реквизиты.Организация;
		Проводка.Содержание   = Реквизиты.СодержаниеПроводки;
		Проводка.Сумма        = СтрокаОС.Стоимость;
		
		Проводка.СчетДт       = Реквизиты.СчетРасчетов;
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ОбособленныеПодразделения", Реквизиты.ОрганизацияПолучатель);
		
		Проводка.СчетКт       = СтрокаОС.СчетУчета;
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ОсновныеСредства", СтрокаОС.ОсновноеСредство);
		
		БухгалтерскийУчет.УстановитьПодразделениеПроводки(Проводка, СтрокаОС.ПодразделениеОрганизации, "Кт");
		
		Если Реквизиты.ОтражатьВНалоговомУчете Тогда
			НалоговыйУчет.ЗаполнитьНалоговыеСуммыПроводки(СтрокаОС.СтоимостьНУ,СтрокаОС.СтоимостьНУ,
				СтрокаОС.СтоимостьПР,СтрокаОС.СтоимостьПР,
				СтрокаОС.СтоимостьВР,СтрокаОС.СтоимостьВР,
				Проводка, Реквизиты.ПрименениеПБУ18);
				
			Если СтрокаОС.КорректировкаСтоимостиНУ <> 0 
				И СтрокаОС.СпособПоступления = Перечисления.СпособыПоступленияАктивов.ПоДоговоруЛизинга Тогда
				
				Проводка = Проводки.Добавить();
				
				Проводка.Период       = Реквизиты.Период;
				Проводка.Организация  = Реквизиты.Организация;
				Проводка.Содержание   = Реквизиты.СодержаниеПроводки;
				
				Проводка.СчетДт       = Реквизиты.СчетРасчетов;
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ОбособленныеПодразделения", Реквизиты.ОрганизацияПолучатель);
				
				Проводка.СчетКт       = ПланыСчетов.Хозрасчетный.КорректировкаСтоимостиАрендованногоИмущества;
				БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ОсновныеСредства", СтрокаОС.ОсновноеСредство);
				
				БухгалтерскийУчет.УстановитьПодразделениеПроводки(Проводка, СтрокаОС.ПодразделениеОрганизации, "Кт");
				
				НалоговыйУчет.ЗаполнитьНалоговыеСуммыПроводки(СтрокаОС.КорректировкаСтоимостиНУ,СтрокаОС.КорректировкаСтоимостиНУ,
					0,0,-СтрокаОС.КорректировкаСтоимостиНУ,-СтрокаОС.КорректировкаСтоимостиНУ,
					Проводка, Реквизиты.ПрименениеПБУ18);
				
			КонецЕсли;
				
		КонецЕсли;
		
	КонецЦикла;

	Проводки.Записывать = Истина;
	
КонецПроцедуры

Функция ПодготовитьПараметрыНакопленнаяАмортизация(ТаблицаОС, ТаблицаРеквизиты)
	
	Параметры = Новый Структура;
	
	// Подготовка таблицы Параметры.ТаблицаОС
	
	СписокОбязательныхКолонок = ""
	+ "ОсновноеСредство,"       		// <СправочникСсылка.ОсновныеСредства>
	+ "СчетНачисленияАмортизации," 		// <План счетов бухгалтерского учета>
	+ "ПодразделениеОрганизации,"       // <Ссылка на справочник подразделений>
	+ "Амортизация,"           	 		// <Число (15,2)>
	+ "АмортизацияНУ,"         			// <Число (15,2)>
	+ "АмортизацияПР,"             		// <Число (15,2)>
	+ "АмортизацияВР,";             	// <Число (15,2)>
	
	Параметры.Вставить("ТаблицаОС",
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаОС, СписокОбязательныхКолонок));
	
	// Подготовка таблицы Параметры.Реквизиты
	
	СписокОбязательныхКолонок = ""
	+ "Период,"                         // <Дата> - период движений - дата документа
	+ "Организация,"                    // <СправочникСсылка.Организации>
	+ "ОрганизацияПолучатель,"       	// <СправочникСсылка.Организации>
	+ "СчетРасчетов,"                   // <План счетов бухгалтерского учета>
	+ "ПрименениеПБУ18,"       			// <Булево>
	+ "ОтражатьВНалоговомУчете,"        // <Булево>
	+ "СодержаниеПроводки,"             // <Строка>
	;
	
	Параметры.Вставить("Реквизиты",
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));
	
	Возврат Параметры;
	
КонецФункции

// Процедура формирования движений по регистру бухгалтерии Хозрасчетный
Процедура СформироватьДвиженияНакопленнаяАмортизация(ТаблицаПеремещенияКО, ТаблицаРеквизиты, Движения, Отказ) Экспорт
	
	Проводки = Движения.Хозрасчетный;
	
	Параметры = ПодготовитьПараметрыНакопленнаяАмортизация(ТаблицаПеремещенияКО, ТаблицаРеквизиты);
	Реквизиты = Параметры.Реквизиты[0];
	
	Для Каждого СтрокаОС Из Параметры.ТаблицаОС Цикл
		
		Проводка = Проводки.Добавить();
		
		Проводка.Период       = Реквизиты.Период;
		Проводка.Организация  = Реквизиты.Организация;
		Проводка.Содержание   = Реквизиты.СодержаниеПроводки;
		Проводка.Сумма        = СтрокаОС.Амортизация;
		
		Проводка.СчетДт          = СтрокаОС.СчетНачисленияАмортизации;
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ОсновныеСредства", СтрокаОС.ОсновноеСредство);
		
		Проводка.СчетКт          = Реквизиты.СчетРасчетов;
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ОбособленныеПодразделения", Реквизиты.ОрганизацияПолучатель);
		
		БухгалтерскийУчет.УстановитьПодразделениеПроводки(Проводка, СтрокаОС.ПодразделениеОрганизации, "Дт");
		
		Если Реквизиты.ОтражатьВНалоговомУчете Тогда
			НалоговыйУчет.ЗаполнитьНалоговыеСуммыПроводки(СтрокаОС.АмортизацияНУ,СтрокаОС.АмортизацияНУ,
				СтрокаОС.АмортизацияПР,СтрокаОС.АмортизацияПР,
				СтрокаОС.АмортизацияВР,СтрокаОС.АмортизацияВР,
				Проводка, Реквизиты.ПрименениеПБУ18);
		КонецЕсли;
		
	КонецЦикла;
	
	Проводки.Записывать = Истина;
	
КонецПроцедуры

Функция ПодготовитьПараметрыНакопленныйИзнос(ТаблицаОС, ТаблицаРеквизиты)
	
	Параметры = Новый Структура;
	
	// Подготовка таблицы Параметры.ТаблицаОС
	
	СписокОбязательныхКолонок = ""
	+ "ОсновноеСредство,"       		// <СправочникСсылка.ОсновныеСредства>
	+ "СчетНачисленияАмортизации," 		// <План счетов бухгалтерского учета>
	+ "ПодразделениеОрганизации,"       // <Ссылка на справочник подразделений>
	+ "Амортизация,";           	 	// <Число (15,2)>
	
	Параметры.Вставить("ТаблицаОС",
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаОС, СписокОбязательныхКолонок));
	
	// Подготовка таблицы Параметры.Реквизиты
	
	СписокОбязательныхКолонок = ""
	+ "Период,"                         // <Дата> - период движений - дата документа
	+ "Организация,"                    // <СправочникСсылка.Организации>
	+ "СодержаниеПроводки,"             // <Строка>
	;
	
	Параметры.Вставить("Реквизиты",
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));
	
	Возврат Параметры;
	
КонецФункции
  
// Процедура формирования движений по регистру бухгалтерии Хозрасчетный
Процедура СформироватьДвиженияНакопленныйИзнос(ТаблицаНакопленныйИзнос, ТаблицаРеквизиты, Движения, Отказ) Экспорт
	
	Проводки = Движения.Хозрасчетный;
		
	Параметры = ПодготовитьПараметрыНакопленныйИзнос(ТаблицаНакопленныйИзнос, ТаблицаРеквизиты);
	Реквизиты = Параметры.Реквизиты[0];
	
	Для Каждого СтрокаОС Из Параметры.ТаблицаОС Цикл
		
		Проводка = Проводки.Добавить();
		
		Проводка.Период       = Реквизиты.Период;
		Проводка.Организация  = Реквизиты.Организация;
		Проводка.Содержание   = Реквизиты.СодержаниеПроводки;
		Проводка.Сумма        = СтрокаОС.Амортизация;
		
		Проводка.СчетКт       = СтрокаОС.СчетНачисленияАмортизации;
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ОсновныеСредства", СтрокаОС.ОсновноеСредство);
		
		БухгалтерскийУчет.УстановитьПодразделениеПроводки(Проводка, СтрокаОС.ПодразделениеОрганизации, "Кт");
		
	КонецЦикла;
	
	Проводки.Записывать = Истина;
	
КонецПроцедуры

Функция ПодготовитьПараметрыОбесценение(ТаблицаОС, ТаблицаРеквизиты)
	
	Параметры = Новый Структура;
	
	// Подготовка таблицы Параметры.ТаблицаОС
	
	СписокОбязательныхКолонок = ""
	+ "ОсновноеСредство,"       		// <СправочникСсылка.ОсновныеСредства>
	+ "СчетОбесценения," 		        // <План счетов бухгалтерского учета>
	+ "ПодразделениеОрганизации,"       // <Ссылка на справочник подразделений>
	+ "Обесценение,";          	 		// <Число (15,2)>
	
	Параметры.Вставить("ТаблицаОС",
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаОС, СписокОбязательныхКолонок));
	
	// Подготовка таблицы Параметры.Реквизиты
	
	СписокОбязательныхКолонок = ""
	+ "Период,"                         // <Дата> - период движений - дата документа
	+ "Организация,"                    // <СправочникСсылка.Организации>
	+ "ОрганизацияПолучатель,"       	// <СправочникСсылка.Организации>
	+ "СчетРасчетов,"                   // <План счетов бухгалтерского учета>
	+ "СодержаниеПроводки,"             // <Строка>
	;
	
	Параметры.Вставить("Реквизиты",
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));
	
	Возврат Параметры;
	
КонецФункции

// Процедура формирования движений по регистру бухгалтерии Хозрасчетный
Процедура СформироватьДвиженияОбесценение(ТаблицаПеремещенияКО, ТаблицаРеквизиты, Движения, Отказ) Экспорт
	
	Проводки = Движения.Хозрасчетный;
	
	Параметры = ПодготовитьПараметрыОбесценение(ТаблицаПеремещенияКО, ТаблицаРеквизиты);
	Реквизиты = Параметры.Реквизиты[0];
	
	Для Каждого СтрокаОС Из Параметры.ТаблицаОС Цикл
		
		Проводка = Проводки.Добавить();
		
		Проводка.Период       = Реквизиты.Период;
		Проводка.Организация  = Реквизиты.Организация;
		Проводка.Содержание   = Реквизиты.СодержаниеПроводки;
		Проводка.Сумма        = СтрокаОС.Обесценение;
		
		Проводка.СчетДт          = СтрокаОС.СчетОбесценения;
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетДт, Проводка.СубконтоДт, "ОсновныеСредства", СтрокаОС.ОсновноеСредство);
		
		Проводка.СчетКт          = Реквизиты.СчетРасчетов;
		БухгалтерскийУчет.УстановитьСубконто(Проводка.СчетКт, Проводка.СубконтоКт, "ОбособленныеПодразделения", Реквизиты.ОрганизацияПолучатель);
		
		БухгалтерскийУчет.УстановитьПодразделениеПроводки(Проводка, СтрокаОС.ПодразделениеОрганизации, "Дт");
				
	КонецЦикла;
	
	Проводки.Записывать = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ПроцедурыИФункцииПечати

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - ТаблицаЗначений - состав полей см. в функции УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	// Авизо
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "Авизо";
	КомандаПечати.Представление = НСтр("ru = 'Авизо'");
	КомандаПечати.Обработчик    = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечати";
	
	// Реестр документов
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор  = "Реестр";
	КомандаПечати.Представление  = НСтр("ru = 'Реестр документов'");
	КомандаПечати.ЗаголовокФормы = НСтр("ru = 'Реестр документов ""Авизо по ОС исходящее""'");
	КомандаПечати.Обработчик     = "УправлениеПечатьюБПКлиент.ВыполнитьКомандуПечатиРеестраДокументов";
	КомандаПечати.СписокФорм     = "ФормаСписка";
	КомандаПечати.Порядок        = 100;

КонецПроцедуры

Функция ПолучитьПериодВыборкиДвиженийССубконто(МассивОбъектов)

	СтруктураДат = Новый Структура("ДатаОТ, ДатаДО");
	
	ЗапросПериодОборотов = Новый Запрос;
	ЗапросПериодОборотов.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	ЗапросПериодОборотов.Текст = 
	"ВЫБРАТЬ
	|	МИНИМУМ(Док.Дата) КАК ДатаОТ,
	|	МАКСИМУМ(Док.Дата) КАК ДатаДО
	|ИЗ
	|	Документ.АвизоОСИсходящее КАК Док
	|ГДЕ
	|	Док.Ссылка В(&МассивОбъектов)";
	
	ВыборкаПериодОборотов = ЗапросПериодОборотов.Выполнить().Выбрать();
	ВыборкаПериодОборотов.Следующий();
	
	СтруктураДат.Вставить("ДатаОТ", 	ВыборкаПериодОборотов.ДатаОТ - 1);
	СтруктураДат.Вставить("ДатаДО", 	ВыборкаПериодОборотов.ДатаДО + 1);

	Возврат СтруктураДат;
	
КонецФункции

// Формирует и возвращает текст запроса для выборки данных,
// необходимых для формирования печатной формы
Функция ПолучитьТекстЗапросаДляФормированияПечатнойФормыАвизо()
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Авизо.Ссылка,
	|	Авизо.Номер,
	|	Авизо.Дата,
	|	Авизо.СчетРасчетов,
	|	Авизо.Организация КАК ОрганизацияОтправитель,
	|	ВЫБОР
	|		КОГДА Авизо.Организация.ГоловнаяОрганизация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			ТОГДА Авизо.Организация
	|		ИНАЧЕ Авизо.Организация.ГоловнаяОрганизация
	|	КОНЕЦ КАК Организация,
	|	Авизо.ОрганизацияПолучатель КАК ОрганизацияПолучатель,
	|	Авизо.Ответственный,
	|	Авизо.Ответственный.Представление
	|ПОМЕСТИТЬ ТаблицаШапка
	|ИЗ
	|	Документ.АвизоОСИсходящее КАК Авизо
	|ГДЕ
	|	Авизо.Ссылка В(&МассивОбъектов)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаШапка.Ссылка КАК Ссылка,
	|	ТаблицаШапка.Номер КАК Номер,
	|	ТаблицаШапка.Дата КАК Дата,
	|	ТаблицаШапка.СчетРасчетов,
	|	ТаблицаШапка.ОрганизацияОтправитель,
	|	ТаблицаШапка.Организация,
	|	ТаблицаШапка.ОрганизацияПолучатель,
	|	ТаблицаШапка.Ответственный,
	|	ТаблицаШапка.ОтветственныйПредставление
	|ИЗ
	|	ТаблицаШапка КАК ТаблицаШапка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата,
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Авизо.Ссылка КАК Ссылка,
	|	Авизо.ОсновноеСредство КАК ОсновноеСредствоСсылка,
	|	ВЫРАЗИТЬ(Авизо.ОсновноеСредство.НаименованиеПолное КАК СТРОКА(1000)) КАК ОсновноеСредство,
	|	Авизо.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	Авизо.Стоимость КАК Стоимость,
	|	Авизо.Амортизация КАК Амортизация,
	|	Авизо.Обесценение КАК Обесценение,
	|	Авизо.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	Документ.АвизоОСИсходящее.ОС КАК Авизо
	|ГДЕ
	|	Авизо.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйДвиженияССубконто.Регистратор КАК Регистратор,
	|	ХозрасчетныйДвиженияССубконто.НомерСтроки КАК НомерСтроки,
	|	ХозрасчетныйДвиженияССубконто.СчетДт,
	|	ХозрасчетныйДвиженияССубконто.СубконтоДт1,
	|	ХозрасчетныйДвиженияССубконто.СубконтоДт2,
	|	ХозрасчетныйДвиженияССубконто.СубконтоДт3,
	|	ХозрасчетныйДвиженияССубконто.СчетКт,
	|	ХозрасчетныйДвиженияССубконто.СубконтоКт1,
	|	ХозрасчетныйДвиженияССубконто.СубконтоКт2,
	|	ХозрасчетныйДвиженияССубконто.СубконтоКт3,
	|	ХозрасчетныйДвиженияССубконто.Организация,
	|	ХозрасчетныйДвиженияССубконто.ВалютаДт,
	|	ХозрасчетныйДвиженияССубконто.ВалютаКт,
	|	ХозрасчетныйДвиженияССубконто.Сумма,
	|	ХозрасчетныйДвиженияССубконто.ВалютнаяСуммаДт,
	|	ХозрасчетныйДвиженияССубконто.ВалютнаяСуммаКт,
	|	ХозрасчетныйДвиженияССубконто.КоличествоДт,
	|	ХозрасчетныйДвиженияССубконто.КоличествоКт,
	|	ХозрасчетныйДвиженияССубконто.Содержание,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйДвиженияССубконто.СуммаНУДт ЕСТЬ NULL 
	|			ТОГДА ХозрасчетныйДвиженияССубконто.СуммаНУКт
	|		ИНАЧЕ ХозрасчетныйДвиженияССубконто.СуммаНУДт
	|	КОНЕЦ КАК СуммаНУ,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйДвиженияССубконто.СуммаПРДт ЕСТЬ NULL 
	|			ТОГДА ХозрасчетныйДвиженияССубконто.СуммаПРКт
	|		ИНАЧЕ ХозрасчетныйДвиженияССубконто.СуммаПРДт
	|	КОНЕЦ КАК СуммаПР,
	|	ВЫБОР
	|		КОГДА ХозрасчетныйДвиженияССубконто.СуммаВРДт ЕСТЬ NULL 
	|			ТОГДА ХозрасчетныйДвиженияССубконто.СуммаВРКт
	|		ИНАЧЕ ХозрасчетныйДвиженияССубконто.СуммаВРДт
	|	КОНЕЦ КАК СуммаВР
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(
	|			&ДатаОТ,
	|			&ДатаДО,
	|			(Регистратор, СчетДт) В
	|					(ВЫБРАТЬ
	|						ТаблицаШапка.Ссылка,
	|						ТаблицаШапка.СчетРасчетов
	|					ИЗ
	|						ТаблицаШапка)
	|				ИЛИ (Регистратор, СчетКт) В
	|					(ВЫБРАТЬ
	|						ТаблицаШапка.Ссылка,
	|						ТаблицаШапка.СчетРасчетов
	|					ИЗ
	|						ТаблицаШапка),
	|			,
	|			) КАК ХозрасчетныйДвиженияССубконто
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Функция формирует табличный документ с печатной формой накладной,
// разработанной методистами
//
// Возвращаемое значение:
//  Табличный документ - печатная форма накладной
//
Функция ПечатьАвизо(МассивОбъектов, ОбъектыПечати)

	УстановитьПривилегированныйРежим(Истина);
	
	ТабДокумент = Новый ТабличныйДокумент;
	ТабДокумент.АвтоМасштаб			= Истина;
	ТабДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет;
	ТабДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_АвизоОСИсходящее_Авизо";

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	СтруктураДат = ПолучитьПериодВыборкиДвиженийССубконто(МассивОбъектов);
	Запрос.УстановитьПараметр("ДатаОТ", 		СтруктураДат.ДатаОТ);
	Запрос.УстановитьПараметр("ДатаДО", 		СтруктураДат.ДатаДО);
	
	Запрос.Текст = ПолучитьТекстЗапросаДляФормированияПечатнойФормыАвизо();
	
 	Результаты = Запрос.ВыполнитьПакет();

	Шапка 			= Результаты[1].Выбрать();
	ВыборкаСтрокОС 	= Результаты[2].Выбрать();
	ВыборкаДвижений = Результаты[3].Выбрать();
	
	ПервыйДокумент = Истина;
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.АвизоОСИсходящее.ПФ_MXL_Авизо");

	Пока Шапка.СледующийПоЗначениюПоля("Ссылка") Цикл
		
		Если НЕ ПервыйДокумент Тогда
			ТабДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ПервыйДокумент = Ложь;
		
		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабДокумент.ВысотаТаблицы + 1;
	
		// Выводим основную шапку
		ОбластьМакета = Макет.ПолучитьОбласть("Шапка");
		ОбластьМакета.Параметры.ТекстЗаголовка = ОбщегоНазначенияБПВызовСервера.СформироватьЗаголовокДокумента(Шапка, НСтр("ru = 'Извещение (авизо) на передачу ОС'"));
		
		СведенияОбОрганизации    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.Организация, Шапка.Дата);
		ПредставлениеОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм,");
		ОбластьМакета.Параметры.Организация = ПредставлениеОрганизации;
		
		СведенияОбОтправителе    = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.ОрганизацияОтправитель, Шапка.Дата);
		ПредставлениеОтправителя = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОтправителе, "НаименованиеДляПечатныхФорм,");
		ОбластьМакета.Параметры.Отправитель = ПредставлениеОтправителя;
		
		СведенияОПолучателе     = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(Шапка.ОрганизацияПолучатель, Шапка.Дата);
		ПредставлениеПолучателя = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОПолучателе, "НаименованиеДляПечатныхФорм,");
		ОбластьМакета.Параметры.Получатель = ПредставлениеПолучателя;
		
		ТабДокумент.Вывести(ОбластьМакета);

		//// Выводим шапку таблицы ОС
		ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокТаблицыОС");
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим строки таблицы ОС
		
		ВыборкаСтрокОС.Сбросить();
		СтруктураПоиска = Новый Структура("Ссылка", Шапка.Ссылка);
 		
		ИтогоАмортизация = 0;
		ИтогоСтоимость = 0;
		ИтогоОбесценение = 0;
		Пока ВыборкаСтрокОС.НайтиСледующий(СтруктураПоиска) Цикл

			ОбластьМакета = Макет.ПолучитьОбласть("СтрокаТаблицыОС");
			ОбластьМакета.Параметры.Заполнить(ВыборкаСтрокОС);
			
			ТабДокумент.Вывести(ОбластьМакета);
			
			ИтогоСтоимость 		= ИтогоСтоимость + ВыборкаСтрокОС.Стоимость;
			ИтогоАмортизация 	= ИтогоАмортизация + ВыборкаСтрокОС.Амортизация;
			ИтогоОбесценение 	= ИтогоОбесценение + ВыборкаСтрокОС.Обесценение;
		КонецЦикла;

		// Выводим подвал таблицы ОС
		ОбластьМакета = Макет.ПолучитьОбласть("ПодвалТаблицыОС");
		ОбластьМакета.Параметры.ИтогоСтоимость 		= ИтогоСтоимость;
		ОбластьМакета.Параметры.ИтогоАмортизация 	= ИтогоАмортизация;
		ОбластьМакета.Параметры.ИтогоОбесценение 	= ИтогоОбесценение;
		ТабДокумент.Вывести(ОбластьМакета);

		// Выводим шапку таблицы БУ
		ОбластьМакета = Макет.ПолучитьОбласть("ЗаголовокТаблицыБУ");
		ТабДокумент.Вывести(ОбластьМакета);
		
		ВыборкаДвижений.Сбросить();
		СтруктураПоиска = Новый Структура("Регистратор", Шапка.Ссылка);
	
		НС = 1;
		// Выводим строки таблицы БУ
		Пока ВыборкаДвижений.НайтиСледующий(СтруктураПоиска) Цикл
			
			ОбластьМакета = Макет.ПолучитьОбласть("СтрокаТаблицыБУ");
			ОбластьМакета.Параметры.Заполнить(ВыборкаДвижений);
			ОбластьМакета.Параметры.НомерСтроки = НС;
			
			АналитикаДт = 
				?(ЗначениеЗаполнено(ВыборкаДвижений.СубконтоДт1), Строка(ВыборкаДвижений.СубконтоДт1) + Символы.ПС, "")
				+ ?(ЗначениеЗаполнено(ВыборкаДвижений.СубконтоДт2), Строка(ВыборкаДвижений.СубконтоДт2) + Символы.ПС, "")
				+ ?(ЗначениеЗаполнено(ВыборкаДвижений.СубконтоДт3), Строка(ВыборкаДвижений.СубконтоДт3), "");
						
			АналитикаКт = 
				?(ЗначениеЗаполнено(ВыборкаДвижений.СубконтоКт1), Строка(ВыборкаДвижений.СубконтоКт1) + Символы.ПС, "")
				+ ?(ЗначениеЗаполнено(ВыборкаДвижений.СубконтоКт2), Строка(ВыборкаДвижений.СубконтоКт2) + Символы.ПС, "")
				+ ?(ЗначениеЗаполнено(ВыборкаДвижений.СубконтоКт3), Строка(ВыборкаДвижений.СубконтоКт3), "");
						
			ОбластьМакета.Параметры.АналитикаДт = АналитикаДт;
			ОбластьМакета.Параметры.АналитикаКт = АналитикаКт;
			
			ТабДокумент.Вывести(ОбластьМакета);
			НС = НС +1;		
		КонецЦикла;

		// Выводим подвал таблицы БУ
		ОбластьМакета = Макет.ПолучитьОбласть("ПодвалТаблицыБУ");
		ТабДокумент.Вывести(ОбластьМакета);
		
		// Выводим общий подвал
		ОбластьМакета = Макет.ПолучитьОбласть("Подвал");
		ОбластьМакета.Параметры.РасшифровкаПодписиИсполнителя = ?(НЕ ЗначениеЗаполнено(Шапка.ОтветственныйПредставление), "", 
																				Шапка.ОтветственныйПредставление);
		ТабДокумент.Вывести(ОбластьМакета);
	
		// В табличном документе зададим имя области, в которую был 
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабДокумент, 
			НомерСтрокиНачало, ОбъектыПечати, Шапка.Ссылка);
		
	КонецЦикла;
    	
	Возврат ТабДокумент;

КонецФункции // ПечатьПеремещениеТоваров()

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Авизо") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Авизо", "Авизо", 
			ПечатьАвизо(МассивОбъектов, ОбъектыПечати), , "Документ.АвизоОСИсходящее.ПФ_MXL_Авизо");
	КонецЕсли;
	
	ОбщегоНазначенияБП.ЗаполнитьДополнительныеПараметрыПечати(МассивОбъектов, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода);	
	
КонецПроцедуры

Функция ПолучитьДополнительныеРеквизитыДляРеестра() Экспорт
	
	Результат = Новый Структура("Информация", "ОрганизацияПолучатель");
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)
	|	ИЛИ ЗначениеРазрешено(ОрганизацияПолучатель)
	|;
	|РазрешитьИзменениеЕслиРазрешеноЧтение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#КонецЕсли