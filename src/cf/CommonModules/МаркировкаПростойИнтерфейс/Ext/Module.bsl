
//ОбработчикОбновления
//Параметры: нет
//
//Возвращаемое значение: нет
//
Процедура УстановитьИспользованиеМаркировки() Экспорт
	
	Если МаркировкаВключена() Тогда
		МенеджерЗначенияКонстанты = Константы.ИспользоватьМаркировку.СоздатьМенеджерЗначения();
		МенеджерЗначенияКонстанты.Значение = Истина;
		ОбновлениеИНформационнойБазы.ЗаписатьДанные(МенеджерЗначенияКонстанты);
	КонецЕсли;
	  
КонецПроцедуры

//Устанавливает видимость только минимально необходимых элементов в форме настройки в простом интерфейсе
//Параметры: Форма Тип("ФормаКлиентскогоПриложения")
//
//Возвращаемое значение: нет
//
Процедура ПанельАдминистрированияИСМП_ПриСозданииНаСервере(Форма) Экспорт
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьМаркировку") И ОбщегоНазначенияБП.ЭтоПростойИнтерфейс() Тогда
		ЭлементыФормы = Форма.Элементы;
		ИменаСкрываемыхЭлементов = СкрываемыеЭлементыПанелиАдминистрирования();
		Для Каждого Элемент Из ЭлементыФормы Цикл
			Если Не ИменаСкрываемыхЭлементов.Найти(Элемент.Имя) = Неопределено Тогда
				Элемент.Видимость = Ложь;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Форма.УсловноеОформление.Элементы.Очистить();
	
КонецПроцедуры

//формирует массив скрываемых элементов формы ПанельАдминситрирования ИСМП
//Параметры: нет
//
//Возвращаемое значение: МассивИменЭлементов Тип("Массив")
//
Функция СкрываемыеЭлементыПанелиАдминистрирования()
	
	МассивИменЭлементов = Новый Массив;
	
	МассивИменЭлементов.Добавить("ГруппаЕдиницаИзмеренияКилограмм");
	МассивИменЭлементов.Добавить("ГруппаЕдиницаИзмеренияЛитр");
	МассивИменЭлементов.Добавить("ГруппаКонтрольСтатусовКодовМаркировки");
	МассивИменЭлементов.Добавить("ГруппаНастройкиСУЗ");
	МассивИменЭлементов.Добавить("ГруппаНастройкиОбмена");
	МассивИменЭлементов.Добавить("НастроитьОтветственныхЗаАктуализациюТокеновАвторизации");
	МассивИменЭлементов.Добавить("РежимРаботыСТестовымКонтуромИСМП");
	МассивИменЭлементов.Добавить("ГруппаНастройкиРегламентныхЗаданий");
	МассивИменЭлементов.Добавить("ГруппаФоноваяПроверкаДокументовДляГИСМТ");
	
	Возврат МассивИменЭлементов;
	
КонецФункции

//Устанавливает видимость только минимально необходимых элементов в форме обмена в простом интерфейсе
//Параметры: Форма Тип("ФормаКлиентскогоПриложения")
//
//Возвращаемое значение: нет
//
Процедура ПанельОбменаИСМП_ПриСозданииНаСервере(Форма) Экспорт
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьМаркировку") И ОбщегоНазначенияБП.ЭтоПростойИнтерфейс() Тогда
		ЭлементыФормы = Форма.Элементы;
		ИменаСкрываемыхЭлементов = СкрываемыеЭлементыПанелиОбмена();
		Для Каждого Элемент Из ЭлементыФормы Цикл
			Если Не ИменаСкрываемыхЭлементов.Найти(Элемент.Имя) = Неопределено Тогда
				Элемент.Видимость = Ложь;
			КонецЕсли;
			Если Элемент.Имя = "ГруппаСмТакже" Тогда
				ИменаВидимыхЭлементов = "ОткрытьСписокCDNПлощадок,ПредставлениеАварийногоРежима";
				УстановитьВыборочнуюВидимостьЭлементов(Элемент, ИменаВидимыхЭлементов);	
			КонецЕсли;
		КонецЦикла;
		
		ЭлементыФормы.ГруппаСмТакже.Поведение = ПоведениеОбычнойГруппы.Обычное;

	КонецЕсли;
	
КонецПроцедуры

//Устанавливает выборочную видимость элементов тх списка
//Параметры: 
//			- Группа Тип("ГруппаФормы")
//			- ИменаВидимыхЭлементов Тип("Строка")
//
//Возвращаемое значение: нет
//
Процедура УстановитьВыборочнуюВидимостьЭлементов(Группа, ИменаВидимыхЭлементов)
	
	ИменаВидимыхЭлементовМассив = СтрРазделить(ИменаВидимыхЭлементов, ",");
	Для Каждого Элемент Из Группа.ПодчиненныеЭлементы Цикл
		Если ТипЗнч(Элемент) = Тип("ГруппаФормы") Тогда
			УстановитьВидимостьПочиненныхЭлементовФормы(Элемент, ИменаВидимыхЭлементовМассив);
		Иначе
			Если Не ИменаВидимыхЭлементовМассив.Найти(Элемент.Имя) = Неопределено Тогда
				Продолжить;
			Иначе
				Элемент.Видимость = Ложь;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

//формирует массив скрываемых элементов формы ПанельОбменаИСМП
//Параметры: нет
//
//Возвращаемое значение: МассивИменЭлементов Тип("Массив")
//
Функция СкрываемыеЭлементыПанелиОбмена()
	
	МассивИменСкрываемыхЭлементов = Новый Массив;
	
	МассивИменСкрываемыхЭлементов.Добавить("ГруппаПриемкаТоваровИСМП");
	МассивИменСкрываемыхЭлементов.Добавить("ГруппаСклад");
	МассивИменСкрываемыхЭлементов.Добавить("ГруппаПроизводство");
	МассивИменСкрываемыхЭлементов.Добавить("ГруппаОтгрузкаТоваровИСМП");
	МассивИменСкрываемыхЭлементов.Добавить("ГруппаВозвратВОборотИСМП");
	МассивИменСкрываемыхЭлементов.Добавить("ГруппаВыводИзОборотаИСМП");
	МассивИменСкрываемыхЭлементов.Добавить("ГруппаНастройки");
	МассивИменСкрываемыхЭлементов.Добавить("ГруппаПодключениеКегаКОборудованиюРозливаИСМП");
	
	Возврат МассивИменСкрываемыхЭлементов;
	
КонецФункции

//Установаливает видимоть элементов входящих в группу рекурсивно
//Параметры: Группа Тип("ГруппаФормы")
//
//Возвращаемое значение: нет
//
Процедура УстановитьВидимостьПочиненныхЭлементовФормы(Группа, МассивИсключений)
	
	Для Каждого Элемент Из Группа.ПодчиненныеЭлементы Цикл
		Если ТипЗнч(Элемент) = Тип("ГруппаФормы") Тогда
			УстановитьВидимостьПочиненныхЭлементовФормы(Элемент, МассивИсключений)
		Иначе
			Если Не МассивИсключений.Найти(Элемент.Имя) = Неопределено Тогда
				Продолжить;
			Иначе
				Элемент.Видимость = Ложь;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

//Возвращает использование маркировки
//Параметры: Нет
//
//Возвращаемое значение: ИспользуетсяМаркировка Тип ("Булево")
//
Функция МаркировкаВключена() Экспорт
	
	ИспользуетсяМаркировка = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	НастройкиУчетаМаркируемойПродукцииИСМП.ВидПродукции КАК ВидПродукции
	|ИЗ
	|	РегистрСведений.НастройкиУчетаМаркируемойПродукцииИСМП КАК НастройкиУчетаМаркируемойПродукцииИСМП
	|ГДЕ
	|	НастройкиУчетаМаркируемойПродукцииИСМП.ВестиУчетПродукции = ИСТИНА";
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда
		ИспользуетсяМаркировка = Истина;
	КонецЕсли;
	
	Возврат ИспользуетсяМаркировка;
	
КонецФункции 

//Включение маркировки в простом интерфейсе при включении ФО "Маркировка в простом интерфейсе"
//Параметры:
//			- Источник Тип("Константа менеджер значения")
//			- Отказ Тип("Булево")
//
//Возвращаемое значение: нет
//
Процедура ПриЗаписиКонстанты(Источник, Отказ) Экспорт
	
	Если Не Источник.Значение Тогда
		Возврат;
	КонецЕсли;
	ВидыПродукцииИС = ИнтеграцияИСКлиентСервер.ВидыПродукцииИСМП(Истина);
	НаборЗаписей = РегистрыСведений.НастройкиУчетаМаркируемойПродукцииИСМП.СоздатьНаборЗаписей();
	НаборЗаписей.Прочитать();
	ТаблицаНабораЗаписей = НаборЗаписей.Выгрузить();
	Для Каждого ВидПродукции Из ВидыПродукцииИС Цикл
		СтрокаТаблицыВидПродукции = ТаблицаНабораЗаписей.Найти(ВидПродукции, "ВидПродукции");
		Если СтрокаТаблицыВидПродукции = Неопределено Тогда
			НовСтрока = ТаблицаНабораЗаписей.Добавить();
			НовСтрока.ВидПродукции = ВидПродукции;
			НовСтрока.ВестиУчетПродукции = Истина;
		Иначе
			СтрокаТаблицыВидПродукции.ВестиУчетПродукции = Истина;
		КонецЕсли;
	КонецЦикла;
	НаборЗаписей.Загрузить(ТаблицаНабораЗаписей);
	
	УстановитьПривилегированныйРежим(Истина);
	
	Попытка
		НаборЗаписей.Записать();
	Исключение
		Отказ = Истина;
	КонецПопытки;
	
	Если Не Отказ Тогда
		Константы.ВестиУчетМаркируемойПродукцииИСМП.Установить(Истина);
		Константы.ИспользоватьФоновуюПроверкуДокументовГИСМТ.Установить(Истина);
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

//Изменяет положение подменю проверка и подбор на форме докеумента
//Параметры: Форма Тип("ФормаКлиентскогоПриложения")
//
//Возвращаемое значение: нет
//
Процедура ИзменитьПоложениеПодменюПроверкаИПодбор(Форма) Экспорт
	
	Если ОбщегоНазначенияБП.ЭтоПростойИнтерфейс() Тогда
		КоманднаяПанельПроверкаИПодборИС = Форма.Элементы.Найти("КоманднаяПанельПроверкаИПодборПродукцииГосИС");
		Если КоманднаяПанельПроверкаИПодборИС = Неопределено Тогда
			Возврат;		
		КонецЕсли;
		КоманднаяПанельПроверкаИПодборИС.Видимость = Ложь;
        ПодменюГосИС = КоманднаяПанельПроверкаИПодборИС.ПодчиненныеЭлементы[0];
		РодительскаяГруппа = Форма.Элементы.Найти("ТоварыДействия");
		Если РодительскаяГруппа = Неопределено Тогда
			Возврат;
		КонецЕсли;
		Подменю = Форма.Элементы.Найти("ПодменюТоварыПроверкаИПодбор");
		Если Не Подменю = Неопределено Тогда
			Форма.Элементы.Удалить(Подменю);	
		КонецЕсли;	
		Подменю = Форма.Элементы.Добавить("ПодменюТоварыПроверкаИПодбор", Тип("ГруппаФормы"), РодительскаяГруппа);
		Подменю.Вид = ВидГруппыФормы.Подменю;
		Подменю.Заголовок = ПодменюГосИС.Заголовок;
		Для Каждого КнопкаГосИС Из ПодменюГосИС.ПодчиненныеЭлементы Цикл
			Если КнопкаГосИС.Вид = ВидКнопкиФормы.КнопкаКоманднойПанели Тогда
				Кнопка = Форма.Элементы.Добавить(КнопкаГосИС.Имя + "_", Тип("КнопкаФормы"), Подменю);
				Кнопка.ИмяКоманды = КнопкаГосИС.ИмяКоманды;
			ИначеЕсли КнопкаГосИС.Вид = ВидГруппыФормы.Подменю Тогда
				ДопПодменю = Форма.Элементы.Добавить(КнопкаГосИС.Имя + "_", Тип("ГруппаФормы"), Подменю);
				Для Каждого ЭлементПодменю Из КнопкаГосИС.ПодчиненныеЭлементы Цикл
					Если ЭлементПодменю.Вид = ВидКнопкиФормы.КнопкаКоманднойПанели Тогда
						Кнопка = Форма.Элементы.Добавить(ЭлементПодменю.Имя + "_", Тип("КнопкаФормы"), ДопПодменю);
						Кнопка.ИмяКоманды = ЭлементПодменю.ИмяКоманды;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры




