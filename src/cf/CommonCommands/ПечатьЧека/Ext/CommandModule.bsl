
&НаКлиенте
Процедура ОбработкаКоманды(ПараметрКоманды, ПараметрыВыполненияКоманды)
	
	Форма    = ПараметрыВыполненияКоманды.Источник;
	Документ = ПараметрКоманды;
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "ЭтоВозвратПоСБП")
		И Форма.ЭтоВозвратПоСБП Тогда
		Если Форма.ДоступностьВозвратПоСБП Тогда
			ДополнительныеПараметры = Новый Структура;
			ДополнительныеПараметры.Вставить("ДокументСсылка", Документ);
			ДополнительныеПараметры.Вставить("Форма",          Форма);
			
			Форма.ТекстПредупрежденияСБП = "";
			
			ОписаниеОповещения = Новый ОписаниеОповещения("ПечатьЧекаПослеВозвратаСБПЗавершение",
				ЭтотОбъект, ДополнительныеПараметры);
			
			ИнтеграцияССБПБПКлиент.ВозвратОплатыСчет(
				Документ,
				Форма,
				ОписаниеОповещения);
		ИначеЕсли ЗначениеЗаполнено(Форма.ТекстПредупрежденияСБП) Тогда
			ШаблонСообщения = НСтр("ru = 'Невозможно пробить чек. %1'");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтрШаблон(ШаблонСообщения, Форма.ТекстПредупрежденияСБП));
		КонецЕсли;
		
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПечатьЧекаЗавершение", ЭтотОбъект, Новый Структура("Форма", Форма));
	
	ПечатьФискальныхДокументовКлиент.НапечататьЧек(ПараметрКоманды, ПараметрыВыполненияКоманды.Источник, ОписаниеОповещения);
КонецПроцедуры

&НаКлиенте
Процедура ПечатьЧекаПослеВозвратаСБПЗавершение(РезультатОперации, ДополнительныеПараметры) Экспорт
	
	Если ЗначениеЗаполнено(РезультатОперации.СообщениеОбОшибке) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(РезультатОперации.СообщениеОбОшибке);
	КонецЕсли;
	
	Форма  = ДополнительныеПараметры.Форма;
	Объект = Форма.Объект;
	
	ДанныеДокумента = Новый Структура;
	ДанныеДокумента.Вставить("Ссылка",          Объект.Ссылка);
	ДанныеДокумента.Вставить("Организация",     Объект.Организация);
	ДанныеДокумента.Вставить("БанковскийСчет",  Объект.БанковскийСчет);
	ДанныеДокумента.Вставить("ЭтоВозвратПоСБП", Форма.ЭтоВозвратПоСБП);
	
	Результат = ИнтеграцияССБПБПВызовСервера.ДанныеВозвратОплаты(ДанныеДокумента);
	СостояниеВозврата = ОплатаПлатежнойКартойКлиентСервер.СостояниеВозвратаСБП(Результат);
	ЗаполнитьЗначенияСвойств(Форма, СостояниеВозврата);
	
	ОплатаПлатежнойКартойКлиентСервер.УправлениеФормой(Форма);
	
	Если Не РезультатОперации.Результат Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПечатьЧекаЗавершение", ЭтотОбъект, Новый Структура("Форма", Форма));
	ПечатьФискальныхДокументовКлиент.НапечататьЧек(ДополнительныеПараметры.ДокументСсылка, Форма, ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьЧекаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если Результат.Успешно Тогда
		Форма =  ДополнительныеПараметры.Форма;
		Объект = Форма.Объект;
		
		Объект.НомерЧекаККМ = Результат.НомерЧекаККМ;
		
		// Параметры операции при оплате картой
		СсылочныйНомер = Неопределено;
		Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Объект, "СсылочныйНомер")
			И Результат.ПараметрыОплаты.Свойство("СсылочныйНомер", СсылочныйНомер) И СсылочныйНомер = Неопределено Тогда
			ЗаполнитьЗначенияСвойств(Объект, Результат.ПараметрыОплаты, , "СсылочныйНомер");
		Иначе
			ЗаполнитьЗначенияСвойств(Объект, Результат.ПараметрыОплаты);
		КонецЕсли;
		
		ГруппаПредупреждениеОПечатиЧека = Форма.Элементы.Найти("ПредупреждениеОПечатиЧека");
		Если ГруппаПредупреждениеОПечатиЧека <> Неопределено Тогда
			ГруппаПредупреждениеОПечатиЧека.Видимость = Ложь;
		КонецЕсли; 
		
		Форма.Записать();
		
		Оповестить("ВыполненаЗаписьДокумента", Новый Структура("ДокументСсылка", Объект.Ссылка));
		ОбщегоНазначенияКлиент.ОповеститьОбИзмененииОбъекта(Объект.Ссылка);
		
	ИначеЕсли ЗначениеЗаполнено(Результат.СообщениеОбОшибке) Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(Результат.СообщениеОбОшибке);
	КонецЕсли; 
КонецПроцедуры 
