
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПодготовитьФормуНаСервере(Параметры);
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ОтборКонтрагентИспользованиеПриИзменении(Элемент)
	
	УстановитьОтборы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборКонтрагентПриИзменении(Элемент)
	
	ОтборКонтрагентИспользование = ЗначениеЗаполнено(ОтборКонтрагент);
	
	УстановитьОтборы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборОрганизацияИспользованиеПриИзменении(Элемент)
	
	УстановитьОтборы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборОрганизацияПриИзменении(Элемент)
	
	ОтборОрганизацияИспользование = ЗначениеЗаполнено(ОтборОрганизация);
	
	УстановитьОтборы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборВидОперацииИспользованиеПриИзменении(Элемент)
	
	УстановитьОтборы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборВидОперацииПриИзменении(Элемент)
	
	ОтборВидОперацииИспользование = ЗначениеЗаполнено(ОтборВидОперации);
	
	УстановитьОтборы(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПодготовитьФормуНаСервере(ПараметрыФормы)
	
	ОбъектМетаданных = Метаданные.НайтиПоПолномуИмени(Параметрыформы.ИмяОбъекта);
	
	ВладелецКонтрагент = ВладелецСправочникаКонтрагент(ОбъектМетаданных);
	ДоступенОтборПоКонтрагенту = ВладелецКонтрагент
		Или ОбщегоНазначения.ЕстьРеквизитОбъекта("Контрагент", ОбъектМетаданных);
	ДоступенОтборПоОрганизации = ОбщегоНазначения.ЕстьРеквизитОбъекта("Организация", ОбъектМетаданных);
	ДоступенОтборПоВидуОперации = (ОбъектМетаданных = Метаданные.Документы.ПоступлениеТоваровУслуг);
	ДоступнаКолонкаВидОперации = (ОбъектМетаданных = Метаданные.Документы.ПоступлениеТоваровУслуг
		Или ОбъектМетаданных = Метаданные.Документы.ВозвратТоваровОтПокупателя);
	ОтображатьКолонкуВидСчетаФактуры = (ОбъектМетаданных = Метаданные.Документы.СчетФактураПолученный);
	
	УстановитьТекстЗапросаДинамическогоСписка(ОбъектМетаданных, ПараметрыФормы.ИмяОбъекта);
	
	ЗаполнитьИУстановитьОтборы(ПараметрыФормы);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьТекстЗапросаДинамическогоСписка(ОбъектМетаданных, ИмяОбъекта)
	
	ЭтоДокумент = ОбщегоНазначения.ЭтоДокумент(ОбъектМетаданных);
	ЭтоСправочник = ОбщегоНазначения.ЭтоСправочник(ОбъектМетаданных);
	
	Если Не (ЭтоДокумент Или ЭтоСправочник) Тогда
		ВызватьИсключение Нстр("ru = 'Форма предназначена только для подбора справочников и документов.'");
		Возврат;
	КонецЕсли;
	
	ВыбираемыеПоля = Новый Массив;
	ВыбираемыеПоля.Добавить("Ссылка");
	
	Если ЭтоДокумент Тогда
		Поля = Новый Массив;
		Поля.Добавить("Номер");
		Поля.Добавить("Дата");
		Поля.Добавить("НомерВходящегоДокумента");
		Поля.Добавить("ДатаВходящегоДокумента");
		Поля.Добавить("Организация");
		Поля.Добавить("Контрагент");
		Поля.Добавить("СуммаДокумента");
		Для Каждого Поле Из Поля Цикл
			Если Не ОбщегоНазначения.ЕстьРеквизитОбъекта(Поле, ОбъектМетаданных) Тогда
				Продолжить;
			КонецЕсли;
			ВыбираемыеПоля.Добавить(Поле);
		КонецЦикла;
	КонецЕсли;
	
	Если ДоступнаКолонкаВидОперации Тогда
		ВыбираемыеПоля.Добавить("ВидОперации");
	КонецЕсли;
	
	Если ОтображатьКолонкуВидСчетаФактуры Тогда
		ВыбираемыеПоля.Добавить("ВидСчетаФактуры");
	КонецЕсли;
	
	Список.ТекстЗапроса = ТекстЗапроса(ИмяОбъекта, ВыбираемыеПоля);
	Список.ОсновнаяТаблица = ИмяОбъекта;
	Список.ДинамическоеСчитываниеДанных = Истина;
	
КонецПроцедуры

&НаСервере
Функция ТекстЗапроса(ИсточникДанных, ВыбираемыеПоля)
	
	КонструкторЗапроса = Новый СхемаЗапроса;
	ПакетЗапроса = КонструкторЗапроса.ПакетЗапросов[0];
	ОператорЗапроса = ПакетЗапроса.Операторы[0];
	ОператорЗапроса.Источники.Добавить(ИсточникДанных, "Объект");
	Для Каждого Поле Из ВыбираемыеПоля Цикл
		ВыражениеЗапроса = ОператорЗапроса.ВыбираемыеПоля.Добавить("Объект." + Поле);
		ПолеЗапроса = ПакетЗапроса.Колонки.Найти(ВыражениеЗапроса);
		ПолеЗапроса.Псевдоним = Поле;
	КонецЦикла;
	
	Возврат КонструкторЗапроса.ПолучитьТекстЗапроса();
	
КонецФункции

&НаСервере
Процедура ЗаполнитьИУстановитьОтборы(ПараметрыФормы)
	
	ОтборКонтрагент = ПараметрыФормы.Контрагент;
	ОтборКонтрагентИспользование = ЗначениеЗаполнено(ОтборКонтрагент);
	
	ОтборОрганизация = ПараметрыФормы.Организация;
	ОтборОрганизацияИспользование = ЗначениеЗаполнено(ОтборОрганизация);
	
	ОтборВидОперации = ВидОперацииПоСпособуОбработки(ЭтотОбъект, ПараметрыФормы);
	ОтборВидОперацииИспользование = ЗначениеЗаполнено(ОтборВидОперации);
	
	УстановитьОтборы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборы(Форма)
	
	Если Форма.ДоступенОтборПоКонтрагенту Тогда
		Если Форма.ВладелецКонтрагент Тогда
			ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(Форма.Список, "Владелец", Форма.ОтборКонтрагент,
				Форма.ОтборКонтрагентИспользование);
		Иначе
			ОтборыСписковКлиентСервер.УстановитьБыстрыйОтбор(Форма, "Контрагент");
		КонецЕсли;
	КонецЕсли;
	Если Форма.ДоступенОтборПоОрганизации Тогда
		ОтборыСписковКлиентСервер.УстановитьБыстрыйОтбор(Форма, "Организация");
	КонецЕсли;
	Если Форма.ДоступенОтборПоВидуОперации Тогда
		ОтборыСписковКлиентСервер.УстановитьБыстрыйОтбор(Форма, "ВидОперации");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	
	Элементы.ГруппаОтборКонтрагент.Видимость  = Форма.ДоступенОтборПоКонтрагенту;
	Элементы.ГруппаОтборОрганизация.Видимость = форма.ДоступенОтборПоОрганизации;
	Элементы.ГруппаОтборВидОперации.Видимость = Форма.ДоступенОтборПоВидуОперации;
	Элементы.ВидСчетаФактуры.Видимость        = Форма.ОтображатьКолонкуВидСчетаФактуры;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВидОперацииПоСпособуОбработки(Форма, ПараметрыФормы)
	
	Если Не Форма.ДоступенОтборПоВидуОперации Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат ОбменСКонтрагентамиБП.ВидОперацииДокументаПоступленияПоСпособуОбработки(ПараметрыФормы.СпособОбработки);
	
КонецФункции

&НаСервереБезКонтекста
Функция ВладелецСправочникаКонтрагент(ОбъектМетаданных)
	
	Если Не ОбщегоНазначения.ЭтоСправочник(ОбъектМетаданных) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат ОбъектМетаданных.Владельцы.Содержит(Метаданные.Справочники.Контрагенты);
	
КонецФункции

#КонецОбласти