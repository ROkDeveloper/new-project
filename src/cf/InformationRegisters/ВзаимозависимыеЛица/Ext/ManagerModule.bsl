#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

//Получает параметры формы для открытия записи регистра
//
Функция ПолучитьПараметрыОткрытияФормыЗаписиВзаимозависимогоЛица(Организация, Контрагент, Период) Экспорт
	
	Если НЕ ЗначениеЗаполнено(Контрагент)
		ИЛИ НЕ ЗначениеЗаполнено(Период)
		ИЛИ НЕ ЗначениеЗаполнено(Организация) Тогда
		Возврат(Неопределено);
	КонецЕсли;
	
	СведенияОКонтрагенте = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Контрагент, "ОбособленноеПодразделение, ГоловнойКонтрагент");
	ВзаимозависимыйКонтрагент = ?(СведенияОКонтрагенте.ОбособленноеПодразделение, СведенияОКонтрагенте.ГоловнойКонтрагент, Контрагент);
	
	ПараметрыВзаимозависимогоЛица = РегистрыСведений.ВзаимозависимыеЛица.СоздатьНаборЗаписей();
	ПараметрыВзаимозависимогоЛица.Отбор.Контрагент.Значение 		= ВзаимозависимыйКонтрагент;
	ПараметрыВзаимозависимогоЛица.Отбор.Контрагент.Использование 	= Истина;
	ПараметрыВзаимозависимогоЛица.Отбор.Период.Значение 			= Период;
	ПараметрыВзаимозависимогоЛица.Отбор.Период.Использование 		= Истина;
	ПараметрыВзаимозависимогоЛица.Отбор.Организация.Значение 		= Организация;
	ПараметрыВзаимозависимогоЛица.Отбор.Организация.Использование 	= Истина;
	ПараметрыВзаимозависимогоЛица.Прочитать();
	
	Если ПараметрыВзаимозависимогоЛица.Количество()>0 Тогда
		ПараметрыФормы = Новый Структура("Ключ", РегистрыСведений.ВзаимозависимыеЛица.СоздатьКлючЗаписи(
			Новый Структура("Организация, Контрагент, Период", Организация, ВзаимозависимыйКонтрагент, Период)));
	Иначе
		ПараметрыФормы = Новый Структура("ЗначенияЗаполнения",
			Новый Структура("Организация, Контрагент, Период", Организация, ВзаимозависимыйКонтрагент, Период));
	КонецЕсли;
	
	ПараметрыФормы.Вставить("ДоступностьКлючевыхЗаписей",Ложь);
	
	Возврат(ПараметрыФормы);

КонецФункции

Функция ЯвляютсяВзаимозависимыми(Знач ДатаЗапроса, Знач Контрагент, Знач Организация) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ДатаЗапроса) Тогда
		
		ДатаЗапроса = ОбщегоНазначения.ТекущаяДатаПользователя();
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВзаимозависимыеЛицаСрезПоследних.ТипВзаимозависимости КАК Взаимозависимы
	|ИЗ
	|	РегистрСведений.ВзаимозависимыеЛица.СрезПоследних(
	|			&ДатаЗапроса,
	|			Контрагент = &Контрагент
	|				И Организация = &Организация
	|				И ТипВзаимозависимости = &ТипВзаимозависимости) КАК ВзаимозависимыеЛицаСрезПоследних";
	
	Запрос.Параметры.Вставить("ДатаЗапроса", ДатаЗапроса);
	Запрос.Параметры.Вставить("Контрагент", Контрагент);
	Запрос.Параметры.Вставить("ТипВзаимозависимости", Перечисления.ТипыВзаимозависимости.ВзаимозависимыПоКодексу);
	
	Если ЗначениеЗаполнено(Организация) Тогда
		
		Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Организация, "ОбособленноеПодразделение, ГоловнаяОрганизация");
		
		Если Реквизиты.ОбособленноеПодразделение Тогда
			Запрос.УстановитьПараметр("Организация", Реквизиты.ГоловнаяОрганизация);
		Иначе
			Запрос.УстановитьПараметр("Организация", Организация);
		КонецЕсли;
		
	Иначе
		Запрос.УстановитьПараметр("Организация", Организация);
	КонецЕсли;
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;

КонецФункции

#КонецОбласти

#КонецЕсли