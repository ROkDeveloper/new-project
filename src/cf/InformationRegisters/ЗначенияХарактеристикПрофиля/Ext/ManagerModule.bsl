// @strict-types


#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Создать наборы записей.
// 
// Параметры:
//  ПараметрыСобытия см. РегистрыСведений.СтатистикаСобытийВзаимодействияРекламы.НовыйПараметрыСобытияВзаимодействия
//
Процедура СоздатьНаборыЗаписей(ПараметрыСобытия) Экспорт
	
	ПрофильПотребителя = ПараметрыСобытия.ПрофильПотребителя;
	ДатаСобытия = ПараметрыСобытия.Дата;
	
	НачатьТранзакцию();
	
	Попытка
		
		УстановитьПривилегированныйРежим(Истина);
		
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ЗначенияХарактеристикПрофиля");
		ЭлементБлокировки.УстановитьЗначение("Период", ДатаСобытия);
		ЭлементБлокировки.УстановитьЗначение("ПрофильПотребителяРекламы", ПрофильПотребителя);
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		Блокировка.Заблокировать();
		
		ВыборкаДетальныеЗаписи = ВыборкаЗначенияХарактеристикПоПрофилям(ПараметрыСобытия.ИдентификаторыРекламы);
		
		НаборЗаписей = СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Период.Установить(ДатаСобытия);
		НаборЗаписей.Отбор.ПрофильПотребителяРекламы.Установить(ПрофильПотребителя);
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			ИдентификаторРекламы = ВыборкаДетальныеЗаписи.ИдентификаторРекламы;
			ВидХарактеристикиРекламы = ВыборкаДетальныеЗаписи.ВидХарактеристики;
			ЗначениеХарактеристики = ВыборкаДетальныеЗаписи.ТекущееЗначениеХарактеристики;
			
			НаборЗаписей.Отбор.ИдентификаторРекламы.Установить(ИдентификаторРекламы);
			НаборЗаписей.Отбор.ВидХарактеристикиРекламы.Установить(ВидХарактеристикиРекламы);
			НаборЗаписей.Отбор.ЗначениеХарактеристики.Установить(ЗначениеХарактеристики);
			НаборЗаписей.Прочитать();
			
			Если НаборЗаписей.Количество() = 0 Тогда
				
				НоваяСтрокаНабора = НаборЗаписей.Добавить();
				НоваяСтрокаНабора.Период = ДатаСобытия;
				НоваяСтрокаНабора.ПрофильПотребителяРекламы = ПрофильПотребителя;
				НоваяСтрокаНабора.ИдентификаторРекламы = ВыборкаДетальныеЗаписи.ИдентификаторРекламы;
				НоваяСтрокаНабора.ВидХарактеристикиРекламы = ВыборкаДетальныеЗаписи.ВидХарактеристики;
				НоваяСтрокаНабора.ЗначениеХарактеристики = ВыборкаДетальныеЗаписи.ТекущееЗначениеХарактеристики;
				НоваяСтрокаНабора.ДатаСопоставления = ВыборкаДетальныеЗаписи.ДатаОбновления;
				
			Иначе
				
				СтрокаНабора = НаборЗаписей[0];
				СтрокаНабора.ДатаСопоставления = ВыборкаДетальныеЗаписи.ДатаОбновления;
				
			КонецЕсли;
			
			НаборЗаписей.Записать();
			
		КонецЦикла;
		
		УстановитьПривилегированныйРежим(Ложь);
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		
		ИмяСобытия = РекламныйСервисСлужебный.ИмяСобытияХарактеристикаПрофиля(
			РекламныйСервисСлужебный.ИмяДействияОбновление());
		
		ЗаписьЖурналаРегистрации(
			ИмяСобытия, 
			УровеньЖурналаРегистрации.Ошибка, 
			Метаданные.РегистрыСведений.ЗначенияХарактеристикПрофиля, ,
			ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
		ВызватьИсключение;
		
	КонецПопытки;
	
КонецПроцедуры

// Очистить значения характеристик профиля за предыдущие дни.
//
Процедура ОчиститьЗначенияХарактеристик() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗначенияХарактеристикПрофиля.Период
		|ИЗ
		|	РегистрСведений.ЗначенияХарактеристикПрофиля КАК ЗначенияХарактеристикПрофиля
		|ГДЕ
		|	ЗначенияХарактеристикПрофиля.Период < &ТекущийДень";
	
	Запрос.УстановитьПараметр("ТекущийДень", НачалоДня(ТекущаяДатаСеанса()));
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ОчиститьЗначенияХарактеристикЗаДень(ВыборкаДетальныеЗаписи.Период);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Выборка значения характеристик по профилям.
// 
// Параметры:
//  ИдентификаторыРекламы - см. РегистрыСведений.СтатистикаСобытийВзаимодействияРекламы.НовыйТаблицаИдентификаторовРекламы
// 
// Возвращаемое значение:
//  ВыборкаИзРезультатаЗапроса:
//  * ДатаОбновления - Дата
//  * ВидХарактеристики - ОпределяемыйТип.ВидХарактеристикиРекламы
//  * ТекущееЗначениеХарактеристики - ОпределяемыйТип.ЗначениеХарактеристикиРекламы
//  * ИдентификаторРекламы - ОпределяемыйТип.ИдентификаторРекламы
//
Функция ВыборкаЗначенияХарактеристикПоПрофилям(ИдентификаторыРекламы)
	
	ВладелецыХарактеристик = РекламныйСервисСлужебный.ВладельцыХарактеристикТекущегоПрофиля();
	ВладелецыХарактеристик.Добавить(РекламныйСервисСлужебный.ПустойВладелецХарактеристики());
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ЗначенияХарактеристикПотребителяРекламы.ДатаОбновления КАК ДатаОбновления,
		|	ЗначенияХарактеристикПотребителяРекламы.ВладелецХарактеристики КАК ВладелецХарактеристики,
		|	ЗначенияХарактеристикПотребителяРекламы.Характеристика КАК Характеристика,
		|	ЗначенияХарактеристикПотребителяРекламы.ТекущееЗначениеХарактеристики КАК ТекущееЗначениеХарактеристики,
		|	ЗначенияХарактеристикПотребителяРекламы.Значение КАК ЗначениеХарактеристикиРекламы
		|ПОМЕСТИТЬ ТекущиеЗначенияХарактеристик
		|ИЗ
		|	РегистрСведений.ЗначенияХарактеристикПотребителяРекламы КАК ЗначенияХарактеристикПотребителяРекламы
		|ГДЕ
		|	ЗначенияХарактеристикПотребителяРекламы.ВладелецХарактеристики В (&ВладелецХарактеристики)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СправочникРеклама.Код КАК ИдентификаторРекламы,
		|	ТекущиеЗначенияХарактеристик.Характеристика КАК ВидХарактеристики,
		|	ТекущиеЗначенияХарактеристик.ТекущееЗначениеХарактеристики КАК ТекущееЗначениеХарактеристики,
		|	ТекущиеЗначенияХарактеристик.ДатаОбновления КАК ДатаОбновления
		|ИЗ
		|	РегистрСведений.ЗначенияХарактеристикРекламы КАК ЗначенияХарактеристикРекламы
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТекущиеЗначенияХарактеристик КАК ТекущиеЗначенияХарактеристик
		|		ПО (ТекущиеЗначенияХарактеристик.Характеристика = ЗначенияХарактеристикРекламы.Характеристика)
		|		И (ТекущиеЗначенияХарактеристик.ЗначениеХарактеристикиРекламы = ЗначенияХарактеристикРекламы.Значение)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Реклама КАК СправочникРеклама
		|		ПО ЗначенияХарактеристикРекламы.Реклама = СправочникРеклама.Ссылка
		|		И (СправочникРеклама.Код В (&ИдентификаторыРекламы))
		|СГРУППИРОВАТЬ ПО
		|	ТекущиеЗначенияХарактеристик.ДатаОбновления,
		|	ТекущиеЗначенияХарактеристик.Характеристика,
		|	ТекущиеЗначенияХарактеристик.ТекущееЗначениеХарактеристики,
		|	СправочникРеклама.Код";
	
	Запрос.УстановитьПараметр("ВладелецХарактеристики", ВладелецыХарактеристик);
	Запрос.УстановитьПараметр("ИдентификаторыРекламы", ИдентификаторыРекламы);
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Возврат ВыборкаДетальныеЗаписи;
	
КонецФункции

// Очистить статистику за день.
// 
// Параметры:
//  Дата - Дата
//
Процедура ОчиститьЗначенияХарактеристикЗаДень(Дата)
	
	НачатьТранзакцию();
	
	Попытка
		
		УстановитьПривилегированныйРежим(Истина);
		
		Блокировка = Новый БлокировкаДанных;
		ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ЗначенияХарактеристикПрофиля");
		ЭлементБлокировки.УстановитьЗначение("Период", Дата);
		ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
		Блокировка.Заблокировать();
		
		НаборЗаписей = СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.Период.Установить(Дата);
		
		НаборЗаписей.Записать();
		
		УстановитьПривилегированныйРежим(Ложь);
		
		ЗафиксироватьТранзакцию();
		
	Исключение
		
		ОтменитьТранзакцию();
		
		ЗаписьЖурналаРегистрации(
			РекламныйСервисСлужебный.ИмяСобытияОтправкиСтатистикиВзаимодействия(), 
			УровеньЖурналаРегистрации.Ошибка, , , 
			ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
		
		ВызватьИсключение;
		
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли