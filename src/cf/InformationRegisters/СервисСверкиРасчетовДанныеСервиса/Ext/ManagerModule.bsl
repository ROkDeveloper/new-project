#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Процедура ЗаписатьДанные(ДокументыПоДанным, Организация, Контрагент, ИдентификаторСверки, ДокументСсылка = "") Экспорт 
	
	Если ДокументыПоДанным.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	НаборЗаписейДанныеДокументовПоСверке = РегистрыСведений.СервисСверкиРасчетовДанныеСервиса.СоздатьНаборЗаписей();
	НаборЗаписейДанныеДокументовПоСверке.Отбор.Организация.Установить(Организация);
	НаборЗаписейДанныеДокументовПоСверке.Отбор.Контрагент.Установить(Контрагент);
	НаборЗаписейДанныеДокументовПоСверке.Отбор.ИдентификаторСверки.Установить(ИдентификаторСверки);
	
	Для Каждого ТекущаяСтрокаДокументыПоДанным Из ДокументыПоДанным Цикл
		
		Если ДокументСсылка = Неопределено И ЗначениеЗаполнено(ТекущаяСтрокаДокументыПоДанным.ИдентификаторДокумента) Тогда
			
			ДокументСсылка = Документы[ТекущаяСтрокаДокументыПоДанным.ВидДокумента].ПолучитьСсылку(ТекущаяСтрокаДокументыПоДанным.ИдентификаторДокумента);
			Если НЕ ОбщегоНазначения.СсылкаСуществует(ДокументСсылка) Тогда
				Продолжить;
			КонецЕсли;
			
		КонецЕсли;
		
		Запись = НаборЗаписейДанныеДокументовПоСверке.Добавить();
		ЗаполнитьЗначенияСвойств(Запись, ТекущаяСтрокаДокументыПоДанным);
		Запись.ИдентификаторСверки = ИдентификаторСверки;
		Запись.Организация = Организация;
		Запись.Контрагент = Контрагент;
		
	КонецЦикла;
	
	НаборЗаписейДанныеДокументовПоСверке.Записать();
	
КонецПроцедуры

Процедура УдалитьДанныеДокументовПоПараметрам(МенеджерЗаписи)Экспорт
	
	УдалитьЗаписьПоИдентификатору(МенеджерЗаписи.ИдентификаторСверкиПоОрганизации, 
		МенеджерЗаписи.Организация, МенеджерЗаписи.Контрагент);
	УдалитьЗаписьПоИдентификатору(МенеджерЗаписи.ИдентификаторСверкиКонтрагенту, 
		МенеджерЗаписи.Организация, МенеджерЗаписи.Контрагент);
	
КонецПроцедуры	

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура УдалитьЗаписьПоИдентификатору(ИдентификаторСверки, Организация, Контрагент)
	
	Если Не ЗначениеЗаполнено(ИдентификаторСверки) Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	НаборЗаписейДанныеДокументовПоСверке = РегистрыСведений.СервисСверкиРасчетовДанныеСервиса.СоздатьНаборЗаписей();
	НаборЗаписейДанныеДокументовПоСверке.Отбор.ИдентификаторСверки.Установить(ИдентификаторСверки);
	НаборЗаписейДанныеДокументовПоСверке.Отбор.Организация.Установить(Организация);
	НаборЗаписейДанныеДокументовПоСверке.Отбор.Контрагент.Установить(Контрагент);
	НаборЗаписейДанныеДокументовПоСверке.Прочитать();
	НаборЗаписейДанныеДокументовПоСверке.Очистить();
	НаборЗаписейДанныеДокументовПоСверке.Записать();
	
КонецПроцедуры	

#КонецОбласти

#КонецЕсли