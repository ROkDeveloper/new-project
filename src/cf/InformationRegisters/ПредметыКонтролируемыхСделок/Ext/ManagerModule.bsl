#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

//Получает параметры формы для отрытия записи регистра
//
Функция ПолучитьПараметрыОткрытияФормыЗаписиПредметаСделки(ПредметСделки) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ПредметСделки) Тогда
		Возврат(Неопределено);
	КонецЕсли;
	
	ПараметрыПредметСделки = РегистрыСведений.ПредметыКонтролируемыхСделок.СоздатьНаборЗаписей();
	ПараметрыПредметСделки.Отбор.ПредметСделки.Значение = ПредметСделки;
	ПараметрыПредметСделки.Отбор.ПредметСделки.Использование = Истина;
	ПараметрыПредметСделки.Прочитать();
	Если ПараметрыПредметСделки.Количество() > 0 Тогда
		ПараметрыФормы = Новый Структура("Ключ",
			РегистрыСведений.ПредметыКонтролируемыхСделок.СоздатьКлючЗаписи(Новый Структура("ПредметСделки", ПредметСделки)));
	Иначе
		ПараметрыФормы = Новый Структура("ЗначенияЗаполнения", Новый Структура("ПредметСделки", ПредметСделки));
		
	КонецЕсли;
	
	ПараметрыФормы.Вставить("ДоступностьКлючевыхЗаписей",Ложь);
	
	Возврат(ПараметрыФормы);
	
КонецФункции

Функция КодыТНВЭДМировойБиржевойТорговли() Экспорт
	
	КодыТНВЭД = Новый ТаблицаЗначений;
	КодыТНВЭД.Колонки.Добавить("СсылкаТНВЭД", Новый ОписаниеТипов("СправочникСсылка.КлассификаторТНВЭД"));
	КодыТНВЭД.Колонки.Добавить("ДатаНачалаДействия", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.ДатаВремя));
	КодыТНВЭД.Колонки.Добавить("ДатаОкончанияДействия", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.ДатаВремя));
	
	ПравилаТНВЭД = ПравилаТНВЭДТоваровМироовойБиржевойТорговли();
	
	ПодходящиеТНВЭД = ПодходящиеТНВЭДПоПравилам(ПравилаТНВЭД);
	
	Для Каждого ПравилоТНВЭД Из ПравилаТНВЭД Цикл
		ДобавитьПодходящийКодТНВЭД(ПравилоТНВЭД, ПодходящиеТНВЭД, КодыТНВЭД);
	КонецЦикла;
	
	Если ОбщегоНазначения.РежимОтладки() Тогда
		ПроверитьПересекающиесяПериодыКодовТНВЭД(КодыТНВЭД);
	КонецЕсли;
	
	Возврат КодыТНВЭД;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПравилаТНВЭДТоваровМироовойБиржевойТорговли()
	
	ТекстКлассификатора = РегистрыСведений.ПредметыКонтролируемыхСделок.ПолучитьМакет("ТоварыМировойБиржевойТорговлиXML");
	ЧтениеXML = Новый ЧтениеXML;
	ЧтениеXML.УстановитьСтроку(ТекстКлассификатора.ПолучитьТекст());
	
	Если Не ЧтениеXML.Прочитать() Тогда
		ВызватьИсключение НСтр("ru = 'Пустой XML списка ТНВЭД товаров мировой биржевой торговли'");
	ИначеЕсли ЧтениеXML.Имя <> "ПредметыМировойБиржевойТорговли" Тогда
		ВызватьИсключение НСтр("ru = 'Ошибка в структуре XML списка ТНВЭД товаров мировой биржевой торговли'");
	КонецЕсли;
	
	ТипКодаТНВЭД = Метаданные.Справочники.КлассификаторТНВЭД.СтандартныеРеквизиты["Код"].Тип;
	
	ПравилаТНВЭД = Новый ТаблицаЗначений;
	ПравилаТНВЭД.Колонки.Добавить("КодТНВЭД", ТипКодаТНВЭД);
	ПравилаТНВЭД.Колонки.Добавить("Исключения", Новый ОписаниеТипов("Соответствие"));
	ПравилаТНВЭД.Колонки.Добавить("ДатаНачалаДействия", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	ПравилаТНВЭД.Колонки.Добавить("ДатаОкончанияДействия", ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	
	ТекущаяСтрокаПравила = Неопределено;
	ТекущаяДатаНачалаДействия = '00010101';
	ТекущаяДатаОкончанияДействия = ДатаНеуказанногоСрокаДействия();
	
	Пока ЧтениеXML.Прочитать() Цикл
		
		ИмяУзла = ЧтениеXML.Имя;
		
		Если ЧтениеXML.ТипУзла = ТипУзлаXML.КонецЭлемента Тогда
			Если ИмяУзла = "ПредметыМировойБиржевойТорговли" Тогда
				Прервать;
			КонецЕсли;
		КонецЕсли;
		
		Если ЧтениеXML.ТипУзла = ТипУзлаXML.НачалоЭлемента Тогда
			Если ИмяУзла = "ПериодДействия" Тогда
				
				ТекущаяДатаНачалаДействия = СтроковыеФункцииКлиентСервер.СтрокаВДату(ЧтениеXML.ПолучитьАтрибут("НачалоПериода"));
				Если Не ЗначениеЗаполнено(ТекущаяДатаНачалаДействия) Тогда
					ТекущаяДатаНачалаДействия = '00010101';
				КонецЕсли;
				
				ТекущаяДатаОкончанияДействия = СтроковыеФункцииКлиентСервер.СтрокаВДату(ЧтениеXML.ПолучитьАтрибут("ОкончаниеПериода"));
				Если Не ЗначениеЗаполнено(ТекущаяДатаОкончанияДействия) Тогда
					ТекущаяДатаОкончанияДействия = ДатаНеуказанногоСрокаДействия();
				КонецЕсли;
				
			ИначеЕсли ИмяУзла = "КодТНВЭД" Тогда
				
				Код = ЧтениеXML.ПолучитьАтрибут("Код");
				Если Не ЗначениеЗаполнено(Код) Тогда
					Продолжить;
				КонецЕсли;
				
				ТекущаяСтрокаПравила = ПравилаТНВЭД.Добавить();
				ТекущаяСтрокаПравила.КодТНВЭД = Код;
				ТекущаяСтрокаПравила.ДатаНачалаДействия = ТекущаяДатаНачалаДействия;
				ТекущаяСтрокаПравила.ДатаОкончанияДействия = ТекущаяДатаОкончанияДействия;
				
			ИначеЕсли ИмяУзла = "Исключение" Тогда
				
				Код = ЧтениеXML.ПолучитьАтрибут("Код");
				Если Не ЗначениеЗаполнено(Код) Тогда
					Продолжить;
				КонецЕсли;
				
				ТекущаяСтрокаПравила.Исключения.Вставить(Код, Истина);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ЧтениеXML.Закрыть();
	
	Возврат ПравилаТНВЭД;
	
КонецФункции

Функция ПодходящиеТНВЭДПоПравилам(ПравилаТНВЭД)
	
	// Все коды в правилах содержат как минимум 4 символа.
	// Поэтому соберем все уникальные значения первых 4 символов из правил ТНВЭД,
	// И по ним выберем те коды ТВНЭД из справочника,
	// у которых первые 4 символа кода совпадают с выбранными.
	// После этого уже будем для каждого кода применять правило, и отбирать те,
	// которые подходят под правило.
	// Отбор по 4 символам нужен для того, чтобы ускорить алгоритм, и не перебирать все элементы ТНВЭД.
	
	СоответствиеКороткихКодов = Новый Соответствие;
	Для Каждого ПравилоТНВЭД Из ПравилаТНВЭД Цикл
		СоответствиеКороткихКодов.Вставить(Лев(ПравилоТНВЭД.КодТНВЭД, 4), Истина);
	КонецЦикла;
	
	МассивКороткихКодов = Новый Массив;
	Для Каждого КлючЗначение Из СоответствиеКороткихКодов Цикл
		МассивКороткихКодов.Добавить(КлючЗначение.Ключ);
	КонецЦикла;
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("МассивКороткихКодов", МассивКороткихКодов);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КлассификаторТНВЭД.Ссылка КАК СсылкаТНВЭД,
	|	КлассификаторТНВЭД.Код КАК КодТНВЭД
	|ИЗ
	|	Справочник.КлассификаторТНВЭД КАК КлассификаторТНВЭД
	|ГДЕ
	|	ПОДСТРОКА(КлассификаторТНВЭД.Код, 0, 4) В (&МассивКороткихКодов)";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

Процедура ДобавитьПодходящийКодТНВЭД(ПравилоТНВЭД, ПодходящиеТНВЭД, КодыТНВЭД)
	
	ДлинаКодаПравила = СтрДлина(ПравилоТНВЭД.КодТНВЭД);
	Для Каждого СтрокаТНВЭД Из ПодходящиеТНВЭД Цикл
		
		Если Лев(СтрокаТНВЭД.КодТНВЭД, ДлинаКодаПравила) <> ПравилоТНВЭД.КодТНВЭД Тогда
			Продолжить;
		КонецЕсли;
		
		Если ПравилоТНВЭД.Исключения.Получить(СтрокаТНВЭД.КодТНВЭД) <> Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ОписаниеКода = КодыТНВЭД.Добавить();
		ОписаниеКода.СсылкаТНВЭД = СтрокаТНВЭД.СсылкаТНВЭД;
		ОписаниеКода.ДатаНачалаДействия = НачалоДня(ПравилоТНВЭД.ДатаНачалаДействия);
		ОписаниеКода.ДатаОкончанияДействия = КонецДня(ПравилоТНВЭД.ДатаОкончанияДействия);
		
	КонецЦикла;
	
КонецПроцедуры

Функция ДатаНеуказанногоСрокаДействия()
	
	Возврат '39991231235959';
	
КонецФункции

Функция ПроверитьПересекающиесяПериодыКодовТНВЭД(КодыТНВЭД)
	
	УникальныеКодыТНВЭД = КодыТНВЭД.Скопировать(, "СсылкаТНВЭД");
	УникальныеКодыТНВЭД.Свернуть("СсылкаТНВЭД", "");
	
	Для Каждого УникальныйКодТНВЭД Из УникальныеКодыТНВЭД Цикл
		
		СтрокиДействияКодов = КодыТНВЭД.НайтиСтроки(Новый Структура("СсылкаТНВЭД", УникальныйКодТНВЭД.СсылкаТНВЭД));
		Если СтрокиДействияКодов.Количество() <= 1 Тогда
			Продолжить;
		КонецЕсли;
		
		Для НомерСтроки = 0 По СтрокиДействияКодов.Количество() - 2 Цикл
			
			Для НомерСтрокиСравнения = НомерСтроки + 1 По СтрокиДействияКодов.Количество() - 1 Цикл
				
				Если СтрокиДействияКодов[НомерСтроки].ДатаНачалаДействия > СтрокиДействияКодов[НомерСтрокиСравнения].ДатаОкончанияДействия
					Или СтрокиДействияКодов[НомерСтроки].ДатаОкончанияДействия < СтрокиДействияКодов[НомерСтрокиСравнения].ДатаНачалаДействия Тогда
					Продолжить;
				КонецЕсли;
				
				ТекстИсключения = СтрШаблон(НСтр("ru = 'Для кода ТНВЭД %1 есть пересекающиеся периоды действия'"), УникальныйКодТНВЭД.СсылкаТНВЭД);
				ВызватьИсключение ТекстИсключения;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецФункции

#КонецОбласти

#КонецЕсли