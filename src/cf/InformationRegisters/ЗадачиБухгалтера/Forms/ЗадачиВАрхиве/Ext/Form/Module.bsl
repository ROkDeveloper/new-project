#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	ОбщегоНазначенияБПВызовСервера.УстановитьОтборПоОсновнойОрганизации(ЭтотОбъект);
	
	Если Не ПравоДоступа("Изменение", Метаданные.РегистрыСведений.ЗадачиБухгалтера) Тогда
		Элементы.ФормаВосстановитьИзАрхива.Доступность = Ложь;
		Элементы.СписокКонтекстноеМенюВосстановитьЗадачуИзАрхива.Доступность = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	Если ИмяСобытия = "ИзменениеОсновнойОрганизации" Тогда
		ОбщегоНазначенияБПКлиент.ИзменитьОтборПоОсновнойОрганизации(Список, , Параметр);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаСервере
Процедура СписокПередЗагрузкойПользовательскихНастроекНаСервере(Элемент, Настройки)
	
	ОбщегоНазначенияБП.ВосстановитьОтборСписка(Список, Настройки, "Организация");
	
КонецПроцедуры

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыКоманды = ВыполнениеЗадачБухгалтераКлиентСервер.НовыеПараметрыКомандЗадачи();
	ЗаполнитьЗначенияСвойств(ПараметрыКоманды, Элемент.ТекущиеДанные);
	
	Если ЕстьПравоВыполненияЗадачи(ПараметрыКоманды.Правило) Тогда
		ОписаниеДействия = ЗадачиБухгалтераКлиентСервер.ОписаниеДействия(ПараметрыКоманды);
		ВыполнениеЗадачБухгалтераКлиент.ВыполнитьДействие(ОписаниеДействия);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаУбратьИзВыполненных(Команда)
	
	КлючЗаписи = Элементы.Список.ТекущаяСтрока;
	
	Если КлючЗаписи = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	УбратьИзВыполненных(КлючЗаписи, Элементы.Список.ТекущиеДанные);
	
	ОповеститьОбИзменении(КлючЗаписи);
	
	// Оповестим форму списка задач бухгалтера. Возможно, необходимо сменить текущую страницу формы.
	// Например, если до добавления нового налога, все задачи на сегодня выполнены.
	Оповестить("СписокЗадачБухгалтера_Изменение");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ЕстьПравоВыполненияЗадачи(Знач Правило)
	
	Возврат КалендарьБухгалтера.ПравоВыполненияЗадачи(Правило);
	
КонецФункции

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	УсловноеОформление.Элементы.Очистить();
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.ЗеленыйЛес);
	
	ЭлементОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.Использование  = Истина;
	ЭлементОтбора.ЛевоеЗначение  = Новый ПолеКомпоновкиДанных("Статус");
	ЭлементОтбора.ПравоеЗначение = "";
	ЭлементОтбора.ВидСравнения   = ВидСравненияКомпоновкиДанных.НеРавно;
	
	ЭлементПоля = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ЭлементПоля.Использование = Истина;
	ЭлементПоля.Поле = Новый ПолеКомпоновкиДанных("Статус");
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура УбратьИзВыполненных(КлючЗаписи, Знач Задача)
	
	РегистрыСведений.ЗадачиБухгалтера.УстановитьСтатусВыполнено(КлючЗаписи, Ложь);
	
	Если Задача.ИдентификаторЗадачи = "ЕдиныйНалоговыйСчет" Тогда
	
		ПараметрыЗадачи = Обработки.ПомощникУплатыНалога.НовыеПараметрыЗадачи();
		ЗаполнитьЗначенияСвойств(ПараметрыЗадачи, Задача);
		ТаблицаПодчиненныхЗадач = Обработки.ПомощникУплатыНалога.ПодчиненныеЗадачиПоЕдиномуНалоговомуСчету(ПараметрыЗадачи);
		
		Для Каждого ПодчиненнаяЗадача Из ТаблицаПодчиненныхЗадач Цикл
			КлючПодчиненнойЗадачи = РегистрыСведений.ЗадачиБухгалтера.КлючиЗадачСтруктурой();
			ЗаполнитьЗначенияСвойств(КлючПодчиненнойЗадачи, ПодчиненнаяЗадача);
			РегистрыСведений.ЗадачиБухгалтера.УстановитьСтатусВыполнено(КлючПодчиненнойЗадачи, Ложь);
		КонецЦикла;
	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти