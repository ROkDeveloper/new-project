#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОписанияСервисов     = Параметры.ОписанияСервисов;
	СостоянияПодключения = Параметры.СостоянияПодключения;
	Организация          = Параметры.Организация;
	
	ЗаполнитьВозможностиСервисов(ОписанияСервисов);
	
	ДобавитьРеквизитыФормыПередачаНДФЛ();
	
	Для Каждого СостояниеПодключения Из СостоянияПодключения Цикл
		ОписаниеСервиса = ВозможностиСервисов.НайтиСтроки(Новый Структура("Сервис", СостояниеПодключения.Сервис));
		Если ОписаниеСервиса.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		ОтрисоватьНовыйСервис(ОписаниеСервиса[0], СостояниеПодключения);
	КонецЦикла;
	
	// Сохраним положение окна по количеству колонок
	КлючСохраненияПоложенияОкна = СостоянияПодключения.Количество();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура Подключаемый_ПриИзмененииПередачаРасчетаНДФЛ(Элемент)
	
	ИмяЭлементов = СтрЗаменить(Элемент.Имя, СтруктураЭлементовГруппыБанка().ПереключательПередачаНДФЛ, "");
	Сервис = ВозможностиСервисов.НайтиСтроки(Новый Структура("ИмяЭлементов", ИмяЭлементов))[0].Сервис;
	Значение = ЭтотОбъект[ИмяРеквизитаПередачаРасчетаНДФЛ() + ИмяЭлементов];
	
	УстановитьЗначениеПередачиРасчетаНДФЛ(Сервис, Значение);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ДобавитьРеквизитыФормыПередачаНДФЛ()
	
	// Процедура добавляет реквизиты формы Передачи расчетов НДФЛ,
	// а также заполняет значения этих реквизитов из регистра сведений
	
	СервисыСПередачейНДФЛ = Новый Соответствие;
	ДобавляемыеРеквизиты = Новый Массив;
	
	// Отберем сервисы, у которых доступна передача НДФЛ
	ОтборСтрок = Новый Структура("ПередачаНДФЛ", Истина);
	Для Каждого СтрокаСПередачейНДФЛ Из ВозможностиСервисов.НайтиСтроки(ОтборСтрок) Цикл
		СтрокаСервиса =  ВозможностиСервисов.НайтиСтроки(Новый Структура("Сервис", СтрокаСПередачейНДФЛ.Сервис));
		Если СтрокаСервиса.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ИмяРеквизита = СтрШаблон("%1%2", ИмяРеквизитаПередачаРасчетаНДФЛ(), СтрокаСПередачейНДФЛ.ИмяЭлементов);
		СервисыСПередачейНДФЛ.Вставить(СтрокаСПередачейНДФЛ.Сервис, ИмяРеквизита);
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы(ИмяРеквизита, Новый ОписаниеТипов("Булево")));
	КонецЦикла;
	
	// Создадим реквизиты формы
	ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
	// Заполним значения реквизитов
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СостоянияИнтеграцииАУСН.Банк КАК Сервис,
	|	СостоянияИнтеграцииАУСН.ПередачаНДФЛ
	|ИЗ
	|	РегистрСведений.СостоянияИнтеграцииАУСН КАК СостоянияИнтеграцииАУСН
	|ГДЕ
	|	СостоянияИнтеграцииАУСН.Организация = &Организация";
	НастройкиПередачиНДФЛ = Запрос.Выполнить().Выгрузить();
	Для Каждого Сервис Из СервисыСПередачейНДФЛ Цикл
		Строки = НастройкиПередачиНДФЛ.НайтиСтроки(Новый Структура("Сервис", Сервис.Ключ));
		Если Строки.Количество() = 0 Тогда
			// По умолчанию считаем, что обмен включен 
			ЭтотОбъект[Сервис.Значение] = Истина;
		Иначе
			ЭтотОбъект[Сервис.Значение] = Строки[0].ПередачаНДФЛ;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьВозможностиСервисов(ОписанияСервисов)
	
	// Перенесем все сервисы, которые были определены в родительской форме
	Для Каждого ОписаниеСервиса Из ОписанияСервисов Цикл
		ЗаполнитьЗначенияСвойств(ВозможностиСервисов.Добавить(), ОписаниеСервиса);
	КонецЦикла;
	
	// Добавим ФНС
	СтрокаФНС = ВозможностиСервисов.Добавить();
	СтрокаФНС.Сервис = Справочники.КлассификаторБанков.ПустаяСсылка();
	СтрокаФНС.ИмяСервиса = "ФНС";
	СтрокаФНС.ИмяЭлементов = "ФНС";
	
	// Заполним предопределенные возможности сервисов
	Обработки.ПодключениеАУСН.ЗаполнитьВозможностиСервисов(ВозможностиСервисов); 
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗначениеПередачиРасчетаНДФЛ(Сервис, ПередачаНДФЛ)
	
	РегистрыСведений.СостоянияИнтеграцииАУСН.ИзменитьНастройкиПередачиНДФЛ(Организация, Сервис, ПередачаНДФЛ);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция СтруктураЭлементовГруппыБанка()
	
	СтруктураЭлементов = Новый Структура;
	СтруктураЭлементов.Вставить("Надпись",             "Надпись");
	СтруктураЭлементов.Вставить("НадписьРазметка",     "НадписьРазметка");
	СтруктураЭлементов.Вставить("НадписьРасчетНалога", "НадписьРасчетНалога");
	СтруктураЭлементов.Вставить("НадписьПлатежныеРеквизиты", "НадписьПлатежныеРеквизиты");
	СтруктураЭлементов.Вставить("НадписьУведомленияОтФНС",  "НадписьУведомленияОтФНС");
	СтруктураЭлементов.Вставить("ГруппаПередачаНДФЛ",  "ГруппаПередачаНДФЛ");
	СтруктураЭлементов.Вставить("ПереключательПередачаНДФЛ",  "ПереключательПередачаНДФЛ");
	
	Возврат СтруктураЭлементов;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ТекстНеПодключен()
	
	Возврат "(не подключен)";
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ИмяРеквизитаПередачаРасчетаНДФЛ()
	
	Возврат "ПередачаРасчетаНДФЛ";
	
КонецФункции

&НаСервере
Процедура ОтрисоватьНовыйСервис(ОписаниеСервиса, СостояниеПодключения)
	
	СтруктураЭлементов = СтруктураЭлементовГруппыБанка();
	
	Если ПустаяСтрока(ОписаниеСервиса.ИмяЭлементов) Тогда
		Возврат;
	КонецЕсли;
	Если Элементы.Найти(СтруктураЭлементов.Надпись + ОписаниеСервиса.ИмяЭлементов) <> Неопределено Тогда
		// Этот сервис уже создан
		Возврат;
	КонецЕсли;
	СервисПодключен = 
		(СостояниеПодключения.Состояние = ПредопределенноеЗначение("Перечисление.СостоянияИнтеграцииАУСН.Подключено"));
	
	ЦветНеПодключенногоСервиса = ЦветаСтиля.ЦветНеПодключенногоСервисаАУСН;
	ЦветЧередованияСтроки = ЦветаСтиля.ЦветФонаПодсказки;
	ЦветЗаголовка = ЦветаСтиля.БыстрыеОтборыФонГруппы;
	ШиринаЯчейки = 20;
	ВысотаЯчейки = 2;
	Если СервисПодключен Тогда
		КартинкаДоступнаяВозможность = БиблиотекаКартинок.ВыполненоУспешно;
	Иначе
		КартинкаДоступнаяВозможность = БиблиотекаКартинок.ОперацияРучнаяКорректировка;
	КонецЕсли;
	
	// Заголовок
	НадписьЗаголовка = Элементы.Вставить(
		СтруктураЭлементов.Надпись + ОписаниеСервиса.ИмяЭлементов,
		Тип("ДекорацияФормы"),
		Элементы.ГруппаСервисы);
	НадписьЗаголовка.Вид = ВидДекорацииФормы.Надпись;
	Если СервисПодключен Тогда
		НадписьЗаголовка.Заголовок = ОписаниеСервиса.ИмяСервиса;
		НадписьЗаголовка.ЦветФона = ЦветЗаголовка;
	Иначе
		НадписьЗаголовка.Заголовок = Новый ФорматированнаяСтрока(
			Новый ФорматированнаяСтрока(ОписаниеСервиса.ИмяСервиса, ШрифтыСтиля.КрупныйШрифтТекста),
			Символы.ПС,
			Новый ФорматированнаяСтрока(ТекстНеПодключен(), ШрифтыСтиля.МелкийШрифтТекста, ЦветаСтиля.БанковскиеДокументыСПредупреждениямиПриЗагрузке));
		НадписьЗаголовка.ЦветФона = ЦветНеПодключенногоСервиса;
	КонецЕсли;
	НадписьЗаголовка.Шрифт = ШрифтыСтиля.КрупныйШрифтТекста;
	НадписьЗаголовка.ГоризонтальноеПоложение = ГоризонтальноеПоложениеЭлемента.Центр;
	НадписьЗаголовка.ВертикальноеПоложение = ВертикальноеПоложениеЭлемента.Центр;
	НадписьЗаголовка.Высота = ВысотаЯчейки;
	НадписьЗаголовка.Ширина = ШиринаЯчейки;
	
	// Разметка
	НадписьРазметка = Элементы.Вставить(
		СтруктураЭлементов.НадписьРазметка + ОписаниеСервиса.ИмяЭлементов,
		Тип("ДекорацияФормы"),
		Элементы.ГруппаРазметка);
	НадписьРазметка.Вид = ВидДекорацииФормы.Надпись;
	Если Не СервисПодключен Тогда
		НадписьРазметка.ЦветФона = ЦветНеПодключенногоСервиса;
	КонецЕсли;	
	Если ОписаниеСервиса.РазметкаОпераций Тогда
		НадписьРазметка.Заголовок = Новый ФорматированнаяСтрока(КартинкаДоступнаяВозможность);
	КонецЕсли;
	НадписьРазметка.ГоризонтальноеПоложение = ГоризонтальноеПоложениеЭлемента.Центр;
	НадписьРазметка.ВертикальноеПоложение = ВертикальноеПоложениеЭлемента.Центр;
	НадписьРазметка.Высота = ВысотаЯчейки;
	НадписьРазметка.Ширина = ШиринаЯчейки;

	// Расчет налога
	НадписьРасчетНалога = Элементы.Вставить(
		СтруктураЭлементов.НадписьРасчетНалога + ОписаниеСервиса.ИмяЭлементов,
		Тип("ДекорацияФормы"),
		Элементы.ГруппаРасчетНалога);
	НадписьРасчетНалога.Вид = ВидДекорацииФормы.Надпись;
	Если ОписаниеСервиса.РасчетНалога Тогда
		НадписьРасчетНалога.Заголовок = Новый ФорматированнаяСтрока(КартинкаДоступнаяВозможность);
	КонецЕсли;
	Если Не СервисПодключен Тогда
		НадписьРасчетНалога.ЦветФона = ЦветНеПодключенногоСервиса;
	Иначе
		НадписьРасчетНалога.ЦветФона = ЦветЧередованияСтроки;
	КонецЕсли;
	НадписьРасчетНалога.ГоризонтальноеПоложение = ГоризонтальноеПоложениеЭлемента.Центр;
	НадписьРасчетНалога.ВертикальноеПоложение = ВертикальноеПоложениеЭлемента.Центр;
	НадписьРасчетНалога.Высота = ВысотаЯчейки;
	НадписьРасчетНалога.Ширина = ШиринаЯчейки;
	
	// Платежные реквизиты
	НадписьПлатежныеРеквизиты = Элементы.Вставить(
		СтруктураЭлементов.НадписьПлатежныеРеквизиты + ОписаниеСервиса.ИмяЭлементов,
		Тип("ДекорацияФормы"),
		Элементы.ГруппаПлатежныеРеквизиты);
	НадписьПлатежныеРеквизиты.Вид = ВидДекорацииФормы.Надпись;
	Если Не СервисПодключен Тогда
		НадписьПлатежныеРеквизиты.ЦветФона = ЦветНеПодключенногоСервиса;
	КонецЕсли;	
	
	Если ОписаниеСервиса.ПлатежныеРеквизиты Тогда
		НадписьПлатежныеРеквизиты.Заголовок = Новый ФорматированнаяСтрока(КартинкаДоступнаяВозможность);
	КонецЕсли;
	НадписьПлатежныеРеквизиты.ГоризонтальноеПоложение = ГоризонтальноеПоложениеЭлемента.Центр;
	НадписьПлатежныеРеквизиты.ВертикальноеПоложение = ВертикальноеПоложениеЭлемента.Центр;
	НадписьПлатежныеРеквизиты.Высота = ВысотаЯчейки;
	НадписьПлатежныеРеквизиты.Ширина = ШиринаЯчейки;
	
	// Уведомления от ФНС
	НадписьУведомленияОтФНС = Элементы.Вставить(
		СтруктураЭлементов.НадписьУведомленияОтФНС + ОписаниеСервиса.ИмяЭлементов,
		Тип("ДекорацияФормы"),
		Элементы.ГруппаУведомленияОтФНС);
	НадписьУведомленияОтФНС.Вид = ВидДекорацииФормы.Надпись;
	Если ОписаниеСервиса.УведомленияОтФНС Тогда
		НадписьУведомленияОтФНС.Заголовок = Новый ФорматированнаяСтрока(КартинкаДоступнаяВозможность);
	КонецЕсли;
	Если Не СервисПодключен Тогда
		НадписьУведомленияОтФНС.ЦветФона = ЦветНеПодключенногоСервиса;
	Иначе
		НадписьУведомленияОтФНС.ЦветФона = ЦветЧередованияСтроки;
	КонецЕсли;
	НадписьУведомленияОтФНС.ГоризонтальноеПоложение = ГоризонтальноеПоложениеЭлемента.Центр;
	НадписьУведомленияОтФНС.ВертикальноеПоложение = ВертикальноеПоложениеЭлемента.Центр;
	НадписьУведомленияОтФНС.Высота = ВысотаЯчейки;
	НадписьУведомленияОтФНС.Ширина = ШиринаЯчейки;
	
	// Группа передача НДФЛ
	ГруппаПередачаНДФЛ = Элементы.Вставить(
		СтруктураЭлементов.ГруппаПередачаНДФЛ + ОписаниеСервиса.ИмяЭлементов,
		Тип("ГруппаФормы"),
		Элементы.ГруппаРасчетНДФЛ);
	ГруппаПередачаНДФЛ.Вид = ВидГруппыФормы.ОбычнаяГруппа;
	ГруппаПередачаНДФЛ.Видимость = Истина;
	ГруппаПередачаНДФЛ.Заголовок = ОписаниеСервиса.ИмяСервиса;
	ГруппаПередачаНДФЛ.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
	ГруппаПередачаНДФЛ.ОтображатьЗаголовок = Ложь;
	ГруппаПередачаНДФЛ.Ширина = ШиринаЯчейки;
	ГруппаПередачаНДФЛ.Высота = ВысотаЯчейки;
	ГруппаПередачаНДФЛ.РастягиватьПоГоризонтали = Ложь;
	ГруппаПередачаНДФЛ.РастягиватьПоВертикали = Ложь;
	ГруппаПередачаНДФЛ.ГоризонтальноеПоложениеПодчиненных = ГоризонтальноеПоложениеЭлемента.Центр;
	ГруппаПередачаНДФЛ.ВертикальноеПоложениеПодчиненных = ВертикальноеПоложениеЭлемента.Центр;
	
	// Переключатель передача НДФЛ
	Если ОписаниеСервиса.ПередачаНДФЛ Тогда
		Если Не СервисПодключен Тогда
			ПереключательПередачаНДФЛ = Элементы.Вставить(
				СтруктураЭлементов.ПереключательПередачаНДФЛ + ОписаниеСервиса.ИмяЭлементов,
				Тип("ДекорацияФормы"),
				ГруппаПередачаНДФЛ);
			ПереключательПередачаНДФЛ.Вид = ВидДекорацииФормы.Надпись;
			ПереключательПередачаНДФЛ.Заголовок = Новый ФорматированнаяСтрока(КартинкаДоступнаяВозможность);
			ПереключательПередачаНДФЛ.ЦветФона = ЦветНеПодключенногоСервиса;
			ПереключательПередачаНДФЛ.ГоризонтальноеПоложение = ГоризонтальноеПоложениеЭлемента.Центр;
			ПереключательПередачаНДФЛ.ВертикальноеПоложение = ВертикальноеПоложениеЭлемента.Центр;
			ПереключательПередачаНДФЛ.Высота = ВысотаЯчейки;
			ПереключательПередачаНДФЛ.Ширина = ШиринаЯчейки;
		Иначе
			ПереключательПередачаНДФЛ = Элементы.Вставить(
				СтруктураЭлементов.ПереключательПередачаНДФЛ + ОписаниеСервиса.ИмяЭлементов,
				Тип("ПолеФормы"),
				ГруппаПередачаНДФЛ);
			ПереключательПередачаНДФЛ.Вид = ВидПоляФормы.ПолеФлажка;
			ПереключательПередачаНДФЛ.ВидФлажка = ВидФлажка.Выключатель;
			ПереключательПередачаНДФЛ.ПутьКДанным = ИмяРеквизитаПередачаРасчетаНДФЛ() + ОписаниеСервиса.ИмяЭлементов;
			ПереключательПередачаНДФЛ.УстановитьДействие("ПриИзменении", "Подключаемый_ПриИзмененииПередачаРасчетаНДФЛ");
			ПереключательПередачаНДФЛ.Видимость = Истина;
			ПереключательПередачаНДФЛ.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		КонецЕсли;
	Иначе
		ПереключательПередачаНДФЛ = Элементы.Вставить(
			СтруктураЭлементов.ПереключательПередачаНДФЛ + ОписаниеСервиса.ИмяЭлементов,
			Тип("ДекорацияФормы"),
			ГруппаПередачаНДФЛ);
		ПереключательПередачаНДФЛ.Вид = ВидДекорацииФормы.Надпись;
		
		Если Не СервисПодключен Тогда
			ПереключательПередачаНДФЛ.ЦветФона = ЦветНеПодключенногоСервиса;
		КонецЕсли;	
		ПереключательПередачаНДФЛ.ГоризонтальноеПоложение = ГоризонтальноеПоложениеЭлемента.Центр;
		ПереключательПередачаНДФЛ.ВертикальноеПоложение = ВертикальноеПоложениеЭлемента.Центр;
		ПереключательПередачаНДФЛ.Высота = ВысотаЯчейки;
		ПереключательПередачаНДФЛ.Ширина = ШиринаЯчейки;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
