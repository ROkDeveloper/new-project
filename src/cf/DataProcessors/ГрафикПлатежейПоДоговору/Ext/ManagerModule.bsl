#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "НачислениеПроцентныхРасходов") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм,
			"НачислениеПроцентныхРасходов",
			НСтр("ru = 'Справка-расчет ""Начисление процентных расходов""'"),
			СформироватьПечатнуюФормуСправкиНачислениеПроцентныхРасходов(МассивОбъектов, ОбъектыПечати, ПараметрыПечати),
			,
			ПолноеИмяМакетаНачислениеПроцентныхРасходов());
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СформироватьПечатнуюФормуСправкиНачислениеПроцентныхРасходов(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.РазмерКолонтитулаСверху = 0;
	ТабличныйДокумент.РазмерКолонтитулаСнизу = 0;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_НачислениеПроцентныхРасходов";
	
	ПечатьТорговыхДокументов.УстановитьМинимальныеПоляПечати(ТабличныйДокумент);
	
	КоличествоДокументов = 0;
	НомераТаблиц = Новый Структура;
	Макет = УправлениеПечатью.МакетПечатнойФормы(ПолноеИмяМакетаНачислениеПроцентныхРасходов());
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапросаДляСправкиРасчетаНачислениеПроцентныхРасходовПоступление(НомераТаблиц);
	Запрос.УстановитьПараметр("МассивДокументов", МассивОбъектов);
	Запрос.УстановитьПараметр("ВалютаРеглУчета", Константы.ВалютаРегламентированногоУчета.Получить());
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ВыборкаДокументы = РезультатЗапроса[НомераТаблиц.Документы].Выбрать();
	ВыборкаГрафики = РезультатЗапроса[НомераТаблиц.Графики].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаДокументы.Следующий() Цикл
		
		СсылкаНаДокумент = ВыборкаДокументы.Ссылка;
		
		ТекстСообщения = "";
		
		Если Не ВыборкаДокументы.Проведен Тогда
			ТекстШаблона = НСтр("ru = '%1: справка-расчет формируется только по проведенным документам.'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстШаблона, Строка(СсылкаНаДокумент));
		ИначеЕсли Не ВыборкаГрафики.НайтиСледующий(СсылкаНаДокумент, "Ссылка") Тогда
			ТекстШаблона = НСтр("ru = '%1: начисление процентных процентов по документу не выполняется.'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстШаблона, Строка(СсылкаНаДокумент));
		КонецЕсли;
		Если ЗначениеЗаполнено(ТекстСообщения) Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, СсылкаНаДокумент);
			Продолжить;
		КонецЕсли;
		
		КоличествоДокументов = КоличествоДокументов + 1;
		Если КоличествоДокументов > 1 Тогда
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ЗаполнитьТабличныйДокументСправки(ТабличныйДокумент, ВыборкаДокументы, ВыборкаГрафики, Макет);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

Процедура ЗаполнитьТабличныйДокументСправки(ТабличныйДокумент, ВыборкаДокументы, ВыборкаГрафики, Макет)
	
	// Шапка
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	
	ОбластьШапка.Параметры.Заполнить(ВыборкаДокументы);
	
	ОрганизацияПредставление = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(
		БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(ВыборкаДокументы.Организация, ВыборкаДокументы.Дата), 
		"НаименованиеДляПечатныхФорм,");
	ОбластьШапка.Параметры.ОрганизацияПредставление = ОрганизацияПредставление;
	
	КонтрагентПредставление = "";
	КонтрагентПредставление = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(
		БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(ВыборкаДокументы.Контрагент, ВыборкаДокументы.Дата), 
		"НаименованиеДляПечатныхФорм,");
	ОбластьШапка.Параметры.КонтрагентПредставление = КонтрагентПредставление;
	
	ДокументПредставление = Строка(ВыборкаДокументы.Ссылка);
	Если ЗначениеЗаполнено(ВыборкаДокументы.НомерВходящегоДокумента)
		И ЗначениеЗаполнено(ВыборкаДокументы.ДатаВходящегоДокумента) Тогда
		ДокументПредставление = ДокументПредставление + Символы.ПС
			+ СтрШаблон(НСтр("ru='вх. № %1 от %2'"),
				СокрЛП(ВыборкаДокументы.НомерВходящегоДокумента),
				Формат(ВыборкаДокументы.ДатаВходящегоДокумента, "ДЛФ=D"));
	КонецЕсли;
	
	ОбластьШапка.Параметры.ДокументПредставление = ДокументПредставление;
	
	ТабличныйДокумент.Вывести(ОбластьШапка);
	
	Если ВыборкаДокументы.ЭтоИзменение Тогда
		ОбластьПоказатели = Макет.ПолучитьОбласть("Изменение");
	ИначеЕсли ВыборкаДокументы.ЭтоПрекращениеАренды Тогда
		ОбластьПоказатели = Макет.ПолучитьОбласть("ПрекращениеАренды");
	ИначеЕсли ВыборкаДокументы.СпособОценкиБУ = Перечисления.СпособыОценкиБУ.ПоЦенеБезРассрочки Тогда
		ОбластьПоказатели = Макет.ПолучитьОбласть("РассрочкаПоСтоимости");
	ИначеЕсли ВыборкаДокументы.ЭтоРассрочка Тогда
		ОбластьПоказатели = Макет.ПолучитьОбласть("РассрочкаПоСтавке");
	ИначеЕсли ВыборкаДокументы.СпособОценкиБУ = Перечисления.СпособыОценкиБУ.РассчитываетсяПоСтавке Тогда
		ОбластьПоказатели = Макет.ПолучитьОбласть("ПоступлениеПоСтавке");
	Иначе
		ОбластьПоказатели = Макет.ПолучитьОбласть("ПоступлениеПоСтоимости");
	КонецЕсли;
	ОбластьПоказатели.Параметры.Заполнить(ВыборкаДокументы);
	ТабличныйДокумент.Вывести(ОбластьПоказатели);
	ВысотаШапки = ТабличныйДокумент.ВысотаТаблицы;
	
	Если ВыборкаДокументы.ЭтоПрекращениеАренды Тогда
		ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ПрекращениеАрендыШапкаТаблицы");
	Иначе
		ОбластьШапкаТаблицы = Макет.ПолучитьОбласть("ШапкаТаблицы");
	КонецЕсли;
	ТабличныйДокумент.Вывести(ОбластьШапкаТаблицы);
	ВысотаШапкиТаблицы = ТабличныйДокумент.ВысотаТаблицы;
	
	ОбластьПовторения = ТабличныйДокумент.Область(ВысотаШапки + 1, , ВысотаШапкиТаблицы);
	ТабличныйДокумент.ПовторятьПриПечатиСтроки = ОбластьПовторения;
	
	// Строки графика
	
	ОбластьСтрока = Макет.ПолучитьОбласть("Строка");
	ВыборкаСтроки = ВыборкаГрафики.Выбрать();
	Пока ВыборкаСтроки.Следующий() Цикл
		ОбластьСтрока.Параметры.Заполнить(ВыборкаСтроки);
		ТабличныйДокумент.Вывести(ОбластьСтрока);
	КонецЦикла;
	
	ВысотаТаблицы = ТабличныйДокумент.ВысотаТаблицы;
	ПоследняяСтрока = ТабличныйДокумент.Область(ВысотаТаблицы, , ВысотаТаблицы);
	ПоследняяСтрока.ВместеСоСледующим = Истина;
	
	// Итоги
	
	ОбластьИтоги = Макет.ПолучитьОбласть("Итоги");
	ОбластьИтоги.Параметры.Заполнить(ВыборкаГрафики);
	ТабличныйДокумент.Вывести(ОбластьИтоги);
	
	// Подвал
	
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	
	СтавкаПредставление = Формат(ВыборкаДокументы.Ставка, "ЧЦ=10; ЧДЦ=4");
	ОбластьПодвал.Параметры.СтавкаПредставление = СтавкаПредставление;
	
	Руководители = ОтветственныеЛицаБП.ОтветственныеЛица(ВыборкаДокументы.Организация, ВыборкаДокументы.Дата);
	ДолжностьОтветственного = Руководители.ОтветственныйЗаБухгалтерскиеРегистрыДолжностьПредставление;
	ФИООтветственного = Руководители.ОтветственныйЗаБухгалтерскиеРегистрыПредставление;
	ОбластьПодвал.Параметры.ДолжностьОтветственногоЗаРегистрыБухУчета = ДолжностьОтветственного;
	ОбластьПодвал.Параметры.РасшифровкаПодписиОтветственногоЗаРегистрыБухУчета = ФИООтветственного;
	
	ТабличныйДокумент.Вывести(ОбластьПодвал);
	
КонецПроцедуры

Функция ТекстЗапросаДляСправкиРасчетаНачислениеПроцентныхРасходовПоступление(НомераТаблиц)
	
	НомераТаблиц.Вставить("ВременнаяТаблицаДокументы", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ВременнаяТаблицаДанныеОбъектовНачисления", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Документы", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("Графики", НомераТаблиц.Количество());
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	ПоступлениеВАренду.Ссылка КАК Ссылка,
		|	ПоступлениеВАренду.Дата КАК Дата,
		|	ПоступлениеВАренду.Проведен КАК Проведен,
		|	ПоступлениеВАренду.Организация КАК Организация,
		|	ПоступлениеВАренду.Контрагент КАК Контрагент,
		|	ПоступлениеВАренду.ДоговорКонтрагента КАК ДоговорКонтрагента,
		|	ПоступлениеВАренду.СпособОценкиАрендыБУ КАК СпособОценкиБУ,
		|	ПоступлениеВАренду.СтавкаДисконтирования КАК СтавкаДисконтирования,
		|	ПоступлениеВАренду.НомерВходящегоДокумента КАК НомерВходящегоДокумента,
		|	ПоступлениеВАренду.ДатаВходящегоДокумента КАК ДатаВходящегоДокумента,
		|	ПоступлениеВАренду.АвансовыеПлатежи КАК АвансовыеПлатежи,
		|	ПоступлениеВАренду.СтоимостьОбязательства КАК СтоимостьОбязательства,
		|	ПоступлениеВАренду.ПереходНаФСБУ25
		|		И ПоступлениеВАренду.ВидОперации = ЗНАЧЕНИЕ(Перечисление.ВидыОперацийПоступлениеВАренду.ПоступлениеВЛизинг)
		|		И ПоступлениеВАренду.НалоговыйУчетИмуществаВедетЛизингополучатель КАК ЭтоИзменение,
		|	ЛОЖЬ КАК ЭтоРассрочка,
		|	ЛОЖЬ КАК ЭтоПрекращениеАренды
		|ПОМЕСТИТЬ ТаблицаДокументов
		|ИЗ
		|	Документ.ПоступлениеВАренду КАК ПоступлениеВАренду
		|ГДЕ
		|	ПоступлениеВАренду.Ссылка В(&МассивДокументов)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ИзменениеУсловийАренды.Ссылка,
		|	ИзменениеУсловийАренды.Дата,
		|	ИзменениеУсловийАренды.Проведен,
		|	ИзменениеУсловийАренды.Организация,
		|	ИзменениеУсловийАренды.Контрагент,
		|	ИзменениеУсловийАренды.ДоговорКонтрагента,
		|	ИзменениеУсловийАренды.СпособОценкиАрендыБУ,
		|	ИзменениеУсловийАренды.СтавкаДисконтирования,
		|	ИзменениеУсловийАренды.НомерВходящегоДокумента,
		|	ИзменениеУсловийАренды.ДатаВходящегоДокумента,
		|	ИзменениеУсловийАренды.АвансовыеПлатежи,
		|	ИзменениеУсловийАренды.СтоимостьОбязательства,
		|	ИСТИНА,
		|	ЛОЖЬ,
		|	ЛОЖЬ
		|ИЗ
		|	Документ.ИзменениеУсловийАренды КАК ИзменениеУсловийАренды
		|ГДЕ
		|	ИзменениеУсловийАренды.Ссылка В(&МассивДокументов)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПрекращениеАренды.Ссылка,
		|	ПрекращениеАренды.Дата,
		|	ПрекращениеАренды.Проведен,
		|	ПрекращениеАренды.Организация,
		|	ПрекращениеАренды.Контрагент,
		|	ПрекращениеАренды.ДоговорКонтрагента,
		|	СтоимостьОбязательстваПоАренде.СпособОценкиАрендыБУ,
		|	СтоимостьОбязательстваПоАренде.СтавкаДисконтирования,
		|	"""",
		|	ДАТАВРЕМЯ(1, 1, 1),
		|	0,
		|	СтоимостьОбязательстваПоАренде.СтоимостьОбязательства,
		|	ЛОЖЬ,
		|	ЛОЖЬ,
		|	ИСТИНА
		|ИЗ
		|	Документ.ПрекращениеАренды КАК ПрекращениеАренды
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтоимостьОбязательстваПоАренде КАК СтоимостьОбязательстваПоАренде
		|		ПО ПрекращениеАренды.Ссылка = СтоимостьОбязательстваПоАренде.Регистратор
		|ГДЕ
		|	ПрекращениеАренды.Ссылка В(&МассивДокументов)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	УсловияОплатыПоступления.Ссылка,
		|	УсловияОплатыПоступления.Дата,
		|	УсловияОплатыПоступления.Проведен,
		|	УсловияОплатыПоступления.Организация,
		|	УсловияОплатыПоступления.Контрагент,
		|	УсловияОплатыПоступления.ДоговорКонтрагента,
		|	УсловияОплатыПоступления.СпособОценкиРассрочкиБУ,
		|	УсловияОплатыПоступления.СтавкаДисконтирования,
		|	"""",
		|	"""",
		|	УсловияОплатыПоступления.АвансовыеПлатежи,
		|	УсловияОплатыПоступления.СтоимостьОбязательства,
		|	ЛОЖЬ,
		|	ИСТИНА,
		|	ЛОЖЬ
		|ИЗ
		|	Документ.УсловияОплатыПоступления КАК УсловияОплатыПоступления
		|ГДЕ
		|	УсловияОплатыПоступления.Ссылка В(&МассивДокументов)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДокументов.Ссылка КАК Ссылка,
		|	СУММА(ДанныеПредметовАренды.СуммаВзаиморасчетов) КАК СуммаПлатежей
		|ПОМЕСТИТЬ ДанныеОбъектовНачисления
		|ИЗ
		|	ТаблицаДокументов КАК ТаблицаДокументов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПредметовАренды КАК ДанныеПредметовАренды
		|		ПО ТаблицаДокументов.Ссылка = ДанныеПредметовАренды.Регистратор
		|ГДЕ
		|	НЕ ТаблицаДокументов.Ссылка ССЫЛКА Документ.ПрекращениеАренды
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаДокументов.Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТаблицаДокументов.Ссылка,
		|	СУММА(УсловияОплатыПоступления.СуммаВзаиморасчетов)
		|ИЗ
		|	ТаблицаДокументов КАК ТаблицаДокументов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.УсловияОплатыПоступления КАК УсловияОплатыПоступления
		|		ПО ТаблицаДокументов.Ссылка = УсловияОплатыПоступления.Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаДокументов.Ссылка
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТаблицаДокументов.Ссылка,
		|	СУММА(ГрафикиПроцентныхРасходов.СуммаПлатежа)
		|ИЗ
		|	ТаблицаДокументов КАК ТаблицаДокументов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикиПроцентныхРасходов КАК ГрафикиПроцентныхРасходов
		|		ПО ТаблицаДокументов.Ссылка = ГрафикиПроцентныхРасходов.Регистратор
		|ГДЕ
		|	ТаблицаДокументов.Ссылка ССЫЛКА Документ.ПрекращениеАренды
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаДокументов.Ссылка
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДокументов.Ссылка КАК Ссылка,
		|	ТаблицаДокументов.Дата КАК Дата,
		|	ТаблицаДокументов.Проведен КАК Проведен,
		|	ТаблицаДокументов.НомерВходящегоДокумента КАК НомерВходящегоДокумента,
		|	ТаблицаДокументов.ДатаВходящегоДокумента КАК ДатаВходящегоДокумента,
		|	ТаблицаДокументов.Организация КАК Организация,
		|	ТаблицаДокументов.Контрагент КАК Контрагент,
		|	ТаблицаДокументов.СпособОценкиБУ КАК СпособОценкиБУ,
		|	ТаблицаДокументов.ЭтоИзменение КАК ЭтоИзменение,
		|	ТаблицаДокументов.ЭтоРассрочка КАК ЭтоРассрочка,
		|	ТаблицаДокументов.ЭтоПрекращениеАренды КАК ЭтоПрекращениеАренды,
		|	ТаблицаДокументов.СтавкаДисконтирования КАК Ставка,
		|	ТаблицаДокументов.АвансовыеПлатежи КАК АвансовыеПлатежи,
		|	ТаблицаДокументов.СтоимостьОбязательства КАК Обязательство,
		|	ТаблицаДокументов.СтоимостьОбязательства + ТаблицаДокументов.АвансовыеПлатежи КАК ОценкаБУ,
		|	ВЫРАЗИТЬ(ЕСТЬNULL(ТаблицаДокументов.ДоговорКонтрагента.ВалютаВзаиморасчетов, &ВалютаРеглУчета) КАК Справочник.Валюты).Наименование КАК ВалютаПредставление,
		|	ЕСТЬNULL(ДанныеОбъектовНачисления.СуммаПлатежей, 0) КАК СуммаПлатежей,
		|	ЕСТЬNULL(ДанныеОбъектовНачисления.СуммаПлатежей, 0) - ТаблицаДокументов.АвансовыеПлатежи КАК СуммаОбязательства
		|ИЗ
		|	ТаблицаДокументов КАК ТаблицаДокументов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеОбъектовНачисления КАК ДанныеОбъектовНачисления
		|		ПО ТаблицаДокументов.Ссылка = ДанныеОбъектовНачисления.Ссылка
		|
		|УПОРЯДОЧИТЬ ПО
		|	Дата,
		|	Ссылка
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДокументов.Ссылка КАК Ссылка,
		|	ГрафикиПроцентныхРасходов.ДатаНачисления КАК ДатаНачисления,
		|	ГрафикиПроцентныхРасходов.КоличествоДней КАК КоличествоДней,
		|	СУММА(ГрафикиПроцентныхРасходов.Обязательство) КАК Обязательство,
		|	СУММА(ГрафикиПроцентныхРасходов.СуммаПлатежа) КАК СуммаПлатежа,
		|	СУММА(ГрафикиПроцентныхРасходов.СуммаПроцентов) КАК СуммаПроцентов
		|ИЗ
		|	ТаблицаДокументов КАК ТаблицаДокументов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикиПроцентныхРасходов КАК ГрафикиПроцентныхРасходов
		|		ПО ТаблицаДокументов.Ссылка = ГрафикиПроцентныхРасходов.Регистратор
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаДокументов.Ссылка,
		|	ГрафикиПроцентныхРасходов.ДатаНачисления,
		|	ГрафикиПроцентныхРасходов.КоличествоДней
		|
		|УПОРЯДОЧИТЬ ПО
		|	Ссылка,
		|	ДатаНачисления
		|ИТОГИ
		|	СУММА(СуммаПлатежа),
		|	СУММА(СуммаПроцентов)
		|ПО
		|	Ссылка";
	
	Возврат ТекстЗапроса;

КонецФункции

Функция ПолноеИмяМакетаНачислениеПроцентныхРасходов()
	
	Возврат "Обработка.ГрафикПлатежейПоДоговору.ПФ_MXL_НачислениеПроцентныхРасходов";
	
КонецФункции

#КонецОбласти

#КонецЕсли