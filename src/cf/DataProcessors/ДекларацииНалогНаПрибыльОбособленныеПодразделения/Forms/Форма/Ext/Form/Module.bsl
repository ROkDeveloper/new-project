&НаКлиенте
Перем КонтекстЭДОКлиент;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Организация = Параметры.Организация;
	ОсновнаяДекларация = Параметры.ОсновнаяДекларация;
	ОсновнаяДекларацияНаименование = Параметры.ОсновнаяДекларацияНаименование;
	Подключена1СОтчетность = Параметры.Подключена1СОтчетность;
	Если Не ЗначениеЗаполнено(Организация) Или Не ЗначениеЗаполнено(ОсновнаяДекларация) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ДатаНачала = ОсновнаяДекларация.ДатаНачала;
	ДатаОкончания = ОсновнаяДекларация.ДатаОкончания;
	НаименованиеОтчета = ОсновнаяДекларация.НаименованиеОтчета;
	ПредставлениеПериода = ОсновнаяДекларация.ПредставлениеПериода;
	
	Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаПустая;
	
	АдресДекларацииПоОбособленнымПодразделениям = Параметры.АдресДекларацииПоОбособленнымПодразделениям;
	ДекларацииПоОбособленнымПодразделениямПредставление = Параметры.ДекларацииПоОбособленнымПодразделениямПредставление;
	ТребуетсяСозданиеДеклараций = Параметры.ТребуетсяСозданиеДеклараций;
	ТребуетсяИсправлениеДеклараций = Параметры.ТребуетсяИсправлениеДеклараций;
	
	Если Не ТребуетсяСозданиеДеклараций Тогда
		ТаблицаДекларацииПоОбособленнымПодразделениям = ПолучитьИзВременногоХранилища(АдресДекларацииПоОбособленнымПодразделениям);
		Отчеты.Загрузить(ТаблицаДекларацииПоОбособленнымПодразделениям);
		УправлениеФормой();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)

	ОписаниеОповещения = Новый ОписаниеОповещения("ПриОткрытииЗавершение", ЭтотОбъект);
	ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);

	Если ТребуетсяСозданиеДеклараций Тогда
		ДлительнаяОперация = ФормированиеДекларацийНаСервере();
		
		Если ДлительнаяОперация.Статус = "Выполнено" Тогда
			ЗагрузитьРезультатДеклараций(ДлительнаяОперация.АдресРезультата);
		Иначе
			ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
			ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
			
			ОповещениеОЗавершении = Новый ОписаниеОповещения("ПриФормированииДеклараций", ЭтотОбъект);
			ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Результат = Новый Структура();
	Результат.Вставить("АдресДекларацииПоОбособленнымПодразделениям",                АдресДекларацииПоОбособленнымПодразделениям);
	Результат.Вставить("ДекларацииПоОбособленнымПодразделениямПредставление",        ДекларацииПоОбособленнымПодразделениямПредставление);
	Результат.Вставить("ТребуетсяИсправлениеДекларацийПоОбособленнымПодразделениям", ТребуетсяИсправлениеДеклараций);
	ОповеститьОВыборе(Результат);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_РегламентированныйОтчет"
		И ТипЗнч(Параметр) = Тип("Структура")
		И Параметр.Свойство("Организация") И Параметр.Организация = Организация
		И Параметр.Свойство("Ссылка") И Параметр.Свойство("ВидДокумента") Тогда
		
		Если Параметр.Ссылка = ОсновнаяДекларация Тогда
			ОбновитьДекларации();
		Иначе
			ОбновитьДанныеДекларацииОбособленногоПодразделения();
		КонецЕсли;
	ИначеЕсли ИмяСобытия = "Завершение групповой отправки"
		Или ИмяСобытия = "Завершение обновления" Тогда
		ОбновитьСтатусыДеклараций();
	ИначеЕсли ИмяСобытия = "Завершение отправки в контролирующий орган" Тогда
		ОбновитьСтатусДекларации(Параметр.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы 

&НаКлиенте
Процедура ДекларацияНаименованиеНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПоказатьЗначение(, ОсновнаяДекларация);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтчетыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		ПоказатьЗначение(, Элемент.ТекущиеДанные.РегламентированныйОтчет);
		ТекущаяДекларация = Элемент.ТекущиеДанные.РегламентированныйОтчет;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьОтчет(Команда)
	
	Если КонтекстЭДОКлиент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.Отчеты.ТекущиеДанные;
	
	РегламентированнаяОтчетностьКлиент.ОтправитьОтчетИзФормыСписка(ЭтотОбъект, Команда.Имя, КонтекстЭДОКлиент, ТекущиеДанные);
	
КонецПроцедуры

&НаКлиенте
Процедура ГрупповойРежим(Команда)

	Если КонтекстЭДОКлиент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура();
	ДополнительныеПараметры.Вставить("Организация", Организация);
	ДополнительныеПараметры.Вставить("НачалоПериода", ДатаНачала);
	ДополнительныеПараметры.Вставить("КонецПериода", ДатаОкончания);
	ДополнительныеПараметры.Вставить("ВидОтчета", НаименованиеОтчета);
	
	ДополнитьОтборГрупповойОтправки(ДополнительныеПараметры);
	
	ОткрытьФорму(КонтекстЭДОКлиент.ПутьКОбъекту + ".Форма.ГрупповаяОтправка", ДополнительныеПараметры, ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура Открыть1СОтчетность(Команда)

	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("Раздел", ПредопределенноеЗначение("Перечисление.СтраницыЖурналаОтчетность.Отчеты"));
	ПараметрыФормы.Вставить("Организация", Организация);
	ПараметрыФормы.Вставить("НачалоПериода", ДатаНачала);
	ПараметрыФормы.Вставить("КонецПериода", ДатаОкончания);
	ПараметрыФормы.Вставить("ВидОтчета", НаименованиеОтчета);
	
	ОткрытьФорму("ОбщаяФорма.РегламентированнаяОтчетность", ПараметрыФормы, , "1С-Отчетность");

КонецПроцедуры

&НаКлиенте
Процедура Исправить(Команда)

	ДлительнаяОперация = ИсправитьДекларацииНаСервере();
	
	Если ДлительнаяОперация.Статус = "Выполнено" Тогда
		ЗагрузитьРезультатДеклараций(ДлительнаяОперация.АдресРезультата);
	Иначе
		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		ПараметрыОжидания.ВыводитьОкноОжидания = Истина;
		
		ОповещениеОЗавершении = Новый ОписаниеОповещения("ПриИсправленииДеклараций", ЭтотОбъект);
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДанные(Команда)

	Если Не Подключена1СОтчетность Или КонтекстЭДОКлиент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СписокОрганизаций = Новый Массив;
	СписокОрганизаций.Добавить(Организация);
	
	ПраваНаОбмен = КонтекстЭДОКлиент.ЕстьВозможностьОбмена(СписокОрганизаций, Ложь);
	Если ПраваНаОбмен Тогда
		ВыполнитьОбмен(СписокОрганизаций);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УправлениеФормой()

	Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаРабочая;
	УстановитьУсловноеОформление(ТребуетсяИсправлениеДеклараций);
	Элементы.ГруппаТребуетсяИсправление.Видимость = ТребуетсяИсправлениеДеклараций;
	Элементы.ОтчетыОбновитьДанные.Видимость = Подключена1СОтчетность;

КонецПроцедуры

&НаСервере
Функция ФормированиеДекларацийНаСервере()

	ТаблицаДекларацииПоОбособленнымПодразделениям = ПолучитьИзВременногоХранилища(АдресДекларацииПоОбособленнымПодразделениям);
	ПараметрыОперации = Новый Структура;
	ПараметрыОперации.Вставить("ОсновнаяДекларация",                            ОсновнаяДекларация);
	ПараметрыОперации.Вставить("Организация",                                   Организация);
	ПараметрыОперации.Вставить("ТаблицаДекларацииПоОбособленнымПодразделениям", ТаблицаДекларацииПоОбособленнымПодразделениям);
	ПараметрыОперации.Вставить("ТребуетсяИсправлениеДеклараций",                ТребуетсяИсправлениеДеклараций);
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Формирование деклараций по налогу на прибыль по обособленным подразделениям'");
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;
	
	Возврат ДлительныеОперации.ВыполнитьФункцию(
		ПараметрыВыполнения,
		"НалогНаПрибыльДекларация.ФормированиеДекларацийПоОбособленнымПодразделениям",
		ПараметрыОперации);

КонецФункции

&НаКлиенте
Процедура ПриФормированииДеклараций(Результат, ДополнительныеПараметры) Экспорт 

	Если Результат = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Ошибка" Тогда
		ВызватьИсключение Результат.КраткоеПредставлениеОшибки;
	КонецЕсли;
	
	ЗагрузитьРезультатДеклараций(Результат.АдресРезультата);
	Оповестить("ПрограммноеСозданиеОтчета");

КонецПроцедуры

&НаСервере
Процедура ЗагрузитьРезультатДеклараций(АдресРезультата, ОбновитьОсновнаяДекларацияНаименование = Ложь)

	Результат = ПолучитьИзВременногоХранилища(АдресРезультата);
	
	Если ТипЗнч(Результат) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	Отчеты.Очистить();
	Отчеты.Загрузить(Результат.ТаблицаДекларацииПоОбособленнымПодразделениям);
	
	Если Результат.Свойство("СообщенияОбОшибках") И Результат.СообщенияОбОшибках <> Неопределено
		И Результат.СообщенияОбОшибках.Количество() > 0 Тогда
		Для Каждого ТекстОшибки Из Результат.СообщенияОбОшибках Цикл
			ОбщегоНазначения.СообщитьПользователю(ТекстОшибки);
		КонецЦикла;
	КонецЕсли; 
	
	ТребуетсяСозданиеДеклараций = Ложь;
	ДекларацииПоОбособленнымПодразделениямПредставление = Результат.ДекларацииПоОбособленнымПодразделениямПредставление;
	ТребуетсяИсправлениеДеклараций = Результат.ТребуетсяИсправлениеДеклараций;
	АдресДекларацииПоОбособленнымПодразделениям = 
		ПоместитьВоВременноеХранилище(Результат.ТаблицаДекларацииПоОбособленнымПодразделениям, АдресДекларацииПоОбособленнымПодразделениям); 
	Если ОбновитьОсновнаяДекларацияНаименование Тогда
		ОсновнаяДекларацияНаименование = Обработки.ПомощникУплатыНалога.ПредставлениеДекларации(ОсновнаяДекларация); 
	КонецЕсли;
	УправлениеФормой();

КонецПроцедуры

&НаСервере
Функция ИсправитьДекларацииНаСервере()

	ТаблицаДекларацииПоОбособленнымПодразделениям = ПолучитьИзВременногоХранилища(АдресДекларацииПоОбособленнымПодразделениям);
	ПараметрыОперации = Новый Структура;
	ПараметрыОперации.Вставить("ОсновнаяДекларация",                            ОсновнаяДекларация);   
	ПараметрыОперации.Вставить("Организация",                                   Организация);   
	ПараметрыОперации.Вставить("ТаблицаДекларацииПоОбособленнымПодразделениям", ТаблицаДекларацииПоОбособленнымПодразделениям);
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Исправление деклараций по налогу на прибыль по обособленным подразделениям'");
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;
	
	Возврат ДлительныеОперации.ВыполнитьФункцию(
		ПараметрыВыполнения,
		"НалогНаПрибыльДекларация.ИсправлениеДекларацийПоОбособленнымПодразделениям",
		ПараметрыОперации);

КонецФункции

&НаКлиенте
Процедура ПриИсправленииДеклараций(Результат, ДополнительныеПараметры) Экспорт

	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Ошибка" Тогда
		ВызватьИсключение Результат.КраткоеПредставлениеОшибки;
	КонецЕсли;
	
	ЗагрузитьРезультатДеклараций(Результат.АдресРезультата);

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьДекларации()

	ДлительнаяОперация = ОбновитьДекларацииНаСервере();
	
	Если ДлительнаяОперация.Статус = "Выполнено" Тогда 
		ЗагрузитьРезультатДеклараций(ДлительнаяОперация.АдресРезультата, Истина);
	Иначе
		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		ПараметрыОжидания.ВыводитьОкноОжидания = Истина;
		
		ОповещениеОЗавершении = Новый ОписаниеОповещения("ПриФормированииДеклараций", ЭтотОбъект);
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ОбновитьДекларацииНаСервере()

	ПараметрыОперации = Новый Структура;
	ПараметрыОперации.Вставить("ОсновнаяДекларация", ОсновнаяДекларация);
	ПараметрыОперации.Вставить("Организация", Организация);
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Проверка деклараций по налогу на прибыль по обособленным подразделениям'");
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;
	
	Возврат ДлительныеОперации.ВыполнитьФункцию(
		ПараметрыВыполнения,
		"НалогНаПрибыльДекларация.ОбновитьДекларацииПоОбособленнымПодразделениям",
		ПараметрыОперации);

КонецФункции

&НаСервере
Процедура ОбновитьДанныеДекларацииОбособленногоПодразделения()

	Если Не ЗначениеЗаполнено(ТекущаяДекларация) Тогда
		Возврат;
	КонецЕсли;
	
	СтрокиТаблицы = Отчеты.НайтиСтроки(Новый Структура("РегламентированныйОтчет", ТекущаяДекларация));
	Если СтрокиТаблицы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	СтрокаТаблицы = СтрокиТаблицы[0];
	
	СведенияОтчета = ОсновнаяДекларация.ДанныеОтчета.Получить();
	ДеревоРаздела = СведенияОтчета.ДанныеМногоуровневыхРазделов.Лист02;
	ДанныеОсновнойДекларации = ДеревоРаздела.Строки[0].Строки[4].Строки;
	
	СведенияОтчета = ТекущаяДекларация.ДанныеОтчета.Получить();
	ДеревоРаздела = СведенияОтчета.ДанныеМногоуровневыхРазделов.Лист02;
	ДанныеДекларации = ДеревоРаздела.Строки[0].Строки[4].Строки[0].Данные;
	
	ИндексСтроки = Отчеты.Индекс(СтрокаТаблицы);
	Если Не ОбщегоНазначения.ДанныеСовпадают(ДанныеОсновнойДекларации[ИндексСтроки + 1].Данные, ДанныеДекларации) Тогда
		СтрокаТаблицы.ТребуетсяИсправление = Истина;
		ТребуетсяИсправлениеДеклараций = Истина;
	Иначе
		СтрокаТаблицы.ТребуетсяИсправление = Ложь;
		СтрокиТаблицыКИсправлению = Отчеты.НайтиСтроки(Новый Структура("ТребуетсяИсправление", Истина));
		Если СтрокиТаблицыКИсправлению.Количество() = 0 Тогда
			ТребуетсяИсправлениеДеклараций = Ложь;
		КонецЕсли;
	КонецЕсли;
	СтрокаТаблицы.ДоляНалоговойБазы = РегламентированнаяОтчетность.ПоказательОтчета(ДанныеДекларации, "П000250004003");
	СтрокаТаблицы.СуммаНалога = РегламентированнаяОтчетность.ПоказательОтчета(ДанныеДекларации, "П000250007003"); 
	СтрокаТаблицы.Комментарий = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтрокаТаблицы.РегламентированныйОтчет, "Комментарий");
	
	СостояниеОтправкиОбновлено = Ложь;
	ОбновитьСтатусДекларации(СтрокаТаблицы.РегламентированныйОтчет, СтрокаТаблицы, СостояниеОтправкиОбновлено); 
	Если Не СостояниеОтправкиОбновлено Тогда
		АдресДекларацииПоОбособленнымПодразделениям = ПоместитьВоВременноеХранилище(Отчеты.Выгрузить(), АдресДекларацииПоОбособленнымПодразделениям);
	КонецЕсли;
	ТекущаяДекларация = Документы.РегламентированныйОтчет.ПустаяСсылка();
	УправлениеФормой();

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСтатусыДеклараций()

	ДлительнаяОперация = ОбновитьСтатусыДекларацийНаСервере();
	
	Если ДлительнаяОперация.Статус = "Выполнено" Тогда
		ЗагрузитьРезультатДеклараций(ДлительнаяОперация.АдресРезультата, Истина);
	Иначе
		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		ПараметрыОжидания.ВыводитьОкноОжидания = Истина;
		
		ОповещениеОЗавершении = Новый ОписаниеОповещения("ПриОбновленииСтатусовДеклараций", ЭтотОбъект);
		ДлительныеОперацииКлиент.ОжидатьЗавершение(ДлительнаяОперация, ОповещениеОЗавершении, ПараметрыОжидания);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция ОбновитьСтатусыДекларацийНаСервере()

	ТаблицаДекларацииПоОбособленнымПодразделениям = ПолучитьИзВременногоХранилища(АдресДекларацииПоОбособленнымПодразделениям);
	ПараметрыОперации = Новый Структура;
	ПараметрыОперации.Вставить("ТаблицаДекларацииПоОбособленнымПодразделениям", ТаблицаДекларацииПоОбособленнымПодразделениям);
	
	ПараметрыВыполнения = ДлительныеОперации.ПараметрыВыполненияФункции(УникальныйИдентификатор);
	ПараметрыВыполнения.НаименованиеФоновогоЗадания = НСтр("ru = 'Обновление статусов деклараций по налогу на прибыль по обособленным подразделениям'");
	ПараметрыВыполнения.ЗапуститьВФоне = Истина;
	
	Возврат ДлительныеОперации.ВыполнитьФункцию(
		ПараметрыВыполнения,
		"НалогНаПрибыльДекларация.ОбновитьСтатусыДекларацийПоОбособленнымПодразделениям",
		ПараметрыОперации);

КонецФункции

&НаКлиенте
Процедура ПриОбновленииСтатусовДеклараций(Результат, ДополнительныеПараметры) Экспорт 

	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Ошибка" Тогда
		ВызватьИсключение Результат.КраткоеПредставлениеОшибки;
	КонецЕсли;

	ЗагрузитьРезультатДеклараций(Результат.АдресРезультата, Истина);

КонецПроцедуры

&НаСервере
Процедура ОбновитьСтатусДекларации(Декларация, СтрокаТаблицы = Неопределено, СостояниеОтправкиОбновлено = Ложь)
	
	Если СтрокаТаблицы = Неопределено Тогда
		СтрокиТаблицы = Отчеты.НайтиСтроки(Новый Структура("РегламентированныйОтчет", Декларация));
		Если СтрокиТаблицы.Количество() = 0 Тогда
			Возврат;
		КонецЕсли;
		СтрокаТаблицы = СтрокиТаблицы[0];
	КонецЕсли;

	СостояниеДекларации = ИнтерфейсыВзаимодействияБРО.СостояниеДокумента(СтрокаТаблицы.РегламентированныйОтчет);
	Если СтрокаТаблицы.СостояниеОтправки <> СостояниеДекларации.Представление Тогда 
		СтрокаТаблицы.СостояниеОтправки = СостояниеДекларации.Представление;
		АдресДекларацииПоОбособленнымПодразделениям = ПоместитьВоВременноеХранилище(Отчеты.Выгрузить(), АдресДекларацииПоОбособленнымПодразделениям);
		НалоговыйУчетОбособленныхПодразделений.ЗаполнитьДекларацииПоОбособленнымПодразделениямПредставление(
			ДекларацииПоОбособленнымПодразделениямПредставление, Отчеты);
		СостояниеОтправкиОбновлено = Истина;
	КонецЕсли;
	СтрокаТаблицы = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОбмен(ВыбранныеОрганизации)

	ПараметрыДлительногоОбмена = ДлительнаяОтправкаКлиент.ПараметрыДлительногоОбмена();
	ПараметрыДлительногоОбмена.Организации 					= ВыбранныеОрганизации;
	ПараметрыДлительногоОбмена.ЭтоОбменИзФормы1СОтчетность 	= Ложь;
	
	Если НЕ ДлительнаяОтправкаКлиент.ПоказатьФормуДлительногоОбмена(ПараметрыДлительногоОбмена) Тогда
		Возврат;
	КонецЕсли;
	ОписаниеОповещения = Новый ОписаниеОповещения(
		"ОсуществитьОбменПоОрганизацииЗавершение",
		ЭтотОбъект);
		
	КонтекстЭДОКлиент.ОсуществитьОбменПоОрганизации(
		ЭтотОбъект,
		Организация,
		ОписаниеОповещения);

КонецПроцедуры

&НаКлиенте
Процедура ОсуществитьОбменПоОрганизацииЗавершение(Результат, ДополнительныеПараметры) Экспорт

	ДлительнаяОтправкаКлиент.ОповеститьОЗавершенииОбмена(); 

КонецПроцедуры

&НаСервере
Процедура ДополнитьОтборГрупповойОтправки(ДополнительныеПараметры)

	Ссылки = Новый Массив;
	Для каждого Строка Из Отчеты Цикл
		Ссылки.Добавить(Строка.РегламентированныйОтчет);
	КонецЦикла;
	
	Ссылки.Добавить(ОсновнаяДекларация);
	ДополнительныеПараметры.Вставить("Ссылки", Ссылки);

КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление(ТребуетсяИсправлениеДеклараций)

	УсловноеОформление.Элементы.Очистить();
	
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ОтчетыПодразделение");
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ОтчетыРегистрацияВНалоговомОрганеНаименование");
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ОтчетыСостояниеОтправки");
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ОтчетыДоляНалоговойБазы");
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ОтчетыСуммаНалога");
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "ОтчетыКомментарий"); 
	
	ГруппаОтбора1 = КомпоновкаДанныхКлиентСервер.ДобавитьГруппуОтбора(ЭлементУО.Отбор.Элементы, ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаОтбора1,
		"Отчеты.ТребуетсяИсправление", ВидСравненияКомпоновкиДанных.Равно, Истина);
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ГруппаОтбора1,
		"Отчеты.ТребуетсяУдаление", ВидСравненияКомпоновкиДанных.Равно, Истина);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветФона", ЦветаСтиля.ЦветФонаПредупреждения);

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытииЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	
КонецПроцедуры

#КонецОбласти