
&Вместо("ПредставлениеПечатнойФормыМатериалыЗаказчика")
Функция ДБПредставлениеПечатнойФормыМатериалыЗаказчика()
	Возврат НСтр("ru='Отчет об использовании материалов'");
КонецФункции


&ИзменениеИКонтроль("ПечатьМатериалыЗаказчика")
Функция ДБПечатьМатериалыЗаказчика(Знач ДокументыДляПечати, ОбъектыПечати, ПараметрыПечати)

	ДокументыДляПечати = ОбщегоНазначенияКлиентСервер.СкопироватьМассив(ДокументыДляПечати);

	УправлениеДоступомБП.УдалитьНедоступныеЭлементыИзМассива(ДокументыДляПечати);

	УстановитьПривилегированныйРежим(Истина);

	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб			= Истина;
	ТабличныйДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.КлючПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_ПоступлениеИзПереработки_МатериалыЗаказчика";

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДокументыДляПечати", ДокументыДляПечати);
	// Порядок записей в выборке должен совпадать в обоих запросах.
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПоступлениеИзПереработки.Ссылка КАК Ссылка,
	|	ПоступлениеИзПереработки.Номер КАК Номер,
	|	ПоступлениеИзПереработки.Дата КАК Дата,
	|	ПоступлениеИзПереработки.Организация КАК Организация,
	|	ПоступлениеИзПереработки.Контрагент КАК Контрагент,
	|	ПоступлениеИзПереработки.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	ПРЕДСТАВЛЕНИЕ(ПоступлениеИзПереработки.ДоговорКонтрагента) КАК ДоговорКонтрагентаПредставление,
	|	ПоступлениеИзПереработки.ВалютаДокумента КАК ВалютаДокумента,
	|	ЕСТЬNULL(ПоступлениеИзПереработки.ДоговорКонтрагента.ГосударственныйКонтракт.Код, """") КАК ГосударственныйКонтракт
	|ИЗ
	|	Документ.ПоступлениеИзПереработки КАК ПоступлениеИзПереработки
	|ГДЕ
	|	ПоступлениеИзПереработки.Ссылка В(&ДокументыДляПечати)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПоступлениеИзПереработки.Дата,
	|	ПоступлениеИзПереработки.Номер,
	|	ПоступлениеИзПереработки.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Материалы.Ссылка КАК Ссылка,
	|	Материалы.Номенклатура КАК Номенклатура,
	|	ВЫБОР
	|		КОГДА Материалы.Номенклатура.НаименованиеПолное = """"
	|			ТОГДА ПРЕДСТАВЛЕНИЕ(Материалы.Номенклатура)
	|		ИНАЧЕ Материалы.Номенклатура.НаименованиеПолное
	|	КОНЕЦ КАК Товар,
	|	ВЫБОР
	|		КОГДА ДополнительнаяКолонка.Значение = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА Материалы.Номенклатура.Артикул
	|		КОГДА ДополнительнаяКолонка.Значение = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Код)
	|			ТОГДА Материалы.Номенклатура.Код
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК КодАртикул,
	|	СУММА(Материалы.Количество) КАК Количество,
	|	Материалы.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения
	|ИЗ
	|	Документ.ПоступлениеИзПереработки.ИспользованныеМатериалы КАК Материалы,
	|	Константа.ДополнительнаяКолонкаПечатныхФормДокументов КАК ДополнительнаяКолонка
	|ГДЕ
	|	Материалы.Ссылка В(&ДокументыДляПечати)
	|
	|СГРУППИРОВАТЬ ПО
	|	Материалы.Ссылка,
	|	Материалы.Номенклатура,
	|	Материалы.Номенклатура.ЕдиницаИзмерения,
	|	ВЫБОР
	|		КОГДА ДополнительнаяКолонка.Значение = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Артикул)
	|			ТОГДА Материалы.Номенклатура.Артикул
	|		КОГДА ДополнительнаяКолонка.Значение = ЗНАЧЕНИЕ(Перечисление.ДополнительнаяКолонкаПечатныхФормДокументов.Код)
	|			ТОГДА Материалы.Номенклатура.Код
	|		ИНАЧЕ """"
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Материалы.Номенклатура.НаименованиеПолное = """"
	|			ТОГДА ПРЕДСТАВЛЕНИЕ(Материалы.Номенклатура)
	|		ИНАЧЕ Материалы.Номенклатура.НаименованиеПолное
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Материалы.Ссылка.Дата,
	|	Материалы.Ссылка.Номер,
	|	Материалы.Ссылка,
	|	МИНИМУМ(Материалы.НомерСтроки)
	|ИТОГИ ПО
	|	Ссылка";

	Результат = Запрос.ВыполнитьПакет();
	ЗаголовкиДокументов = Результат[0].Выбрать();
	ДанныеДокументов    = Результат[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);

	// Описание макета
	ПредставлениеФормы = ПредставлениеПечатнойФормыМатериалыЗаказчика();
#Удаление
	ИменаОбластей = СтрРазделить("Заголовок,Поставщик,Получатель,ИтогоМатериалы,Подписи", ",");
#КонецУдаления
#Вставка
	ИменаОбластей = СтрРазделить("Заголовок,Поставщик,Получатель,ПолучательДоп,ИтогоМатериалы,Подписи", ",");
#КонецВставки

	ПараметрыВыводаСписка = ПечатьТорговыхДокументов.ПараметрыВыводаСпискаКодАртикул(
	"ШапкаТаблицыМатериалыЗаказчика",
	"СтрокаМатериалыЗаказчика",
	"СКодом");
	ИменаОбластей.Добавить(ПараметрыВыводаСписка.ИмяОбластиШапка);
	ИменаОбластей.Добавить(ПараметрыВыводаСписка.ИмяОбластиСтрока);

	ОбластиМакета = ПечатьТорговыхДокументов.ОбластиМакета("Документ.ПоступлениеИзПереработки.ПФ_MXL_Акт", ИменаОбластей);

	МакетШапкиСписка = ОбластиМакета[ПараметрыВыводаСписка.ИмяОбластиШапка];
	ДанныеОбласти = Новый Структура;
	ДанныеОбласти.Вставить("ИмяКодАртикул", ПараметрыВыводаСписка.ЗаголовокКолонкиКодАртикул);
	МакетШапкиСписка.Параметры.Заполнить(ДанныеОбласти);

	// Вывод данных
	ПервыйДокумент = Истина;

	Пока ДанныеДокументов.Следующий() Цикл

		Ссылка = ДанныеДокументов.Ссылка;

		СтрокиДокумента = ДанныеДокументов.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Если Не ЗаголовкиДокументов.НайтиСледующий(ДанныеДокументов.Ссылка) Тогда
			Продолжить;
		КонецЕсли;

		Если ПервыйДокумент Тогда
			ПервыйДокумент = Ложь;
		Иначе
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;

		// Запомним номер строки, с которой начали выводить текущий документ.
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;

		// ШАПКА

		// Заголовок

		ПоляЗаголовка = Новый Структура("Номер, Дата, ГосударственныйКонтракт");
		ЗаполнитьЗначенияСвойств(ПоляЗаголовка, ЗаголовкиДокументов);

		ДанныеОбласти = Новый Структура;
		ДанныеОбласти.Вставить(
		"ТекстЗаголовка",
		ОбщегоНазначенияБПВызовСервера.СформироватьЗаголовокДокумента(ПоляЗаголовка, ПредставлениеФормы, Истина));

		ОбластиМакета.Заголовок.Параметры.Заполнить(ДанныеОбласти);

		// Исполнитель

		СведенияОКонтрагенте = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(
		ЗаголовкиДокументов.Контрагент,
		ЗаголовкиДокументов.Дата);

		ДанныеОбласти = Новый Структура;
		ДанныеОбласти.Вставить(
		"Поставщик",
		ЗаголовкиДокументов.Контрагент);
		ДанныеОбласти.Вставить(
		"ПредставлениеПоставщика",
		ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОКонтрагенте, "НаименованиеДляПечатныхФорм"));

		ОбластиМакета.Поставщик.Параметры.Заполнить(ДанныеОбласти);

		// Заказчик

		ДанныеОбласти = Новый Структура;
		СведенияОбОрганизации = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(
		ЗаголовкиДокументов.Организация,
		ЗаголовкиДокументов.Дата);
		ДанныеОбласти.Вставить(
		"Получатель",
		ЗаголовкиДокументов.Организация);
		ДанныеОбласти.Вставить(
		"ПредставлениеПолучателя",
		ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(СведенияОбОрганизации, "НаименованиеДляПечатныхФорм"));
		ДанныеОбласти.Вставить(
		"Основание",
		ЗаголовкиДокументов.ДоговорКонтрагентаПредставление);

		ОбластиМакета.Получатель.Параметры.Заполнить(ДанныеОбласти);

#Удаление
		// Выводим макеты шапки

		ТабличныйДокумент.Вывести(ОбластиМакета.Заголовок);
		ТабличныйДокумент.Вывести(ОбластиМакета.Поставщик);
		ТабличныйДокумент.Вывести(ОбластиМакета.Получатель);
#КонецУдаления
#Вставка 
		// ПолучательДоп

		ДанныеОбласти = Новый Структура;
		ДанныеОбласти.Вставить(
		"ОбъектЭксплуатации",
		Ссылка.НоменклатурнаяГруппа);

		ОбластиМакета.ПолучательДоп.Параметры.Заполнить(ДанныеОбласти);

		// Выводим макеты шапки

		ТабличныйДокумент.Вывести(ОбластиМакета.Заголовок);
		ТабличныйДокумент.Вывести(ОбластиМакета.Поставщик);
		ТабличныйДокумент.Вывести(ОбластиМакета.Получатель);		
		ТабличныйДокумент.Вывести(ОбластиМакета.ПолучательДоп);
		Высота = ТабличныйДокумент.ВысотаТаблицы-1;
		Ширина = ТабличныйДокумент.ШиринаТаблицы;
		ОблОб = СтрШаблон("R%1C9:R%1C%2",Высота,Ширина);
		ТабличныйДокумент.Область(ОблОб).Объединить();

#КонецВставки

		// СПИСОК МАТЕРИАЛОВ
		ТабличныйДокумент.Вывести(МакетШапкиСписка);

		МакетСтроки = ОбластиМакета[ПараметрыВыводаСписка.ИмяОбластиСтрока];

		ДанныеОбласти = Новый Структура("НомерСтроки, КодАртикул, Товар, Количество, ЕдиницаИзмерения");
		ДанныеОбласти.НомерСтроки = 0;

		Пока СтрокиДокумента.Следующий() Цикл

			ДанныеОбласти.НомерСтроки = ДанныеОбласти.НомерСтроки + 1;

			ЗаполнитьЗначенияСвойств(ДанныеОбласти, СтрокиДокумента);

			МакетСтроки.Параметры.Заполнить(ДанныеОбласти);

			ТабличныйДокумент.Вывести(МакетСтроки);

		КонецЦикла;

		// ПОДВАЛ
		ТабличныйДокумент.Вывести(ОбластиМакета.ИтогоМатериалы);
		ТабличныйДокумент.Вывести(ОбластиМакета.Подписи);

		// В табличном документе зададим имя области, в которую был
		// выведен объект. Нужно для возможности печати покомплектно.
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, Ссылка);

	КонецЦикла;

	Возврат ТабличныйДокумент;
	
КонецФункции

